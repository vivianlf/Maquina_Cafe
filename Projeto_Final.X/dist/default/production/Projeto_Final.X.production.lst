

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 12:16:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4520 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  001C12                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _antes
    90  001C12  04                 	db	4
    91                           
    92                           	psect	smallconst
    93  000600                     __psmallconst:
    94                           	callstack 0
    95  000600  00                 	db	0
    96  000601                     _valor:
    97                           	callstack 0
    98  000601  3F                 	db	63
    99  000602  06                 	db	6
   100  000603  5B                 	db	91
   101  000604  4F                 	db	79
   102  000605  66                 	db	102
   103  000606  6D                 	db	109
   104  000607  7D                 	db	125
   105  000608  07                 	db	7
   106  000609  7F                 	db	127
   107  00060A  6F                 	db	111
   108  00060B  77                 	db	119
   109  00060C  7C                 	db	124
   110  00060D  39                 	db	57
   111  00060E  5E                 	db	94
   112  00060F  79                 	db	121
   113  000610  71                 	db	113
   114  000611                     __end_of_valor:
   115                           	callstack 0
   116  000611  55                 	db	85
   117  000612  4C                 	db	76
   118  000613  44                 	db	68
   119  000614  52                 	db	82
   120  000615  53                 	db	83
   121  000616  58                 	db	88
   122  000617  41                 	db	65
   123  000618  42                 	db	66
   124  000619  59                 	db	89
   125  00061A  73                 	db	115
   126  00061B                     __end_of_charKey:
   127                           	callstack 0
   128  0000                     _TRISE	set	3990
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISC	set	3988
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISA	set	3986
   133  0000                     _PORTE	set	3972
   134  0000                     _PORTD	set	3971
   135  0000                     _PORTC	set	3970
   136  0000                     _PORTB	set	3969
   137  0000                     _PORTA	set	3968
   138  0000                     _T0CON	set	4053
   139  0000                     _TMR0L	set	4054
   140  0000                     _TMR0H	set	4055
   141  0000                     _INTCON	set	4082
   142  0000                     _ADCON1	set	4033
   143  00061B                     STR_9:
   144  00061B  4E                 	db	78	;'N'
   145  00061C  6F                 	db	111	;'o'
   146  00061D  72                 	db	114	;'r'
   147  00061E  6D                 	db	109	;'m'
   148  00061F  61                 	db	97	;'a'
   149  000620  6C                 	db	108	;'l'
   150  000621  2F                 	db	47
   151  000622  46                 	db	70	;'F'
   152  000623  6F                 	db	111	;'o'
   153  000624  72                 	db	114	;'r'
   154  000625  74                 	db	116	;'t'
   155  000626  65                 	db	101	;'e'
   156  000627  2F                 	db	47
   157  000628  45                 	db	69	;'E'
   158  000629  78                 	db	120	;'x'
   159  00062A  74                 	db	116	;'t'
   160  00062B  72                 	db	114	;'r'
   161  00062C  61                 	db	97	;'a'
   162  00062D  00                 	db	0
   163  00062E                     STR_7:
   164  00062E  45                 	db	69	;'E'
   165  00062F  73                 	db	115	;'s'
   166  000630  63                 	db	99	;'c'
   167  000631  6F                 	db	111	;'o'
   168  000632  6C                 	db	108	;'l'
   169  000633  68                 	db	104	;'h'
   170  000634  61                 	db	97	;'a'
   171  000635  20                 	db	32
   172  000636  31                 	db	49	;'1'
   173  000637  20                 	db	32
   174  000638  63                 	db	99	;'c'
   175  000639  61                 	db	97	;'a'
   176  00063A  66                 	db	102	;'f'
   177  00063B  65                 	db	101	;'e'
   178  00063C  3A                 	db	58	;':'
   179  00063D  00                 	db	0
   180  00063E                     STR_4:
   181  00063E  4C                 	db	76	;'L'
   182  00063F  61                 	db	97	;'a'
   183  000640  74                 	db	116	;'t'
   184  000641  74                 	db	116	;'t'
   185  000642  65                 	db	101	;'e'
   186  000643  20                 	db	32
   187  000644  4D                 	db	77	;'M'
   188  000645  61                 	db	97	;'a'
   189  000646  63                 	db	99	;'c'
   190  000647  63                 	db	99	;'c'
   191  000648  68                 	db	104	;'h'
   192  000649  69                 	db	105	;'i'
   193  00064A  61                 	db	97	;'a'
   194  00064B  74                 	db	116	;'t'
   195  00064C  6F                 	db	111	;'o'
   196  00064D  00                 	db	0
   197  00064E                     STR_8:
   198  00064E  38                 	db	56	;'8'
   199  00064F  2D                 	db	45
   200  000650  4E                 	db	78	;'N'
   201  000651  61                 	db	97	;'a'
   202  000652  6F                 	db	111	;'o'
   203  000653  20                 	db	32
   204  000654  20                 	db	32
   205  000655  20                 	db	32
   206  000656  20                 	db	32
   207  000657  36                 	db	54	;'6'
   208  000658  2D                 	db	45
   209  000659  53                 	db	83	;'S'
   210  00065A  69                 	db	105	;'i'
   211  00065B  6D                 	db	109	;'m'
   212  00065C  00                 	db	0
   213  00065D                     STR_11:
   214  00065D  51                 	db	81	;'Q'
   215  00065E  75                 	db	117	;'u'
   216  00065F  65                 	db	101	;'e'
   217  000660  72                 	db	114	;'r'
   218  000661  20                 	db	32
   219  000662  61                 	db	97	;'a'
   220  000663  63                 	db	99	;'c'
   221  000664  75                 	db	117	;'u'
   222  000665  63                 	db	99	;'c'
   223  000666  61                 	db	97	;'a'
   224  000667  72                 	db	114	;'r'
   225  000668  3F                 	db	63	;'?'
   226  000669  3F                 	db	63	;'?'
   227  00066A  00                 	db	0
   228  00066B                     STR_2:
   229  00066B  43                 	db	67	;'C'
   230  00066C  61                 	db	97	;'a'
   231  00066D  66                 	db	102	;'f'
   232  00066E  65                 	db	101	;'e'
   233  00066F  20                 	db	32
   234  000670  45                 	db	69	;'E'
   235  000671  78                 	db	120	;'x'
   236  000672  70                 	db	112	;'p'
   237  000673  72                 	db	114	;'r'
   238  000674  65                 	db	101	;'e'
   239  000675  73                 	db	115	;'s'
   240  000676  73                 	db	115	;'s'
   241  000677  6F                 	db	111	;'o'
   242  000678  00                 	db	0
   243  000679                     STR_10:
   244  000679  30                 	db	48	;'0'
   245  00067A  2D                 	db	45
   246  00067B  4E                 	db	78	;'N'
   247  00067C  20                 	db	32
   248  00067D  31                 	db	49	;'1'
   249  00067E  2D                 	db	45
   250  00067F  46                 	db	70	;'F'
   251  000680  20                 	db	32
   252  000681  32                 	db	50	;'2'
   253  000682  2D                 	db	45
   254  000683  45                 	db	69	;'E'
   255  000684  46                 	db	70	;'F'
   256  000685  00                 	db	0
   257  000686                     STR_1:
   258  000686  43                 	db	67	;'C'
   259  000687  61                 	db	97	;'a'
   260  000688  66                 	db	102	;'f'
   261  000689  65                 	db	101	;'e'
   262  00068A  20                 	db	32
   263  00068B  63                 	db	99	;'c'
   264  00068C  61                 	db	97	;'a'
   265  00068D  73                 	db	115	;'s'
   266  00068E  65                 	db	101	;'e'
   267  00068F  69                 	db	105	;'i'
   268  000690  72                 	db	114	;'r'
   269  000691  6F                 	db	111	;'o'
   270  000692  00                 	db	0
   271  000693                     STR_3:
   272  000693  43                 	db	67	;'C'
   273  000694  61                 	db	97	;'a'
   274  000695  70                 	db	112	;'p'
   275  000696  70                 	db	112	;'p'
   276  000697  75                 	db	117	;'u'
   277  000698  63                 	db	99	;'c'
   278  000699  63                 	db	99	;'c'
   279  00069A  69                 	db	105	;'i'
   280  00069B  6E                 	db	110	;'n'
   281  00069C  6F                 	db	111	;'o'
   282  00069D  00                 	db	0
   283  00069E                     STR_17:
   284  00069E  50                 	db	80	;'P'
   285  00069F  65                 	db	101	;'e'
   286  0006A0  67                 	db	103	;'g'
   287  0006A1  75                 	db	117	;'u'
   288  0006A2  65                 	db	101	;'e'
   289  0006A3  20                 	db	32
   290  0006A4  3A                 	db	58	;':'
   291  0006A5  20                 	db	32
   292  0006A6  00                 	db	0
   293  0006A7                     STR_13:
   294  0006A7  46                 	db	70	;'F'
   295  0006A8  61                 	db	97	;'a'
   296  0006A9  7A                 	db	122	;'z'
   297  0006AA  65                 	db	101	;'e'
   298  0006AB  6E                 	db	110	;'n'
   299  0006AC  64                 	db	100	;'d'
   300  0006AD  6F                 	db	111	;'o'
   301  0006AE  3A                 	db	58	;':'
   302  0006AF  00                 	db	0
   303  0006B0                     STR_16:
   304  0006B0  45                 	db	69	;'E'
   305  0006B1  78                 	db	120	;'x'
   306  0006B2  2E                 	db	46
   307  0006B3  46                 	db	70	;'F'
   308  0006B4  6F                 	db	111	;'o'
   309  0006B5  72                 	db	114	;'r'
   310  0006B6  74                 	db	116	;'t'
   311  0006B7  65                 	db	101	;'e'
   312  0006B8  00                 	db	0
   313  0006B9                     STR_14:
   314  0006B9  4E                 	db	78	;'N'
   315  0006BA  6F                 	db	111	;'o'
   316  0006BB  72                 	db	114	;'r'
   317  0006BC  6D                 	db	109	;'m'
   318  0006BD  61                 	db	97	;'a'
   319  0006BE  6C                 	db	108	;'l'
   320  0006BF  00                 	db	0
   321  0006C0                     STR_6:
   322  0006C0  43                 	db	67	;'C'
   323  0006C1  2F                 	db	47
   324  0006C2  41                 	db	65	;'A'
   325  0006C3  00                 	db	0
   326  0006C4                     STR_5:
   327  0006C4  53                 	db	83	;'S'
   328  0006C5  2F                 	db	47
   329  0006C6  41                 	db	65	;'A'
   330  0006C7  00                 	db	0
   331  0006C8  00                 	db	0	; dummy byte at the end
   332  0000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336  001B20                     __pcinit:
   337                           	callstack 0
   338  001B20                     start_initialization:
   339                           	callstack 0
   340  001B20                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to COMRAM (1 bytes)
   344                           ; load TBLPTR registers with __pidataCOMRAM
   345  001B20  0E12               	movlw	low __pidataCOMRAM
   346  001B22  6EF6               	movwf	tblptrl,c
   347  001B24  0E1C               	movlw	high __pidataCOMRAM
   348  001B26  6EF7               	movwf	tblptrh,c
   349  001B28  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   350  001B2A  6EF8               	movwf	tblptru,c
   351  001B2C  0009               	tblrd		*+	;fetch initializer
   352  001B2E  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   353                           
   354                           ; Clear objects allocated to COMRAM (36 bytes)
   355  001B32  EE00  F001         	lfsr	0,__pbssCOMRAM
   356  001B36  0E24               	movlw	36
   357  001B38                     clear_0:
   358  001B38  6AEE               	clrf	postinc0,c
   359  001B3A  06E8               	decf	wreg,f,c
   360  001B3C  E1FD               	bnz	clear_0
   361  001B3E                     end_of_initialization:
   362                           	callstack 0
   363  001B3E                     __end_of__initialization:
   364                           	callstack 0
   365  001B3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   366  001B40  6EF8               	movwf	tblptru,c
   367  001B42  0100               	movlb	0
   368  001B44  EF89  F006         	goto	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMRAM
   371  000001                     __pbssCOMRAM:
   372                           	callstack 0
   373  000001                     _escolhido:
   374                           	callstack 0
   375  000001                     	ds	4
   376  000005                     _latte:
   377                           	callstack 0
   378  000005                     	ds	4
   379  000009                     _cappu:
   380                           	callstack 0
   381  000009                     	ds	4
   382  00000D                     _expresso:
   383                           	callstack 0
   384  00000D                     	ds	4
   385  000011                     _caseiro:
   386                           	callstack 0
   387  000011                     	ds	4
   388  000015                     kpDebounce@oldRead:
   389                           	callstack 0
   390  000015                     	ds	2
   391  000017                     kpDebounce@newRead:
   392                           	callstack 0
   393  000017                     	ds	2
   394  000019                     _keys:
   395                           	callstack 0
   396  000019                     	ds	2
   397  00001B                     _seg:
   398                           	callstack 0
   399  00001B                     	ds	2
   400  00001D                     _v3:
   401                           	callstack 0
   402  00001D                     	ds	1
   403  00001E                     _v2:
   404                           	callstack 0
   405  00001E                     	ds	1
   406  00001F                     _v1:
   407                           	callstack 0
   408  00001F                     	ds	1
   409  000020                     _v0:
   410                           	callstack 0
   411  000020                     	ds	1
   412  000021                     _display:
   413                           	callstack 0
   414  000021                     	ds	1
   415  000022                     kpDebounce@tempo:
   416                           	callstack 0
   417  000022                     	ds	1
   418  000023                     _escolha:
   419                           	callstack 0
   420  000023                     	ds	1
   421  000024                     _start:
   422                           	callstack 0
   423  000024                     	ds	1
   424                           
   425                           	psect	dataCOMRAM
   426  00003F                     __pdataCOMRAM:
   427                           	callstack 0
   428  00003F                     _antes:
   429                           	callstack 0
   430  00003F                     	ds	1
   431                           
   432                           	psect	cstackCOMRAM
   433  000025                     __pcstackCOMRAM:
   434                           	callstack 0
   435  000025                     ?_kpRead:
   436                           	callstack 0
   437  000025                     ?_digitalRead:
   438                           	callstack 0
   439  000025                     ?___awdiv:
   440                           	callstack 0
   441  000025                     atraso@N:
   442                           	callstack 0
   443  000025                     delayMicro@a:
   444                           	callstack 0
   445  000025                     delayMili@a:
   446                           	callstack 0
   447  000025                     timerReset@tempo:
   448                           	callstack 0
   449  000025                     digitalWrite@pin:
   450                           	callstack 0
   451  000025                     digitalRead@pin:
   452                           	callstack 0
   453  000025                     pinMode@pin:
   454                           	callstack 0
   455  000025                     ___awdiv@dividend:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x0
   459  000025                     	ds	1
   460  000026                     atraso@h:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x1
   464  000026                     	ds	1
   465  000027                     ??_digitalRead:
   466  000027                     ??_delayMili:
   467  000027                     atraso@j:
   468                           	callstack 0
   469  000027                     timerReset@ciclos:
   470                           	callstack 0
   471  000027                     digitalWrite@value:
   472                           	callstack 0
   473  000027                     pinMode@type:
   474                           	callstack 0
   475  000027                     ___awdiv@divisor:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000027                     	ds	1
   480  000028                     atraso@k:
   481                           	callstack 0
   482  000028                     delayMili@i:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x3
   486  000028                     	ds	1
   487  000029                     ??_pinMode:
   488  000029                     ??_digitalWrite:
   489  000029                     atraso@i:
   490                           	callstack 0
   491  000029                     ___awdiv@counter:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x4
   495  000029                     	ds	1
   496  00002A                     ___awdiv@sign:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x5
   500  00002A                     	ds	1
   501  00002B                     soWrite@value:
   502                           	callstack 0
   503  00002B                     ___awdiv@quotient:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x6
   507  00002B                     	ds	2
   508  00002D                     ?___awmod:
   509                           	callstack 0
   510  00002D                     soWrite@i:
   511                           	callstack 0
   512  00002D                     ___awmod@dividend:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x8
   516  00002D                     	ds	1
   517  00002E                     ??_kpDebounce:
   518  00002E                     ??_ssdUpdate:
   519  00002E                     pushNibble@rs:
   520                           	callstack 0
   521  00002E                     pushByte@rs:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525  00002E                     	ds	1
   526  00002F                     ___awmod@divisor:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xA
   530  00002F                     	ds	1
   531  000030                     ??_pushByte:
   532  000030                     pushNibble@value:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0xB
   536  000030                     	ds	1
   537  000031                     pushByte@value:
   538                           	callstack 0
   539  000031                     ___awmod@counter:
   540                           	callstack 0
   541  000031                     kpDebounce@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xC
   545  000031                     	ds	1
   546  000032                     lcdCommand@value:
   547                           	callstack 0
   548  000032                     lcdChar@value:
   549                           	callstack 0
   550  000032                     ___awmod@sign:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0xD
   554  000032                     	ds	1
   555  000033                     ssdDigit@pos:
   556                           	callstack 0
   557  000033                     leTeclado@tecla:
   558                           	callstack 0
   559  000033                     lcdString@msg:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0xE
   563  000033                     	ds	1
   564  000034                     ssdDigit@val:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0xF
   568  000034                     	ds	1
   569  000035                     ??_lcdString:
   570                           
   571                           ; 1 bytes @ 0x10
   572  000035                     	ds	2
   573  000037                     lcdString@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x12
   577  000037                     	ds	2
   578  000039                     ??_lcd:
   579  000039                     
   580                           ; 1 bytes @ 0x14
   581  000039                     	ds	2
   582  00003B                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x16
   585  00003B                     	ds	2
   586  00003D                     main@tempo:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x18
   590  00003D                     	ds	1
   591  00003E                     main@slot:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x19
   595  00003E                     	ds	1
   596                           
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 184 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  slot            1   25[COMRAM] unsigned char 
   607 ;;  tempo           1   24[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       0       0       0       0       0       0
   618 ;;      Locals:         2       0       0       0       0       0       0
   619 ;;      Temps:          2       0       0       0       0       0       0
   620 ;;      Totals:         4       0       0       0       0       0       0
   621 ;;Total ram usage:        4 bytes
   622 ;; Hardware stack levels required when called: 8
   623 ;; This function calls:
   624 ;;		___awdiv
   625 ;;		___awmod
   626 ;;		_cafes
   627 ;;		_kpInit
   628 ;;		_lcd
   629 ;;		_lcdInit
   630 ;;		_leTeclado
   631 ;;		_ssdDigit
   632 ;;		_ssdInit
   633 ;;		_ssdUpdate
   634 ;;		_termina
   635 ;;		_timerInit
   636 ;;		_timerReset
   637 ;;		_timerWait
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text0
   644  000D12                     __ptext0:
   645                           	callstack 0
   646  000D12                     _main:
   647                           	callstack 23
   648  000D12                     
   649                           ;main.c: 185:     lcdInit();
   650  000D12  ECE6  F00A         	call	_lcdInit	;wreg free
   651                           
   652                           ;main.c: 186:     ssdInit();
   653  000D16  EC78  F00C         	call	_ssdInit	;wreg free
   654                           
   655                           ;main.c: 187:     kpInit();
   656  000D1A  EC35  F00D         	call	_kpInit	;wreg free
   657                           
   658                           ;main.c: 188:     timerInit();
   659  000D1E  EC04  F00E         	call	_timerInit	;wreg free
   660  000D22                     
   661                           ;main.c: 189:     cafes();
   662  000D22  ECC8  F00D         	call	_cafes	;wreg free
   663  000D26                     l2307:
   664                           
   665                           ;main.c: 192:         timerReset(10);
   666  000D26  0E00               	movlw	0
   667  000D28  6E26               	movwf	(timerReset@tempo+1)^0,c
   668  000D2A  0E0A               	movlw	10
   669  000D2C  6E25               	movwf	timerReset@tempo^0,c
   670  000D2E  ECB7  F00D         	call	_timerReset	;wreg free
   671                           
   672                           ;main.c: 193:         switch(slot){
   673  000D32  EF29  F007         	goto	l2343
   674  000D36                     l2309:
   675                           
   676                           ;main.c: 195:                 leTeclado();
   677  000D36  ECB3  F005         	call	_leTeclado	;wreg free
   678  000D3A                     
   679                           ;main.c: 196:                 slot = 1;
   680  000D3A  0E01               	movlw	1
   681  000D3C  6E3E               	movwf	main@slot^0,c
   682                           
   683                           ;main.c: 197:                 break;
   684  000D3E  EF42  F007         	goto	l2345
   685  000D42                     l2313:
   686                           
   687                           ;main.c: 199:                 lcd();
   688  000D42  EC53  F007         	call	_lcd	;wreg free
   689  000D46                     
   690                           ;main.c: 200:                 slot = 2;
   691  000D46  0E02               	movlw	2
   692  000D48  6E3E               	movwf	main@slot^0,c
   693                           
   694                           ;main.c: 201:                 break;
   695  000D4A  EF42  F007         	goto	l2345
   696  000D4E                     l2317:
   697                           
   698                           ;main.c: 203:                 if(tempo>100){
   699  000D4E  0E64               	movlw	100
   700  000D50  643D               	cpfsgt	main@tempo^0,c
   701  000D52  EFAD  F006         	goto	u2301
   702  000D56  EFAF  F006         	goto	u2300
   703  000D5A                     u2301:
   704  000D5A  EFCB  F006         	goto	l2329
   705  000D5E                     u2300:
   706  000D5E                     
   707                           ;main.c: 204:                     tempo=0;
   708  000D5E  0E00               	movlw	0
   709  000D60  6E3D               	movwf	main@tempo^0,c
   710                           
   711                           ;main.c: 205:                     if(start!=0){
   712  000D62  5024               	movf	_start^0,w,c
   713  000D64  B4D8               	btfsc	status,2,c
   714  000D66  EFB7  F006         	goto	u2311
   715  000D6A  EFB9  F006         	goto	u2310
   716  000D6E                     u2311:
   717  000D6E  EFCB  F006         	goto	l2329
   718  000D72                     u2310:
   719  000D72                     
   720                           ;main.c: 206:                         seg--;
   721  000D72  061B               	decf	_seg^0,f,c
   722  000D74  A0D8               	btfss	status,0,c
   723  000D76  061C               	decf	(_seg+1)^0,f,c
   724  000D78                     
   725                           ;main.c: 207:                         if((seg<0)){
   726  000D78  BE1C               	btfsc	(_seg+1)^0,7,c
   727  000D7A  EFC3  F006         	goto	u2320
   728  000D7E  EFC1  F006         	goto	u2321
   729  000D82                     u2321:
   730  000D82  EFCB  F006         	goto	l2329
   731  000D86                     u2320:
   732  000D86                     
   733                           ;main.c: 208:                             start=0;
   734  000D86  0E00               	movlw	0
   735  000D88  6E24               	movwf	_start^0,c
   736                           
   737                           ;main.c: 209:                             seg=0;
   738  000D8A  0E00               	movlw	0
   739  000D8C  6E1C               	movwf	(_seg+1)^0,c
   740  000D8E  0E00               	movlw	0
   741  000D90  6E1B               	movwf	_seg^0,c
   742  000D92                     
   743                           ;main.c: 210:                             termina();
   744  000D92  EC98  F00B         	call	_termina	;wreg free
   745  000D96                     l2329:
   746                           
   747                           ;main.c: 214:                 ssdDigit(((seg/600) %6), 0);
   748  000D96  0E00               	movlw	0
   749  000D98  6E33               	movwf	ssdDigit@pos^0,c
   750  000D9A  0E02               	movlw	2
   751  000D9C  6E28               	movwf	(___awdiv@divisor+1)^0,c
   752  000D9E  0E58               	movlw	88
   753  000DA0  6E27               	movwf	___awdiv@divisor^0,c
   754  000DA2  C01B  F025         	movff	_seg,___awdiv@dividend
   755  000DA6  C01C  F026         	movff	_seg+1,___awdiv@dividend+1
   756  000DAA  EC84  F00A         	call	___awdiv	;wreg free
   757  000DAE  C025  F02D         	movff	?___awdiv,___awmod@dividend
   758  000DB2  C026  F02E         	movff	?___awdiv+1,___awmod@dividend+1
   759  000DB6  0E00               	movlw	0
   760  000DB8  6E30               	movwf	(___awmod@divisor+1)^0,c
   761  000DBA  0E06               	movlw	6
   762  000DBC  6E2F               	movwf	___awmod@divisor^0,c
   763  000DBE  EC40  F00B         	call	___awmod	;wreg free
   764  000DC2  502D               	movf	?___awmod^0,w,c
   765  000DC4  EC4C  F00C         	call	_ssdDigit
   766  000DC8                     
   767                           ;main.c: 215:                 ssdDigit(((seg/60) %10), 1);
   768  000DC8  0E01               	movlw	1
   769  000DCA  6E33               	movwf	ssdDigit@pos^0,c
   770  000DCC  0E00               	movlw	0
   771  000DCE  6E28               	movwf	(___awdiv@divisor+1)^0,c
   772  000DD0  0E3C               	movlw	60
   773  000DD2  6E27               	movwf	___awdiv@divisor^0,c
   774  000DD4  C01B  F025         	movff	_seg,___awdiv@dividend
   775  000DD8  C01C  F026         	movff	_seg+1,___awdiv@dividend+1
   776  000DDC  EC84  F00A         	call	___awdiv	;wreg free
   777  000DE0  C025  F02D         	movff	?___awdiv,___awmod@dividend
   778  000DE4  C026  F02E         	movff	?___awdiv+1,___awmod@dividend+1
   779  000DE8  0E00               	movlw	0
   780  000DEA  6E30               	movwf	(___awmod@divisor+1)^0,c
   781  000DEC  0E0A               	movlw	10
   782  000DEE  6E2F               	movwf	___awmod@divisor^0,c
   783  000DF0  EC40  F00B         	call	___awmod	;wreg free
   784  000DF4  502D               	movf	?___awmod^0,w,c
   785  000DF6  EC4C  F00C         	call	_ssdDigit
   786  000DFA                     
   787                           ;main.c: 216:                 ssdDigit(((seg/10) %6), 2);
   788  000DFA  0E02               	movlw	2
   789  000DFC  6E33               	movwf	ssdDigit@pos^0,c
   790  000DFE  0E00               	movlw	0
   791  000E00  6E28               	movwf	(___awdiv@divisor+1)^0,c
   792  000E02  0E0A               	movlw	10
   793  000E04  6E27               	movwf	___awdiv@divisor^0,c
   794  000E06  C01B  F025         	movff	_seg,___awdiv@dividend
   795  000E0A  C01C  F026         	movff	_seg+1,___awdiv@dividend+1
   796  000E0E  EC84  F00A         	call	___awdiv	;wreg free
   797  000E12  C025  F02D         	movff	?___awdiv,___awmod@dividend
   798  000E16  C026  F02E         	movff	?___awdiv+1,___awmod@dividend+1
   799  000E1A  0E00               	movlw	0
   800  000E1C  6E30               	movwf	(___awmod@divisor+1)^0,c
   801  000E1E  0E06               	movlw	6
   802  000E20  6E2F               	movwf	___awmod@divisor^0,c
   803  000E22  EC40  F00B         	call	___awmod	;wreg free
   804  000E26  502D               	movf	?___awmod^0,w,c
   805  000E28  EC4C  F00C         	call	_ssdDigit
   806  000E2C                     
   807                           ;main.c: 217:                 ssdDigit(((seg/1) %10), 3);
   808  000E2C  0E03               	movlw	3
   809  000E2E  6E33               	movwf	ssdDigit@pos^0,c
   810  000E30  C01B  F02D         	movff	_seg,___awmod@dividend
   811  000E34  C01C  F02E         	movff	_seg+1,___awmod@dividend+1
   812  000E38  0E00               	movlw	0
   813  000E3A  6E30               	movwf	(___awmod@divisor+1)^0,c
   814  000E3C  0E0A               	movlw	10
   815  000E3E  6E2F               	movwf	___awmod@divisor^0,c
   816  000E40  EC40  F00B         	call	___awmod	;wreg free
   817  000E44  502D               	movf	?___awmod^0,w,c
   818  000E46  EC4C  F00C         	call	_ssdDigit
   819  000E4A                     l2337:
   820                           
   821                           ;main.c: 218:                 slot = 0;
   822  000E4A  0E00               	movlw	0
   823  000E4C  6E3E               	movwf	main@slot^0,c
   824                           
   825                           ;main.c: 219:                 break;
   826  000E4E  EF42  F007         	goto	l2345
   827  000E52                     l2343:
   828  000E52  503E               	movf	main@slot^0,w,c
   829  000E54  6E3B               	movwf	??_main^0,c
   830  000E56  6A3C               	clrf	(??_main+1)^0,c
   831                           
   832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   833                           ; Switch size 1, requested type "simple"
   834                           ; Number of cases is 1, Range of values is 0 to 0
   835                           ; switch strategies available:
   836                           ; Name         Instructions Cycles
   837                           ; simple_byte            4     3 (average)
   838                           ;	Chosen strategy is simple_byte
   839  000E58  503C               	movf	(??_main+1)^0,w,c
   840  000E5A  0A00               	xorlw	0	; case 0
   841  000E5C  B4D8               	btfsc	status,2,c
   842  000E5E  EF33  F007         	goto	l2383
   843  000E62  EF25  F007         	goto	l2337
   844  000E66                     l2383:
   845                           
   846                           ; Switch size 1, requested type "simple"
   847                           ; Number of cases is 3, Range of values is 0 to 2
   848                           ; switch strategies available:
   849                           ; Name         Instructions Cycles
   850                           ; simple_byte           10     6 (average)
   851                           ;	Chosen strategy is simple_byte
   852  000E66  503B               	movf	??_main^0,w,c
   853  000E68  0A00               	xorlw	0	; case 0
   854  000E6A  B4D8               	btfsc	status,2,c
   855  000E6C  EF9B  F006         	goto	l2309
   856  000E70  0A01               	xorlw	1	; case 1
   857  000E72  B4D8               	btfsc	status,2,c
   858  000E74  EFA1  F006         	goto	l2313
   859  000E78  0A03               	xorlw	3	; case 2
   860  000E7A  B4D8               	btfsc	status,2,c
   861  000E7C  EFA7  F006         	goto	l2317
   862  000E80  EF25  F007         	goto	l2337
   863  000E84                     l2345:
   864                           
   865                           ;main.c: 224:         if(start!=0){tempo++;}
   866  000E84  5024               	movf	_start^0,w,c
   867  000E86  B4D8               	btfsc	status,2,c
   868  000E88  EF48  F007         	goto	u2331
   869  000E8C  EF4A  F007         	goto	u2330
   870  000E90                     u2331:
   871  000E90  EF4B  F007         	goto	l2349
   872  000E94                     u2330:
   873  000E94  2A3D               	incf	main@tempo^0,f,c
   874  000E96                     l2349:
   875                           
   876                           ;main.c: 225:         ssdUpdate();
   877  000E96  EC14  F008         	call	_ssdUpdate	;wreg free
   878  000E9A                     
   879                           ;main.c: 226:         timerWait();
   880  000E9A  ECF7  F00D         	call	_timerWait	;wreg free
   881  000E9E  EF93  F006         	goto	l2307
   882  000EA2  EF00  F000         	goto	start
   883  000EA6                     __end_of_main:
   884                           	callstack 0
   885                           
   886 ;; *************** function _timerWait *****************
   887 ;; Defined at:
   888 ;;		line 31 in file "timer.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		None
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text1
   916  001BEE                     __ptext1:
   917                           	callstack 0
   918  001BEE                     _timerWait:
   919                           	callstack 30
   920  001BEE                     l274:
   921  001BEE  A4F2               	btfss	242,2,c	;volatile
   922  001BF0  EFFC  F00D         	goto	u1001
   923  001BF4  EFFE  F00D         	goto	u1000
   924  001BF8                     u1001:
   925  001BF8  EFF7  F00D         	goto	l274
   926  001BFC                     u1000:
   927  001BFC  0012               	return		;funcret
   928  001BFE                     __end_of_timerWait:
   929                           	callstack 0
   930                           
   931 ;; *************** function _timerReset *****************
   932 ;; Defined at:
   933 ;;		line 37 in file "timer.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  tempo           2    0[COMRAM] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  ciclos          2    2[COMRAM] unsigned int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   947 ;;      Params:         2       0       0       0       0       0       0
   948 ;;      Locals:         2       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0
   950 ;;      Totals:         4       0       0       0       0       0       0
   951 ;;Total ram usage:        4 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text2
   961  001B6E                     __ptext2:
   962                           	callstack 0
   963  001B6E                     _timerReset:
   964                           	callstack 30
   965  001B6E                     
   966                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
   967  001B6E  90D8               	bcf	status,0,c
   968  001B70  3425               	rlcf	timerReset@tempo^0,w,c
   969  001B72  6E27               	movwf	timerReset@ciclos^0,c
   970  001B74  3426               	rlcf	(timerReset@tempo+1)^0,w,c
   971  001B76  6E28               	movwf	(timerReset@ciclos+1)^0,c
   972  001B78                     
   973                           ;timer.c: 44:  ciclos = 65535 - ciclos;
   974  001B78  1E27               	comf	timerReset@ciclos^0,f,c
   975  001B7A  1E28               	comf	(timerReset@ciclos+1)^0,f,c
   976  001B7C                     
   977                           ;timer.c: 47:     ciclos -=50;
   978  001B7C  0E32               	movlw	50
   979  001B7E  5E27               	subwf	timerReset@ciclos^0,f,c
   980  001B80  0E00               	movlw	0
   981  001B82  5A28               	subwfb	(timerReset@ciclos+1)^0,f,c
   982  001B84                     
   983                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
   984  001B84  5028               	movf	(timerReset@ciclos+1)^0,w,c
   985  001B86  6ED7               	movwf	215,c	;volatile
   986  001B88                     
   987                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
   988  001B88  C027  FFD6         	movff	timerReset@ciclos,4054	;volatile
   989  001B8C                     
   990                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
   991  001B8C  94F2               	bcf	242,2,c	;volatile
   992  001B8E  0012               	return		;funcret
   993  001B90                     __end_of_timerReset:
   994                           	callstack 0
   995                           
   996 ;; *************** function _timerInit *****************
   997 ;; Defined at:
   998 ;;		line 55 in file "timer.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text3
  1026  001C08                     __ptext3:
  1027                           	callstack 0
  1028  001C08                     _timerInit:
  1029                           	callstack 30
  1030  001C08                     
  1031                           ;timer.c: 57:  T0CON = 0b00001000;
  1032  001C08  0E08               	movlw	8
  1033  001C0A  6ED5               	movwf	213,c	;volatile
  1034  001C0C                     
  1035                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1036  001C0C  8ED5               	bsf	213,7,c	;volatile
  1037  001C0E  0012               	return		;funcret
  1038  001C10                     __end_of_timerInit:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _termina *****************
  1042 ;; Defined at:
  1043 ;;		line 164 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 7
  1064 ;; This function calls:
  1065 ;;		_ImprimeCafe
  1066 ;;		_atraso
  1067 ;;		_lcdCommand
  1068 ;;		_lcdString
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text4
  1075  001730                     __ptext4:
  1076                           	callstack 0
  1077  001730                     _termina:
  1078                           	callstack 23
  1079  001730                     
  1080                           ;main.c: 165:     escolha=0;
  1081  001730  0E00               	movlw	0
  1082  001732  6E23               	movwf	_escolha^0,c
  1083  001734                     
  1084                           ;main.c: 166:     lcdCommand(0x80);
  1085  001734  0E80               	movlw	128
  1086  001736  ECD9  F00D         	call	_lcdCommand
  1087  00173A                     
  1088                           ;main.c: 167:     lcdCommand(0x01);
  1089  00173A  0E01               	movlw	1
  1090  00173C  ECD9  F00D         	call	_lcdCommand
  1091  001740                     
  1092                           ;main.c: 168:     lcdCommand(0x80);
  1093  001740  0E80               	movlw	128
  1094  001742  ECD9  F00D         	call	_lcdCommand
  1095  001746                     
  1096                           ;main.c: 169:     lcdString("Pegue : ");
  1097  001746  0E9E               	movlw	low STR_17
  1098  001748  6E33               	movwf	lcdString@msg^0,c
  1099  00174A  0E06               	movlw	high STR_17
  1100  00174C  6E34               	movwf	(lcdString@msg+1)^0,c
  1101  00174E  ECA3  F00C         	call	_lcdString	;wreg free
  1102  001752                     
  1103                           ;main.c: 170:     if(escolhido.queima==1){
  1104  001752  0403               	decf	(_escolhido+2)^0,w,c
  1105  001754  A4D8               	btfss	status,2,c
  1106  001756  EFAF  F00B         	goto	u2111
  1107  00175A  EFB1  F00B         	goto	u2110
  1108  00175E                     u2111:
  1109  00175E  EFB9  F00B         	goto	l2125
  1110  001762                     u2110:
  1111  001762                     
  1112                           ;main.c: 171:         lcdString("Normal");
  1113  001762  0EB9               	movlw	low STR_14
  1114  001764  6E33               	movwf	lcdString@msg^0,c
  1115  001766  0E06               	movlw	high STR_14
  1116  001768  6E34               	movwf	(lcdString@msg+1)^0,c
  1117  00176A  ECA3  F00C         	call	_lcdString	;wreg free
  1118                           
  1119                           ;main.c: 172:     }
  1120  00176E  EFD9  F00B         	goto	l2133
  1121  001772                     l2125:
  1122  001772  0E02               	movlw	2
  1123  001774  1803               	xorwf	(_escolhido+2)^0,w,c
  1124  001776  A4D8               	btfss	status,2,c
  1125  001778  EFC0  F00B         	goto	u2121
  1126  00177C  EFC2  F00B         	goto	u2120
  1127  001780                     u2121:
  1128  001780  EFCA  F00B         	goto	l2129
  1129  001784                     u2120:
  1130  001784                     
  1131                           ;main.c: 174:         lcdString("Forte");
  1132  001784  0EB3               	movlw	low (STR_16+3)
  1133  001786  6E33               	movwf	lcdString@msg^0,c
  1134  001788  0E06               	movlw	high (STR_16+3)
  1135  00178A  6E34               	movwf	(lcdString@msg+1)^0,c
  1136  00178C  ECA3  F00C         	call	_lcdString	;wreg free
  1137                           
  1138                           ;main.c: 175:     }
  1139  001790  EFD9  F00B         	goto	l2133
  1140  001794                     l2129:
  1141  001794  0E03               	movlw	3
  1142  001796  1803               	xorwf	(_escolhido+2)^0,w,c
  1143  001798  A4D8               	btfss	status,2,c
  1144  00179A  EFD1  F00B         	goto	u2131
  1145  00179E  EFD3  F00B         	goto	u2130
  1146  0017A2                     u2131:
  1147  0017A2  EFD9  F00B         	goto	l2133
  1148  0017A6                     u2130:
  1149  0017A6                     
  1150                           ;main.c: 177:         lcdString("Ex.Forte");
  1151  0017A6  0EB0               	movlw	low STR_16
  1152  0017A8  6E33               	movwf	lcdString@msg^0,c
  1153  0017AA  0E06               	movlw	high STR_16
  1154  0017AC  6E34               	movwf	(lcdString@msg+1)^0,c
  1155  0017AE  ECA3  F00C         	call	_lcdString	;wreg free
  1156  0017B2                     l2133:
  1157                           
  1158                           ;main.c: 179:     lcdCommand(0xC0);
  1159  0017B2  0EC0               	movlw	192
  1160  0017B4  ECD9  F00D         	call	_lcdCommand
  1161  0017B8                     
  1162                           ;main.c: 180:     ImprimeCafe();
  1163  0017B8  EC1A  F00A         	call	_ImprimeCafe	;wreg free
  1164                           
  1165                           ;main.c: 181:     atraso(300);
  1166  0017BC  0E2C               	movlw	44
  1167  0017BE  ECE2  F00B         	call	_atraso
  1168  0017C2  0012               	return		;funcret
  1169  0017C4                     __end_of_termina:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _atraso *****************
  1173 ;; Defined at:
  1174 ;;		line 2 in file "delay.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  N               1    wreg     unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  N               1    0[COMRAM] unsigned char 
  1179 ;;  i               1    4[COMRAM] volatile unsigned char 
  1180 ;;  k               1    3[COMRAM] volatile unsigned char 
  1181 ;;  j               1    2[COMRAM] volatile unsigned char 
  1182 ;;  h               1    1[COMRAM] volatile unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         0       0       0       0       0       0       0
  1193 ;;      Locals:         5       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0
  1195 ;;      Totals:         5       0       0       0       0       0       0
  1196 ;;Total ram usage:        5 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_termina
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text5
  1206  0017C4                     __ptext5:
  1207                           	callstack 0
  1208  0017C4                     _atraso:
  1209                           	callstack 29
  1210                           
  1211                           ;incstack = 0
  1212                           ;atraso@N stored from wreg
  1213  0017C4  6E25               	movwf	atraso@N^0,c
  1214  0017C6                     
  1215                           ;delay.c: 3:     volatile unsigned char j, k, i, h;;delay.c: 4:     for (h = 0; h < N; h
      +                          ++)
  1216  0017C6  0E00               	movlw	0
  1217  0017C8  6E26               	movwf	atraso@h^0,c	;volatile
  1218  0017CA  EF15  F00C         	goto	l1323
  1219  0017CE                     l1291:
  1220                           
  1221                           ;delay.c: 5:         for (i = 0; i < 100; i++)
  1222  0017CE  0E00               	movlw	0
  1223  0017D0  6E29               	movwf	atraso@i^0,c	;volatile
  1224  0017D2                     l1293:
  1225  0017D2  0E63               	movlw	99
  1226  0017D4  6429               	cpfsgt	atraso@i^0,c	;volatile
  1227  0017D6  EFEF  F00B         	goto	u691
  1228  0017DA  EFF1  F00B         	goto	u690
  1229  0017DE                     u691:
  1230  0017DE  EFF3  F00B         	goto	l1297
  1231  0017E2                     u690:
  1232  0017E2  EF14  F00C         	goto	l1321
  1233  0017E6                     l1297:
  1234                           
  1235                           ;delay.c: 6:             for (j = 0; j < 41; j++) {
  1236  0017E6  0E00               	movlw	0
  1237  0017E8  6E27               	movwf	atraso@j^0,c	;volatile
  1238  0017EA                     l1299:
  1239  0017EA  0E28               	movlw	40
  1240  0017EC  6427               	cpfsgt	atraso@j^0,c	;volatile
  1241  0017EE  EFFB  F00B         	goto	u701
  1242  0017F2  EFFD  F00B         	goto	u700
  1243  0017F6                     u701:
  1244  0017F6  EFFF  F00B         	goto	l1303
  1245  0017FA                     u700:
  1246  0017FA  EF11  F00C         	goto	l1317
  1247  0017FE                     l1303:
  1248                           
  1249                           ;delay.c: 7:                 for (k = 0; k < 3; k++);
  1250  0017FE  0E00               	movlw	0
  1251  001800  6E28               	movwf	atraso@k^0,c	;volatile
  1252  001802                     l1305:
  1253  001802  0E02               	movlw	2
  1254  001804  6428               	cpfsgt	atraso@k^0,c	;volatile
  1255  001806  EF07  F00C         	goto	u711
  1256  00180A  EF09  F00C         	goto	u710
  1257  00180E                     u711:
  1258  00180E  EF0B  F00C         	goto	l1309
  1259  001812                     u710:
  1260  001812  EF0E  F00C         	goto	l1313
  1261  001816                     l1309:
  1262  001816  2A28               	incf	atraso@k^0,f,c	;volatile
  1263  001818  EF01  F00C         	goto	l1305
  1264  00181C                     l1313:
  1265                           
  1266                           ;delay.c: 8:             }
  1267  00181C  2A27               	incf	atraso@j^0,f,c	;volatile
  1268  00181E  EFF5  F00B         	goto	l1299
  1269  001822                     l1317:
  1270  001822  2A29               	incf	atraso@i^0,f,c	;volatile
  1271  001824  EFE9  F00B         	goto	l1293
  1272  001828                     l1321:
  1273  001828  2A26               	incf	atraso@h^0,f,c	;volatile
  1274  00182A                     l1323:
  1275  00182A  5025               	movf	atraso@N^0,w,c
  1276  00182C  5C26               	subwf	atraso@h^0,w,c	;volatile
  1277  00182E  A0D8               	btfss	status,0,c
  1278  001830  EF1C  F00C         	goto	u721
  1279  001834  EF1E  F00C         	goto	u720
  1280  001838                     u721:
  1281  001838  EFE7  F00B         	goto	l1291
  1282  00183C                     u720:
  1283  00183C  0012               	return		;funcret
  1284  00183E                     __end_of_atraso:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _ssdUpdate *****************
  1288 ;; Defined at:
  1289 ;;		line 50 in file "ssd.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1303 ;;      Params:         0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0       0       0
  1306 ;;      Totals:         2       0       0       0       0       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 3
  1310 ;; This function calls:
  1311 ;;		_digitalWrite
  1312 ;;		_soWrite
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319  001028                     __ptext6:
  1320                           	callstack 0
  1321  001028                     _ssdUpdate:
  1322                           	callstack 27
  1323  001028                     
  1324                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1325  001028  0E00               	movlw	0
  1326  00102A  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1327  00102C  0E18               	movlw	24
  1328  00102E  6E25               	movwf	digitalWrite@pin^0,c
  1329  001030  0E00               	movlw	0
  1330  001032  6E28               	movwf	(digitalWrite@value+1)^0,c
  1331  001034  0E00               	movlw	0
  1332  001036  6E27               	movwf	digitalWrite@value^0,c
  1333  001038  EC65  F003         	call	_digitalWrite	;wreg free
  1334                           
  1335                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1336  00103C  0E00               	movlw	0
  1337  00103E  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1338  001040  0E19               	movlw	25
  1339  001042  6E25               	movwf	digitalWrite@pin^0,c
  1340  001044  0E00               	movlw	0
  1341  001046  6E28               	movwf	(digitalWrite@value+1)^0,c
  1342  001048  0E00               	movlw	0
  1343  00104A  6E27               	movwf	digitalWrite@value^0,c
  1344  00104C  EC65  F003         	call	_digitalWrite	;wreg free
  1345                           
  1346                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1347  001050  0E00               	movlw	0
  1348  001052  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1349  001054  0E1A               	movlw	26
  1350  001056  6E25               	movwf	digitalWrite@pin^0,c
  1351  001058  0E00               	movlw	0
  1352  00105A  6E28               	movwf	(digitalWrite@value+1)^0,c
  1353  00105C  0E00               	movlw	0
  1354  00105E  6E27               	movwf	digitalWrite@value^0,c
  1355  001060  EC65  F003         	call	_digitalWrite	;wreg free
  1356                           
  1357                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1358  001064  0E00               	movlw	0
  1359  001066  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1360  001068  0E1B               	movlw	27
  1361  00106A  6E25               	movwf	digitalWrite@pin^0,c
  1362  00106C  0E00               	movlw	0
  1363  00106E  6E28               	movwf	(digitalWrite@value+1)^0,c
  1364  001070  0E00               	movlw	0
  1365  001072  6E27               	movwf	digitalWrite@value^0,c
  1366  001074  EC65  F003         	call	_digitalWrite	;wreg free
  1367                           
  1368                           ;ssd.c: 60:     soWrite(0x00);
  1369  001078  0E00               	movlw	0
  1370  00107A  6E2C               	movwf	(soWrite@value+1)^0,c
  1371  00107C  0E00               	movlw	0
  1372  00107E  6E2B               	movwf	soWrite@value^0,c
  1373  001080  ECCE  F00C         	call	_soWrite	;wreg free
  1374                           
  1375                           ;ssd.c: 62:     switch (display)
  1376  001084  EFAC  F008         	goto	l2217
  1377  001088                     l2189:
  1378                           
  1379                           ;ssd.c: 65:             soWrite(valor[v0]);
  1380  001088  0E01               	movlw	low _valor
  1381  00108A  2420               	addwf	_v0^0,w,c
  1382  00108C  6EF6               	movwf	tblptrl,c
  1383  00108E  6AF7               	clrf	tblptrh,c
  1384  001090  0E06               	movlw	high _valor
  1385  001092  22F7               	addwfc	tblptrh,f,c
  1386  001094                     	if	0	;There are less than 3 active tblptr bytes
  1387  001094                     	endif
  1388  001094  0008               	tblrd		*
  1389  001096  50F5               	movf	tablat,w,c
  1390  001098  6E2B               	movwf	soWrite@value^0,c
  1391  00109A  6A2C               	clrf	(soWrite@value+1)^0,c
  1392  00109C  ECCE  F00C         	call	_soWrite	;wreg free
  1393  0010A0                     
  1394                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1395  0010A0  0E00               	movlw	0
  1396  0010A2  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1397  0010A4  0E18               	movlw	24
  1398  0010A6  6E25               	movwf	digitalWrite@pin^0,c
  1399  0010A8  0E00               	movlw	0
  1400  0010AA  6E28               	movwf	(digitalWrite@value+1)^0,c
  1401  0010AC  0E01               	movlw	1
  1402  0010AE  6E27               	movwf	digitalWrite@value^0,c
  1403  0010B0  EC65  F003         	call	_digitalWrite	;wreg free
  1404  0010B4                     
  1405                           ;ssd.c: 67:             display = 1;
  1406  0010B4  0E01               	movlw	1
  1407  0010B6  6E21               	movwf	_display^0,c
  1408                           
  1409                           ;ssd.c: 68:             break;
  1410  0010B8  EFC9  F008         	goto	l257
  1411  0010BC                     l2195:
  1412                           
  1413                           ;ssd.c: 71:             soWrite(valor[v1]);
  1414  0010BC  0E01               	movlw	low _valor
  1415  0010BE  241F               	addwf	_v1^0,w,c
  1416  0010C0  6EF6               	movwf	tblptrl,c
  1417  0010C2  6AF7               	clrf	tblptrh,c
  1418  0010C4  0E06               	movlw	high _valor
  1419  0010C6  22F7               	addwfc	tblptrh,f,c
  1420  0010C8                     	if	0	;There are less than 3 active tblptr bytes
  1421  0010C8                     	endif
  1422  0010C8  0008               	tblrd		*
  1423  0010CA  50F5               	movf	tablat,w,c
  1424  0010CC  6E2B               	movwf	soWrite@value^0,c
  1425  0010CE  6A2C               	clrf	(soWrite@value+1)^0,c
  1426  0010D0  ECCE  F00C         	call	_soWrite	;wreg free
  1427  0010D4                     
  1428                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1429  0010D4  0E00               	movlw	0
  1430  0010D6  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1431  0010D8  0E19               	movlw	25
  1432  0010DA  6E25               	movwf	digitalWrite@pin^0,c
  1433  0010DC  0E00               	movlw	0
  1434  0010DE  6E28               	movwf	(digitalWrite@value+1)^0,c
  1435  0010E0  0E01               	movlw	1
  1436  0010E2  6E27               	movwf	digitalWrite@value^0,c
  1437  0010E4  EC65  F003         	call	_digitalWrite	;wreg free
  1438  0010E8                     
  1439                           ;ssd.c: 73:             display = 2;
  1440  0010E8  0E02               	movlw	2
  1441  0010EA  6E21               	movwf	_display^0,c
  1442                           
  1443                           ;ssd.c: 74:             break;
  1444  0010EC  EFC9  F008         	goto	l257
  1445  0010F0                     l2201:
  1446                           
  1447                           ;ssd.c: 77:             soWrite(valor[v2]);
  1448  0010F0  0E01               	movlw	low _valor
  1449  0010F2  241E               	addwf	_v2^0,w,c
  1450  0010F4  6EF6               	movwf	tblptrl,c
  1451  0010F6  6AF7               	clrf	tblptrh,c
  1452  0010F8  0E06               	movlw	high _valor
  1453  0010FA  22F7               	addwfc	tblptrh,f,c
  1454  0010FC                     	if	0	;There are less than 3 active tblptr bytes
  1455  0010FC                     	endif
  1456  0010FC  0008               	tblrd		*
  1457  0010FE  50F5               	movf	tablat,w,c
  1458  001100  6E2B               	movwf	soWrite@value^0,c
  1459  001102  6A2C               	clrf	(soWrite@value+1)^0,c
  1460  001104  ECCE  F00C         	call	_soWrite	;wreg free
  1461  001108                     
  1462                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1463  001108  0E00               	movlw	0
  1464  00110A  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1465  00110C  0E1A               	movlw	26
  1466  00110E  6E25               	movwf	digitalWrite@pin^0,c
  1467  001110  0E00               	movlw	0
  1468  001112  6E28               	movwf	(digitalWrite@value+1)^0,c
  1469  001114  0E01               	movlw	1
  1470  001116  6E27               	movwf	digitalWrite@value^0,c
  1471  001118  EC65  F003         	call	_digitalWrite	;wreg free
  1472  00111C                     
  1473                           ;ssd.c: 79:             display = 3;
  1474  00111C  0E03               	movlw	3
  1475  00111E  6E21               	movwf	_display^0,c
  1476                           
  1477                           ;ssd.c: 80:             break;
  1478  001120  EFC9  F008         	goto	l257
  1479  001124                     l2207:
  1480                           
  1481                           ;ssd.c: 83:             soWrite(valor[v3]);
  1482  001124  0E01               	movlw	low _valor
  1483  001126  241D               	addwf	_v3^0,w,c
  1484  001128  6EF6               	movwf	tblptrl,c
  1485  00112A  6AF7               	clrf	tblptrh,c
  1486  00112C  0E06               	movlw	high _valor
  1487  00112E  22F7               	addwfc	tblptrh,f,c
  1488  001130                     	if	0	;There are less than 3 active tblptr bytes
  1489  001130                     	endif
  1490  001130  0008               	tblrd		*
  1491  001132  50F5               	movf	tablat,w,c
  1492  001134  6E2B               	movwf	soWrite@value^0,c
  1493  001136  6A2C               	clrf	(soWrite@value+1)^0,c
  1494  001138  ECCE  F00C         	call	_soWrite	;wreg free
  1495  00113C                     
  1496                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1497  00113C  0E00               	movlw	0
  1498  00113E  6E26               	movwf	(digitalWrite@pin+1)^0,c
  1499  001140  0E1B               	movlw	27
  1500  001142  6E25               	movwf	digitalWrite@pin^0,c
  1501  001144  0E00               	movlw	0
  1502  001146  6E28               	movwf	(digitalWrite@value+1)^0,c
  1503  001148  0E01               	movlw	1
  1504  00114A  6E27               	movwf	digitalWrite@value^0,c
  1505  00114C  EC65  F003         	call	_digitalWrite	;wreg free
  1506  001150                     l2211:
  1507                           
  1508                           ;ssd.c: 85:             display = 0;
  1509  001150  0E00               	movlw	0
  1510  001152  6E21               	movwf	_display^0,c
  1511                           
  1512                           ;ssd.c: 86:             break;
  1513  001154  EFC9  F008         	goto	l257
  1514  001158                     l2217:
  1515  001158  5021               	movf	_display^0,w,c
  1516  00115A  6E2E               	movwf	??_ssdUpdate^0,c
  1517  00115C  6A2F               	clrf	(??_ssdUpdate+1)^0,c
  1518                           
  1519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1520                           ; Switch size 1, requested type "simple"
  1521                           ; Number of cases is 1, Range of values is 0 to 0
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte            4     3 (average)
  1525                           ;	Chosen strategy is simple_byte
  1526  00115E  502F               	movf	(??_ssdUpdate+1)^0,w,c
  1527  001160  0A00               	xorlw	0	; case 0
  1528  001162  B4D8               	btfsc	status,2,c
  1529  001164  EFB6  F008         	goto	l2385
  1530  001168  EFA8  F008         	goto	l2211
  1531  00116C                     l2385:
  1532                           
  1533                           ; Switch size 1, requested type "simple"
  1534                           ; Number of cases is 4, Range of values is 0 to 3
  1535                           ; switch strategies available:
  1536                           ; Name         Instructions Cycles
  1537                           ; simple_byte           13     7 (average)
  1538                           ;	Chosen strategy is simple_byte
  1539  00116C  502E               	movf	??_ssdUpdate^0,w,c
  1540  00116E  0A00               	xorlw	0	; case 0
  1541  001170  B4D8               	btfsc	status,2,c
  1542  001172  EF44  F008         	goto	l2189
  1543  001176  0A01               	xorlw	1	; case 1
  1544  001178  B4D8               	btfsc	status,2,c
  1545  00117A  EF5E  F008         	goto	l2195
  1546  00117E  0A03               	xorlw	3	; case 2
  1547  001180  B4D8               	btfsc	status,2,c
  1548  001182  EF78  F008         	goto	l2201
  1549  001186  0A01               	xorlw	1	; case 3
  1550  001188  B4D8               	btfsc	status,2,c
  1551  00118A  EF92  F008         	goto	l2207
  1552  00118E  EFA8  F008         	goto	l2211
  1553  001192                     l257:
  1554  001192  0012               	return		;funcret
  1555  001194                     __end_of_ssdUpdate:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _ssdInit *****************
  1559 ;; Defined at:
  1560 ;;		line 94 in file "ssd.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1574 ;;      Params:         0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 2
  1581 ;; This function calls:
  1582 ;;		_pinMode
  1583 ;;		_soInit
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text7
  1590  0018F0                     __ptext7:
  1591                           	callstack 0
  1592  0018F0                     _ssdInit:
  1593                           	callstack 28
  1594  0018F0                     
  1595                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1596  0018F0  0E00               	movlw	0
  1597  0018F2  6E26               	movwf	(pinMode@pin+1)^0,c
  1598  0018F4  0E18               	movlw	24
  1599  0018F6  6E25               	movwf	pinMode@pin^0,c
  1600  0018F8  0E00               	movlw	0
  1601  0018FA  6E28               	movwf	(pinMode@type+1)^0,c
  1602  0018FC  0E00               	movlw	0
  1603  0018FE  6E27               	movwf	pinMode@type^0,c
  1604  001900  EC8C  F004         	call	_pinMode	;wreg free
  1605                           
  1606                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1607  001904  0E00               	movlw	0
  1608  001906  6E26               	movwf	(pinMode@pin+1)^0,c
  1609  001908  0E19               	movlw	25
  1610  00190A  6E25               	movwf	pinMode@pin^0,c
  1611  00190C  0E00               	movlw	0
  1612  00190E  6E28               	movwf	(pinMode@type+1)^0,c
  1613  001910  0E00               	movlw	0
  1614  001912  6E27               	movwf	pinMode@type^0,c
  1615  001914  EC8C  F004         	call	_pinMode	;wreg free
  1616                           
  1617                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1618  001918  0E00               	movlw	0
  1619  00191A  6E26               	movwf	(pinMode@pin+1)^0,c
  1620  00191C  0E1A               	movlw	26
  1621  00191E  6E25               	movwf	pinMode@pin^0,c
  1622  001920  0E00               	movlw	0
  1623  001922  6E28               	movwf	(pinMode@type+1)^0,c
  1624  001924  0E00               	movlw	0
  1625  001926  6E27               	movwf	pinMode@type^0,c
  1626  001928  EC8C  F004         	call	_pinMode	;wreg free
  1627                           
  1628                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1629  00192C  0E00               	movlw	0
  1630  00192E  6E26               	movwf	(pinMode@pin+1)^0,c
  1631  001930  0E1B               	movlw	27
  1632  001932  6E25               	movwf	pinMode@pin^0,c
  1633  001934  0E00               	movlw	0
  1634  001936  6E28               	movwf	(pinMode@type+1)^0,c
  1635  001938  0E00               	movlw	0
  1636  00193A  6E27               	movwf	pinMode@type^0,c
  1637  00193C  EC8C  F004         	call	_pinMode	;wreg free
  1638                           
  1639                           ;ssd.c: 102:     soInit();
  1640  001940  EC16  F00D         	call	_soInit	;wreg free
  1641  001944  0012               	return		;funcret
  1642  001946                     __end_of_ssdInit:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _ssdDigit *****************
  1646 ;; Defined at:
  1647 ;;		line 34 in file "ssd.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  val             1    wreg     unsigned char 
  1650 ;;  pos             1   14[COMRAM] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  val             1   15[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         1       0       0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0
  1665 ;;      Totals:         2       0       0       0       0       0       0
  1666 ;;Total ram usage:        2 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text8
  1676  001898                     __ptext8:
  1677                           	callstack 0
  1678  001898                     _ssdDigit:
  1679                           	callstack 30
  1680                           
  1681                           ;incstack = 0
  1682                           ;ssdDigit@val stored from wreg
  1683  001898  6E34               	movwf	ssdDigit@val^0,c
  1684  00189A                     
  1685                           ;ssd.c: 35:     if (pos == 0) {
  1686  00189A  5033               	movf	ssdDigit@pos^0,w,c
  1687  00189C  A4D8               	btfss	status,2,c
  1688  00189E  EF53  F00C         	goto	u2141
  1689  0018A2  EF55  F00C         	goto	u2140
  1690  0018A6                     u2141:
  1691  0018A6  EF57  F00C         	goto	l2175
  1692  0018AA                     u2140:
  1693  0018AA                     
  1694                           ;ssd.c: 36:         v0 = val;
  1695  0018AA  C034  F020         	movff	ssdDigit@val,_v0
  1696  0018AE                     l2175:
  1697                           
  1698                           ;ssd.c: 38:     if (pos == 1) {
  1699  0018AE  0433               	decf	ssdDigit@pos^0,w,c
  1700  0018B0  A4D8               	btfss	status,2,c
  1701  0018B2  EF5D  F00C         	goto	u2151
  1702  0018B6  EF5F  F00C         	goto	u2150
  1703  0018BA                     u2151:
  1704  0018BA  EF61  F00C         	goto	l2179
  1705  0018BE                     u2150:
  1706  0018BE                     
  1707                           ;ssd.c: 39:         v1 = val;
  1708  0018BE  C034  F01F         	movff	ssdDigit@val,_v1
  1709  0018C2                     l2179:
  1710                           
  1711                           ;ssd.c: 41:     if (pos == 2) {
  1712  0018C2  0E02               	movlw	2
  1713  0018C4  1833               	xorwf	ssdDigit@pos^0,w,c
  1714  0018C6  A4D8               	btfss	status,2,c
  1715  0018C8  EF68  F00C         	goto	u2161
  1716  0018CC  EF6A  F00C         	goto	u2160
  1717  0018D0                     u2161:
  1718  0018D0  EF6C  F00C         	goto	l2183
  1719  0018D4                     u2160:
  1720  0018D4                     
  1721                           ;ssd.c: 42:         v2 = val;
  1722  0018D4  C034  F01E         	movff	ssdDigit@val,_v2
  1723  0018D8                     l2183:
  1724                           
  1725                           ;ssd.c: 44:     if (pos == 3) {
  1726  0018D8  0E03               	movlw	3
  1727  0018DA  1833               	xorwf	ssdDigit@pos^0,w,c
  1728  0018DC  A4D8               	btfss	status,2,c
  1729  0018DE  EF73  F00C         	goto	u2171
  1730  0018E2  EF75  F00C         	goto	u2170
  1731  0018E6                     u2171:
  1732  0018E6  EF77  F00C         	goto	l247
  1733  0018EA                     u2170:
  1734  0018EA                     
  1735                           ;ssd.c: 45:         v3 = val;
  1736  0018EA  C034  F01D         	movff	ssdDigit@val,_v3
  1737  0018EE                     l247:
  1738  0018EE  0012               	return		;funcret
  1739  0018F0                     __end_of_ssdDigit:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _leTeclado *****************
  1743 ;; Defined at:
  1744 ;;		line 28 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  tecla           2   14[COMRAM] unsigned int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         0       0       0       0       0       0       0
  1759 ;;      Locals:         2       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0
  1761 ;;      Totals:         2       0       0       0       0       0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 4
  1765 ;; This function calls:
  1766 ;;		_kpDebounce
  1767 ;;		_kpRead
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text9
  1774  000B66                     __ptext9:
  1775                           	callstack 0
  1776  000B66                     _leTeclado:
  1777                           	callstack 26
  1778  000B66                     
  1779                           ;main.c: 30:     kpDebounce();
  1780  000B66  EC7F  F009         	call	_kpDebounce	;wreg free
  1781  000B6A                     
  1782                           ;main.c: 31:     if(kpRead() != tecla){
  1783  000B6A  ECFF  F00D         	call	_kpRead	;wreg free
  1784  000B6E  0E10               	movlw	16
  1785  000B70  1825               	xorwf	?_kpRead^0,w,c
  1786  000B72  1026               	iorwf	(?_kpRead+1)^0,w,c
  1787  000B74  B4D8               	btfsc	status,2,c
  1788  000B76  EFBF  F005         	goto	u1911
  1789  000B7A  EFC1  F005         	goto	u1910
  1790  000B7E                     u1911:
  1791  000B7E  EF88  F006         	goto	l69
  1792  000B82                     u1910:
  1793  000B82                     
  1794                           ;main.c: 32:         tecla = kpRead();
  1795  000B82  ECFF  F00D         	call	_kpRead	;wreg free
  1796  000B86  C025  F033         	movff	?_kpRead,leTeclado@tecla
  1797  000B8A  C026  F034         	movff	?_kpRead+1,leTeclado@tecla+1
  1798  000B8E                     
  1799                           ;main.c: 33:         if(escolha == 0){
  1800  000B8E  5023               	movf	_escolha^0,w,c
  1801  000B90  A4D8               	btfss	status,2,c
  1802  000B92  EFCD  F005         	goto	u1921
  1803  000B96  EFCF  F005         	goto	u1920
  1804  000B9A                     u1921:
  1805  000B9A  EF15  F006         	goto	l2017
  1806  000B9E                     u1920:
  1807  000B9E                     
  1808                           ;main.c: 34:             if(((tecla) & (1<<(0)))){
  1809  000B9E  A033               	btfss	leTeclado@tecla^0,0,c
  1810  000BA0  EFD4  F005         	goto	u1931
  1811  000BA4  EFD6  F005         	goto	u1930
  1812  000BA8                     u1931:
  1813  000BA8  EFE0  F005         	goto	l1999
  1814  000BAC                     u1930:
  1815  000BAC                     
  1816                           ;main.c: 35:                 escolhido=caseiro;
  1817  000BAC  C011  F001         	movff	_caseiro,_escolhido
  1818  000BB0  C012  F002         	movff	_caseiro+1,_escolhido+1
  1819  000BB4  C013  F003         	movff	_caseiro+2,_escolhido+2
  1820  000BB8  C014  F004         	movff	_caseiro+3,_escolhido+3
  1821  000BBC                     
  1822                           ;main.c: 36:                 escolha=1;
  1823  000BBC  0E01               	movlw	1
  1824  000BBE  6E23               	movwf	_escolha^0,c
  1825  000BC0                     l1999:
  1826                           
  1827                           ;main.c: 38:             if(((tecla) & (1<<(1)))){
  1828  000BC0  A233               	btfss	leTeclado@tecla^0,1,c
  1829  000BC2  EFE5  F005         	goto	u1941
  1830  000BC6  EFE7  F005         	goto	u1940
  1831  000BCA                     u1941:
  1832  000BCA  EFF1  F005         	goto	l2005
  1833  000BCE                     u1940:
  1834  000BCE                     
  1835                           ;main.c: 39:                 escolhido=expresso;
  1836  000BCE  C00D  F001         	movff	_expresso,_escolhido
  1837  000BD2  C00E  F002         	movff	_expresso+1,_escolhido+1
  1838  000BD6  C00F  F003         	movff	_expresso+2,_escolhido+2
  1839  000BDA  C010  F004         	movff	_expresso+3,_escolhido+3
  1840  000BDE                     
  1841                           ;main.c: 40:                 escolha=1;
  1842  000BDE  0E01               	movlw	1
  1843  000BE0  6E23               	movwf	_escolha^0,c
  1844  000BE2                     l2005:
  1845                           
  1846                           ;main.c: 42:             if(((tecla) & (1<<(2)))){
  1847  000BE2  A433               	btfss	leTeclado@tecla^0,2,c
  1848  000BE4  EFF6  F005         	goto	u1951
  1849  000BE8  EFF8  F005         	goto	u1950
  1850  000BEC                     u1951:
  1851  000BEC  EF02  F006         	goto	l2011
  1852  000BF0                     u1950:
  1853  000BF0                     
  1854                           ;main.c: 43:                 escolhido=cappu;
  1855  000BF0  C009  F001         	movff	_cappu,_escolhido
  1856  000BF4  C00A  F002         	movff	_cappu+1,_escolhido+1
  1857  000BF8  C00B  F003         	movff	_cappu+2,_escolhido+2
  1858  000BFC  C00C  F004         	movff	_cappu+3,_escolhido+3
  1859  000C00                     
  1860                           ;main.c: 44:                 escolha=1;
  1861  000C00  0E01               	movlw	1
  1862  000C02  6E23               	movwf	_escolha^0,c
  1863  000C04                     l2011:
  1864                           
  1865                           ;main.c: 46:             if(((tecla) & (1<<(3)))){
  1866  000C04  A633               	btfss	leTeclado@tecla^0,3,c
  1867  000C06  EF07  F006         	goto	u1961
  1868  000C0A  EF09  F006         	goto	u1960
  1869  000C0E                     u1961:
  1870  000C0E  EF88  F006         	goto	l69
  1871  000C12                     u1960:
  1872  000C12                     
  1873                           ;main.c: 47:                 escolhido=latte;
  1874  000C12  C005  F001         	movff	_latte,_escolhido
  1875  000C16  C006  F002         	movff	_latte+1,_escolhido+1
  1876  000C1A  C007  F003         	movff	_latte+2,_escolhido+2
  1877  000C1E  C008  F004         	movff	_latte+3,_escolhido+3
  1878  000C22                     
  1879                           ;main.c: 48:                 escolha=1;
  1880  000C22  0E01               	movlw	1
  1881  000C24  6E23               	movwf	_escolha^0,c
  1882  000C26  EF88  F006         	goto	l69
  1883  000C2A                     l2017:
  1884  000C2A  0423               	decf	_escolha^0,w,c
  1885  000C2C  A4D8               	btfss	status,2,c
  1886  000C2E  EF1B  F006         	goto	u1971
  1887  000C32  EF1D  F006         	goto	u1970
  1888  000C36                     u1971:
  1889  000C36  EF31  F006         	goto	l2027
  1890  000C3A                     u1970:
  1891  000C3A                     
  1892                           ;main.c: 52:             if(((tecla) & (1<<(8)))){
  1893  000C3A  A034               	btfss	(leTeclado@tecla+1)^0,0,c
  1894  000C3C  EF22  F006         	goto	u1981
  1895  000C40  EF24  F006         	goto	u1980
  1896  000C44                     u1981:
  1897  000C44  EF26  F006         	goto	l2023
  1898  000C48                     u1980:
  1899  000C48                     
  1900                           ;main.c: 53:                 escolha=0;
  1901  000C48  0E00               	movlw	0
  1902  000C4A  6E23               	movwf	_escolha^0,c
  1903  000C4C                     l2023:
  1904                           
  1905                           ;main.c: 55:             if(((tecla) & (1<<(6)))){
  1906  000C4C  AC33               	btfss	leTeclado@tecla^0,6,c
  1907  000C4E  EF2B  F006         	goto	u1991
  1908  000C52  EF2D  F006         	goto	u1990
  1909  000C56                     u1991:
  1910  000C56  EF88  F006         	goto	l69
  1911  000C5A                     u1990:
  1912  000C5A                     
  1913                           ;main.c: 56:                 escolha=2;
  1914  000C5A  0E02               	movlw	2
  1915  000C5C  6E23               	movwf	_escolha^0,c
  1916  000C5E  EF88  F006         	goto	l69
  1917  000C62                     l2027:
  1918  000C62  0E02               	movlw	2
  1919  000C64  1823               	xorwf	_escolha^0,w,c
  1920  000C66  A4D8               	btfss	status,2,c
  1921  000C68  EF38  F006         	goto	u2001
  1922  000C6C  EF3A  F006         	goto	u2000
  1923  000C70                     u2001:
  1924  000C70  EF5D  F006         	goto	l2041
  1925  000C74                     u2000:
  1926  000C74                     
  1927                           ;main.c: 60:             if(((tecla) & (1<<(0)))){
  1928  000C74  A033               	btfss	leTeclado@tecla^0,0,c
  1929  000C76  EF3F  F006         	goto	u2011
  1930  000C7A  EF41  F006         	goto	u2010
  1931  000C7E                     u2011:
  1932  000C7E  EF45  F006         	goto	l2033
  1933  000C82                     u2010:
  1934  000C82                     
  1935                           ;main.c: 61:                 escolhido.queima=1;
  1936  000C82  0E01               	movlw	1
  1937  000C84  6E03               	movwf	(_escolhido+2)^0,c
  1938                           
  1939                           ;main.c: 62:                 escolha=3;
  1940  000C86  0E03               	movlw	3
  1941  000C88  6E23               	movwf	_escolha^0,c
  1942  000C8A                     l2033:
  1943                           
  1944                           ;main.c: 64:             if(((tecla) & (1<<(1)))){
  1945  000C8A  A233               	btfss	leTeclado@tecla^0,1,c
  1946  000C8C  EF4A  F006         	goto	u2021
  1947  000C90  EF4C  F006         	goto	u2020
  1948  000C94                     u2021:
  1949  000C94  EF50  F006         	goto	l2037
  1950  000C98                     u2020:
  1951  000C98                     
  1952                           ;main.c: 65:                 escolhido.queima=2;
  1953  000C98  0E02               	movlw	2
  1954  000C9A  6E03               	movwf	(_escolhido+2)^0,c
  1955                           
  1956                           ;main.c: 66:                 escolha=3;
  1957  000C9C  0E03               	movlw	3
  1958  000C9E  6E23               	movwf	_escolha^0,c
  1959  000CA0                     l2037:
  1960                           
  1961                           ;main.c: 68:             if(((tecla) & (1<<(2)))){
  1962  000CA0  A433               	btfss	leTeclado@tecla^0,2,c
  1963  000CA2  EF55  F006         	goto	u2031
  1964  000CA6  EF57  F006         	goto	u2030
  1965  000CAA                     u2031:
  1966  000CAA  EF88  F006         	goto	l69
  1967  000CAE                     u2030:
  1968  000CAE                     
  1969                           ;main.c: 69:                 escolhido.queima=3;
  1970  000CAE  0E03               	movlw	3
  1971  000CB0  6E03               	movwf	(_escolhido+2)^0,c
  1972                           
  1973                           ;main.c: 70:                 escolha=3;
  1974  000CB2  0E03               	movlw	3
  1975  000CB4  6E23               	movwf	_escolha^0,c
  1976  000CB6  EF88  F006         	goto	l69
  1977  000CBA                     l2041:
  1978  000CBA  0E03               	movlw	3
  1979  000CBC  1823               	xorwf	_escolha^0,w,c
  1980  000CBE  A4D8               	btfss	status,2,c
  1981  000CC0  EF64  F006         	goto	u2041
  1982  000CC4  EF66  F006         	goto	u2040
  1983  000CC8                     u2041:
  1984  000CC8  EF88  F006         	goto	l69
  1985  000CCC                     u2040:
  1986  000CCC                     
  1987                           ;main.c: 74:             if(((tecla) & (1<<(8)))){
  1988  000CCC  A034               	btfss	(leTeclado@tecla+1)^0,0,c
  1989  000CCE  EF6B  F006         	goto	u2051
  1990  000CD2  EF6D  F006         	goto	u2050
  1991  000CD6                     u2051:
  1992  000CD6  EF76  F006         	goto	l2049
  1993  000CDA                     u2050:
  1994  000CDA                     
  1995                           ;main.c: 75:                 escolhido.acucar=0;
  1996  000CDA  0E00               	movlw	0
  1997  000CDC  6E04               	movwf	(_escolhido+3)^0,c
  1998  000CDE                     
  1999                           ;main.c: 76:                 seg=escolhido.tempo;
  2000  000CDE  C002  F01B         	movff	_escolhido+1,_seg
  2001  000CE2  6A1C               	clrf	(_seg+1)^0,c
  2002                           
  2003                           ;main.c: 77:                 escolha=4;
  2004  000CE4  0E04               	movlw	4
  2005  000CE6  6E23               	movwf	_escolha^0,c
  2006                           
  2007                           ;main.c: 78:                 start=1;
  2008  000CE8  0E01               	movlw	1
  2009  000CEA  6E24               	movwf	_start^0,c
  2010  000CEC                     l2049:
  2011                           
  2012                           ;main.c: 80:             if(((tecla) & (1<<(6)))){
  2013  000CEC  AC33               	btfss	leTeclado@tecla^0,6,c
  2014  000CEE  EF7B  F006         	goto	u2061
  2015  000CF2  EF7D  F006         	goto	u2060
  2016  000CF6                     u2061:
  2017  000CF6  EF88  F006         	goto	l56
  2018  000CFA                     u2060:
  2019  000CFA                     
  2020                           ;main.c: 81:                 escolhido.acucar=1;
  2021  000CFA  0E01               	movlw	1
  2022  000CFC  6E04               	movwf	(_escolhido+3)^0,c
  2023  000CFE                     
  2024                           ;main.c: 82:                 seg=escolhido.tempo;
  2025  000CFE  C002  F01B         	movff	_escolhido+1,_seg
  2026  000D02  6A1C               	clrf	(_seg+1)^0,c
  2027                           
  2028                           ;main.c: 83:                 escolha=4;
  2029  000D04  0E04               	movlw	4
  2030  000D06  6E23               	movwf	_escolha^0,c
  2031                           
  2032                           ;main.c: 84:                 start=1;
  2033  000D08  0E01               	movlw	1
  2034  000D0A  6E24               	movwf	_start^0,c
  2035  000D0C  EF88  F006         	goto	l69
  2036  000D10                     l56:
  2037  000D10                     l69:
  2038  000D10  0012               	return		;funcret
  2039  000D12                     __end_of_leTeclado:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _kpRead *****************
  2043 ;; Defined at:
  2044 ;;		line 14 in file "keypad.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    0[COMRAM] unsigned int 
  2051 ;; Registers used:
  2052 ;;		None
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2058 ;;      Params:         2       0       0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0
  2061 ;;      Totals:         2       0       0       0       0       0       0
  2062 ;;Total ram usage:        2 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_leTeclado
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text10
  2072  001BFE                     __ptext10:
  2073                           	callstack 0
  2074  001BFE                     _kpRead:
  2075                           	callstack 29
  2076  001BFE                     
  2077                           ;keypad.c: 15:     return keys;
  2078  001BFE  C019  F025         	movff	_keys,?_kpRead
  2079  001C02  C01A  F026         	movff	_keys+1,?_kpRead+1
  2080  001C06  0012               	return		;funcret
  2081  001C08                     __end_of_kpRead:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _kpDebounce *****************
  2085 ;; Defined at:
  2086 ;;		line 27 in file "keypad.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  i               2   12[COMRAM] int 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2100 ;;      Params:         0       0       0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0       0       0
  2102 ;;      Temps:          3       0       0       0       0       0       0
  2103 ;;      Totals:         5       0       0       0       0       0       0
  2104 ;;Total ram usage:        5 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 3
  2107 ;; This function calls:
  2108 ;;		_digitalRead
  2109 ;;		_soWrite
  2110 ;; This function is called by:
  2111 ;;		_leTeclado
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text11
  2116  0012FE                     __ptext11:
  2117                           	callstack 0
  2118  0012FE                     _kpDebounce:
  2119                           	callstack 26
  2120  0012FE                     
  2121                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2122  0012FE  0E00               	movlw	0
  2123  001300  6E18               	movwf	(kpDebounce@newRead+1)^0,c
  2124  001302  0E00               	movlw	0
  2125  001304  6E17               	movwf	kpDebounce@newRead^0,c
  2126                           
  2127                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2128  001306  0E00               	movlw	0
  2129  001308  6E32               	movwf	(kpDebounce@i+1)^0,c
  2130  00130A  0E00               	movlw	0
  2131  00130C  6E31               	movwf	kpDebounce@i^0,c
  2132  00130E                     l1923:
  2133  00130E  BE32               	btfsc	(kpDebounce@i+1)^0,7,c
  2134  001310  EF93  F009         	goto	u1761
  2135  001314  5032               	movf	(kpDebounce@i+1)^0,w,c
  2136  001316  E109               	bnz	u1760
  2137  001318  0E05               	movlw	5
  2138  00131A  5C31               	subwf	kpDebounce@i^0,w,c
  2139  00131C  A0D8               	btfss	status,0,c
  2140  00131E  EF93  F009         	goto	u1761
  2141  001322  EF95  F009         	goto	u1760
  2142  001326                     u1761:
  2143  001326  EF97  F009         	goto	l1927
  2144  00132A                     u1760:
  2145  00132A  EFF8  F009         	goto	l1939
  2146  00132E                     l1927:
  2147                           
  2148                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2149  00132E  C031  F02E         	movff	kpDebounce@i,??_kpDebounce
  2150  001332  0E03               	movlw	3
  2151  001334  262E               	addwf	??_kpDebounce^0,f,c
  2152  001336  0E01               	movlw	1
  2153  001338  6E2F               	movwf	(??_kpDebounce+1)^0,c
  2154  00133A  0E00               	movlw	0
  2155  00133C  6E30               	movwf	(??_kpDebounce+2)^0,c
  2156  00133E  2A2E               	incf	??_kpDebounce^0,f,c
  2157  001340  EFA5  F009         	goto	u1774
  2158  001344                     u1775:
  2159  001344  90D8               	bcf	status,0,c
  2160  001346  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  2161  001348  3630               	rlcf	(??_kpDebounce+2)^0,f,c
  2162  00134A                     u1774:
  2163  00134A  2E2E               	decfsz	??_kpDebounce^0,f,c
  2164  00134C  EFA2  F009         	goto	u1775
  2165  001350  C02F  F02B         	movff	??_kpDebounce+1,soWrite@value
  2166  001354  C030  F02C         	movff	??_kpDebounce+2,soWrite@value+1
  2167  001358  ECCE  F00C         	call	_soWrite	;wreg free
  2168                           
  2169                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2170  00135C  0E00               	movlw	0
  2171  00135E  6E26               	movwf	(digitalRead@pin+1)^0,c
  2172  001360  0E0A               	movlw	10
  2173  001362  6E25               	movwf	digitalRead@pin^0,c
  2174  001364  ECCA  F008         	call	_digitalRead	;wreg free
  2175  001368  5025               	movf	?_digitalRead^0,w,c
  2176  00136A  1026               	iorwf	(?_digitalRead+1)^0,w,c
  2177  00136C  B4D8               	btfsc	status,2,c
  2178  00136E  EFBB  F009         	goto	u1781
  2179  001372  EFBD  F009         	goto	u1780
  2180  001376                     u1781:
  2181  001376  EFD0  F009         	goto	l1931
  2182  00137A                     u1780:
  2183  00137A                     
  2184                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2185  00137A  C031  F02E         	movff	kpDebounce@i,??_kpDebounce
  2186  00137E  0E01               	movlw	1
  2187  001380  6E2F               	movwf	(??_kpDebounce+1)^0,c
  2188  001382  0E00               	movlw	0
  2189  001384  6E30               	movwf	(??_kpDebounce+2)^0,c
  2190  001386  2A2E               	incf	??_kpDebounce^0,f,c
  2191  001388  EFC9  F009         	goto	u1794
  2192  00138C                     u1795:
  2193  00138C  90D8               	bcf	status,0,c
  2194  00138E  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  2195  001390  3630               	rlcf	(??_kpDebounce+2)^0,f,c
  2196  001392                     u1794:
  2197  001392  2E2E               	decfsz	??_kpDebounce^0,f,c
  2198  001394  EFC6  F009         	goto	u1795
  2199  001398  502F               	movf	(??_kpDebounce+1)^0,w,c
  2200  00139A  1217               	iorwf	kpDebounce@newRead^0,f,c
  2201  00139C  5030               	movf	(??_kpDebounce+2)^0,w,c
  2202  00139E  1218               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2203  0013A0                     l1931:
  2204                           
  2205                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2206  0013A0  0E00               	movlw	0
  2207  0013A2  6E26               	movwf	(digitalRead@pin+1)^0,c
  2208  0013A4  0E09               	movlw	9
  2209  0013A6  6E25               	movwf	digitalRead@pin^0,c
  2210  0013A8  ECCA  F008         	call	_digitalRead	;wreg free
  2211  0013AC  5025               	movf	?_digitalRead^0,w,c
  2212  0013AE  1026               	iorwf	(?_digitalRead+1)^0,w,c
  2213  0013B0  B4D8               	btfsc	status,2,c
  2214  0013B2  EFDD  F009         	goto	u1801
  2215  0013B6  EFDF  F009         	goto	u1800
  2216  0013BA                     u1801:
  2217  0013BA  EFF4  F009         	goto	l1935
  2218  0013BE                     u1800:
  2219  0013BE                     
  2220                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2221  0013BE  C031  F02E         	movff	kpDebounce@i,??_kpDebounce
  2222  0013C2  0E05               	movlw	5
  2223  0013C4  262E               	addwf	??_kpDebounce^0,f,c
  2224  0013C6  0E01               	movlw	1
  2225  0013C8  6E2F               	movwf	(??_kpDebounce+1)^0,c
  2226  0013CA  0E00               	movlw	0
  2227  0013CC  6E30               	movwf	(??_kpDebounce+2)^0,c
  2228  0013CE  2A2E               	incf	??_kpDebounce^0,f,c
  2229  0013D0  EFED  F009         	goto	u1814
  2230  0013D4                     u1815:
  2231  0013D4  90D8               	bcf	status,0,c
  2232  0013D6  362F               	rlcf	(??_kpDebounce+1)^0,f,c
  2233  0013D8  3630               	rlcf	(??_kpDebounce+2)^0,f,c
  2234  0013DA                     u1814:
  2235  0013DA  2E2E               	decfsz	??_kpDebounce^0,f,c
  2236  0013DC  EFEA  F009         	goto	u1815
  2237  0013E0  502F               	movf	(??_kpDebounce+1)^0,w,c
  2238  0013E2  1217               	iorwf	kpDebounce@newRead^0,f,c
  2239  0013E4  5030               	movf	(??_kpDebounce+2)^0,w,c
  2240  0013E6  1218               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2241  0013E8                     l1935:
  2242                           
  2243                           ;keypad.c: 42:     }
  2244  0013E8  4A31               	infsnz	kpDebounce@i^0,f,c
  2245  0013EA  2A32               	incf	(kpDebounce@i+1)^0,f,c
  2246  0013EC  EF87  F009         	goto	l1923
  2247  0013F0                     l1939:
  2248                           
  2249                           ;keypad.c: 43:     if (oldRead == newRead) {
  2250  0013F0  5017               	movf	kpDebounce@newRead^0,w,c
  2251  0013F2  1815               	xorwf	kpDebounce@oldRead^0,w,c
  2252  0013F4  E107               	bnz	u1821
  2253  0013F6  5018               	movf	(kpDebounce@newRead+1)^0,w,c
  2254  0013F8  1816               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2255  0013FA  A4D8               	btfss	status,2,c
  2256  0013FC  EF02  F00A         	goto	u1821
  2257  001400  EF04  F00A         	goto	u1820
  2258  001404                     u1821:
  2259  001404  EF07  F00A         	goto	l1943
  2260  001408                     u1820:
  2261  001408                     
  2262                           ;keypad.c: 44:         tempo--;
  2263  001408  0622               	decf	kpDebounce@tempo^0,f,c
  2264                           
  2265                           ;keypad.c: 45:     } else {
  2266  00140A  EF0D  F00A         	goto	l163
  2267  00140E                     l1943:
  2268                           
  2269                           ;keypad.c: 46:         tempo = 1;
  2270  00140E  0E01               	movlw	1
  2271  001410  6E22               	movwf	kpDebounce@tempo^0,c
  2272  001412                     
  2273                           ;keypad.c: 47:         oldRead = newRead;
  2274  001412  C017  F015         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2275  001416  C018  F016         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2276  00141A                     l163:
  2277                           
  2278                           ;keypad.c: 49:     if (tempo == 0) {
  2279  00141A  5022               	movf	kpDebounce@tempo^0,w,c
  2280  00141C  A4D8               	btfss	status,2,c
  2281  00141E  EF13  F00A         	goto	u1831
  2282  001422  EF15  F00A         	goto	u1830
  2283  001426                     u1831:
  2284  001426  EF19  F00A         	goto	l165
  2285  00142A                     u1830:
  2286  00142A                     
  2287                           ;keypad.c: 50:         keys = oldRead;
  2288  00142A  C015  F019         	movff	kpDebounce@oldRead,_keys
  2289  00142E  C016  F01A         	movff	kpDebounce@oldRead+1,_keys+1
  2290  001432                     l165:
  2291  001432  0012               	return		;funcret
  2292  001434                     __end_of_kpDebounce:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _digitalRead *****************
  2296 ;; Defined at:
  2297 ;;		line 39 in file "io.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  pin             2    0[COMRAM] int 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    0[COMRAM] int 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         2       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0
  2313 ;;      Temps:          3       0       0       0       0       0       0
  2314 ;;      Totals:         5       0       0       0       0       0       0
  2315 ;;Total ram usage:        5 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_kpDebounce
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text12
  2325  001194                     __ptext12:
  2326                           	callstack 0
  2327  001194                     _digitalRead:
  2328                           	callstack 28
  2329  001194                     
  2330                           ;io.c: 40:     if(pin <8){
  2331  001194  BE26               	btfsc	(digitalRead@pin+1)^0,7,c
  2332  001196  EFD8  F008         	goto	u1450
  2333  00119A  5026               	movf	(digitalRead@pin+1)^0,w,c
  2334  00119C  E107               	bnz	u1451
  2335  00119E  0E08               	movlw	8
  2336  0011A0  5C25               	subwf	digitalRead@pin^0,w,c
  2337  0011A2  B0D8               	btfsc	status,0,c
  2338  0011A4  EFD6  F008         	goto	u1451
  2339  0011A8  EFD8  F008         	goto	u1450
  2340  0011AC                     u1451:
  2341  0011AC  EFEC  F008         	goto	l1845
  2342  0011B0                     u1450:
  2343  0011B0                     
  2344                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2345  0011B0  C025  F027         	movff	digitalRead@pin,??_digitalRead
  2346  0011B4  0E01               	movlw	1
  2347  0011B6  6E28               	movwf	(??_digitalRead+1)^0,c
  2348  0011B8  2A27               	incf	??_digitalRead^0,f,c
  2349  0011BA  EFE1  F008         	goto	u1464
  2350  0011BE                     u1465:
  2351  0011BE  90D8               	bcf	status,0,c
  2352  0011C0  3628               	rlcf	(??_digitalRead+1)^0,f,c
  2353  0011C2                     u1464:
  2354  0011C2  2E27               	decfsz	??_digitalRead^0,f,c
  2355  0011C4  EFDF  F008         	goto	u1465
  2356  0011C8  5028               	movf	(??_digitalRead+1)^0,w,c
  2357  0011CA  1480               	andwf	128,w,c	;volatile
  2358  0011CC  6E29               	movwf	(??_digitalRead+2)^0,c
  2359  0011CE  5029               	movf	(??_digitalRead+2)^0,w,c
  2360  0011D0  6E25               	movwf	?_digitalRead^0,c
  2361  0011D2  6A26               	clrf	(?_digitalRead+1)^0,c
  2362  0011D4  EF7E  F009         	goto	l329
  2363  0011D8                     l1845:
  2364  0011D8  BE26               	btfsc	(digitalRead@pin+1)^0,7,c
  2365  0011DA  EFFA  F008         	goto	u1470
  2366  0011DE  5026               	movf	(digitalRead@pin+1)^0,w,c
  2367  0011E0  E107               	bnz	u1471
  2368  0011E2  0E10               	movlw	16
  2369  0011E4  5C25               	subwf	digitalRead@pin^0,w,c
  2370  0011E6  B0D8               	btfsc	status,0,c
  2371  0011E8  EFF8  F008         	goto	u1471
  2372  0011EC  EFFA  F008         	goto	u1470
  2373  0011F0                     u1471:
  2374  0011F0  EF10  F009         	goto	l1853
  2375  0011F4                     u1470:
  2376  0011F4                     
  2377                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2378  0011F4  C025  F027         	movff	digitalRead@pin,??_digitalRead
  2379  0011F8  0EF8               	movlw	-8
  2380  0011FA  2627               	addwf	??_digitalRead^0,f,c
  2381  0011FC  0E01               	movlw	1
  2382  0011FE  6E28               	movwf	(??_digitalRead+1)^0,c
  2383  001200  2A27               	incf	??_digitalRead^0,f,c
  2384  001202  EF05  F009         	goto	u1484
  2385  001206                     u1485:
  2386  001206  90D8               	bcf	status,0,c
  2387  001208  3628               	rlcf	(??_digitalRead+1)^0,f,c
  2388  00120A                     u1484:
  2389  00120A  2E27               	decfsz	??_digitalRead^0,f,c
  2390  00120C  EF03  F009         	goto	u1485
  2391  001210  5028               	movf	(??_digitalRead+1)^0,w,c
  2392  001212  1481               	andwf	129,w,c	;volatile
  2393  001214  6E29               	movwf	(??_digitalRead+2)^0,c
  2394  001216  5029               	movf	(??_digitalRead+2)^0,w,c
  2395  001218  6E25               	movwf	?_digitalRead^0,c
  2396  00121A  6A26               	clrf	(?_digitalRead+1)^0,c
  2397  00121C  EF7E  F009         	goto	l329
  2398  001220                     l1853:
  2399  001220  BE26               	btfsc	(digitalRead@pin+1)^0,7,c
  2400  001222  EF1E  F009         	goto	u1490
  2401  001226  5026               	movf	(digitalRead@pin+1)^0,w,c
  2402  001228  E107               	bnz	u1491
  2403  00122A  0E18               	movlw	24
  2404  00122C  5C25               	subwf	digitalRead@pin^0,w,c
  2405  00122E  B0D8               	btfsc	status,0,c
  2406  001230  EF1C  F009         	goto	u1491
  2407  001234  EF1E  F009         	goto	u1490
  2408  001238                     u1491:
  2409  001238  EF34  F009         	goto	l1861
  2410  00123C                     u1490:
  2411  00123C                     
  2412                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2413  00123C  C025  F027         	movff	digitalRead@pin,??_digitalRead
  2414  001240  0EF0               	movlw	-16
  2415  001242  2627               	addwf	??_digitalRead^0,f,c
  2416  001244  0E01               	movlw	1
  2417  001246  6E28               	movwf	(??_digitalRead+1)^0,c
  2418  001248  2A27               	incf	??_digitalRead^0,f,c
  2419  00124A  EF29  F009         	goto	u1504
  2420  00124E                     u1505:
  2421  00124E  90D8               	bcf	status,0,c
  2422  001250  3628               	rlcf	(??_digitalRead+1)^0,f,c
  2423  001252                     u1504:
  2424  001252  2E27               	decfsz	??_digitalRead^0,f,c
  2425  001254  EF27  F009         	goto	u1505
  2426  001258  5028               	movf	(??_digitalRead+1)^0,w,c
  2427  00125A  1482               	andwf	130,w,c	;volatile
  2428  00125C  6E29               	movwf	(??_digitalRead+2)^0,c
  2429  00125E  5029               	movf	(??_digitalRead+2)^0,w,c
  2430  001260  6E25               	movwf	?_digitalRead^0,c
  2431  001262  6A26               	clrf	(?_digitalRead+1)^0,c
  2432  001264  EF7E  F009         	goto	l329
  2433  001268                     l1861:
  2434  001268  BE26               	btfsc	(digitalRead@pin+1)^0,7,c
  2435  00126A  EF42  F009         	goto	u1510
  2436  00126E  5026               	movf	(digitalRead@pin+1)^0,w,c
  2437  001270  E107               	bnz	u1511
  2438  001272  0E20               	movlw	32
  2439  001274  5C25               	subwf	digitalRead@pin^0,w,c
  2440  001276  B0D8               	btfsc	status,0,c
  2441  001278  EF40  F009         	goto	u1511
  2442  00127C  EF42  F009         	goto	u1510
  2443  001280                     u1511:
  2444  001280  EF58  F009         	goto	l1869
  2445  001284                     u1510:
  2446  001284                     
  2447                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2448  001284  C025  F027         	movff	digitalRead@pin,??_digitalRead
  2449  001288  0EE8               	movlw	-24
  2450  00128A  2627               	addwf	??_digitalRead^0,f,c
  2451  00128C  0E01               	movlw	1
  2452  00128E  6E28               	movwf	(??_digitalRead+1)^0,c
  2453  001290  2A27               	incf	??_digitalRead^0,f,c
  2454  001292  EF4D  F009         	goto	u1524
  2455  001296                     u1525:
  2456  001296  90D8               	bcf	status,0,c
  2457  001298  3628               	rlcf	(??_digitalRead+1)^0,f,c
  2458  00129A                     u1524:
  2459  00129A  2E27               	decfsz	??_digitalRead^0,f,c
  2460  00129C  EF4B  F009         	goto	u1525
  2461  0012A0  5028               	movf	(??_digitalRead+1)^0,w,c
  2462  0012A2  1483               	andwf	131,w,c	;volatile
  2463  0012A4  6E29               	movwf	(??_digitalRead+2)^0,c
  2464  0012A6  5029               	movf	(??_digitalRead+2)^0,w,c
  2465  0012A8  6E25               	movwf	?_digitalRead^0,c
  2466  0012AA  6A26               	clrf	(?_digitalRead+1)^0,c
  2467  0012AC  EF7E  F009         	goto	l329
  2468  0012B0                     l1869:
  2469  0012B0  BE26               	btfsc	(digitalRead@pin+1)^0,7,c
  2470  0012B2  EF66  F009         	goto	u1530
  2471  0012B6  5026               	movf	(digitalRead@pin+1)^0,w,c
  2472  0012B8  E107               	bnz	u1531
  2473  0012BA  0E28               	movlw	40
  2474  0012BC  5C25               	subwf	digitalRead@pin^0,w,c
  2475  0012BE  B0D8               	btfsc	status,0,c
  2476  0012C0  EF64  F009         	goto	u1531
  2477  0012C4  EF66  F009         	goto	u1530
  2478  0012C8                     u1531:
  2479  0012C8  EF7C  F009         	goto	l334
  2480  0012CC                     u1530:
  2481  0012CC                     
  2482                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2483  0012CC  C025  F027         	movff	digitalRead@pin,??_digitalRead
  2484  0012D0  0EE0               	movlw	-32
  2485  0012D2  2627               	addwf	??_digitalRead^0,f,c
  2486  0012D4  0E01               	movlw	1
  2487  0012D6  6E28               	movwf	(??_digitalRead+1)^0,c
  2488  0012D8  2A27               	incf	??_digitalRead^0,f,c
  2489  0012DA  EF71  F009         	goto	u1544
  2490  0012DE                     u1545:
  2491  0012DE  90D8               	bcf	status,0,c
  2492  0012E0  3628               	rlcf	(??_digitalRead+1)^0,f,c
  2493  0012E2                     u1544:
  2494  0012E2  2E27               	decfsz	??_digitalRead^0,f,c
  2495  0012E4  EF6F  F009         	goto	u1545
  2496  0012E8  5028               	movf	(??_digitalRead+1)^0,w,c
  2497  0012EA  1484               	andwf	132,w,c	;volatile
  2498  0012EC  6E29               	movwf	(??_digitalRead+2)^0,c
  2499  0012EE  5029               	movf	(??_digitalRead+2)^0,w,c
  2500  0012F0  6E25               	movwf	?_digitalRead^0,c
  2501  0012F2  6A26               	clrf	(?_digitalRead+1)^0,c
  2502  0012F4  EF7E  F009         	goto	l329
  2503  0012F8                     l334:
  2504  0012F8                     
  2505                           ;io.c: 51:     return -1;
  2506  0012F8  6825               	setf	?_digitalRead^0,c
  2507  0012FA  6826               	setf	(?_digitalRead+1)^0,c
  2508  0012FC                     l329:
  2509  0012FC  0012               	return		;funcret
  2510  0012FE                     __end_of_digitalRead:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _lcdInit *****************
  2514 ;; Defined at:
  2515 ;;		line 72 in file "lcd.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2529 ;;      Params:         0       0       0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0
  2532 ;;      Totals:         0       0       0       0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 5
  2536 ;; This function calls:
  2537 ;;		_delayMicro
  2538 ;;		_delayMili
  2539 ;;		_lcdCommand
  2540 ;;		_pinMode
  2541 ;;		_pushNibble
  2542 ;;		_soInit
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text13
  2549  0015CC                     __ptext13:
  2550                           	callstack 0
  2551  0015CC                     _lcdInit:
  2552                           	callstack 25
  2553  0015CC                     
  2554                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2555  0015CC  0E00               	movlw	0
  2556  0015CE  6E26               	movwf	(pinMode@pin+1)^0,c
  2557  0015D0  0E1C               	movlw	28
  2558  0015D2  6E25               	movwf	pinMode@pin^0,c
  2559  0015D4  0E00               	movlw	0
  2560  0015D6  6E28               	movwf	(pinMode@type+1)^0,c
  2561  0015D8  0E00               	movlw	0
  2562  0015DA  6E27               	movwf	pinMode@type^0,c
  2563  0015DC  EC8C  F004         	call	_pinMode	;wreg free
  2564                           
  2565                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2566  0015E0  0E00               	movlw	0
  2567  0015E2  6E26               	movwf	(pinMode@pin+1)^0,c
  2568  0015E4  0E1D               	movlw	29
  2569  0015E6  6E25               	movwf	pinMode@pin^0,c
  2570  0015E8  0E00               	movlw	0
  2571  0015EA  6E28               	movwf	(pinMode@type+1)^0,c
  2572  0015EC  0E00               	movlw	0
  2573  0015EE  6E27               	movwf	pinMode@type^0,c
  2574  0015F0  EC8C  F004         	call	_pinMode	;wreg free
  2575                           
  2576                           ;lcd.c: 75:  soInit();
  2577  0015F4  EC16  F00D         	call	_soInit	;wreg free
  2578                           
  2579                           ;lcd.c: 76:  delayMili(15);
  2580  0015F8  0E00               	movlw	0
  2581  0015FA  6E26               	movwf	(delayMili@a+1)^0,c
  2582  0015FC  0E0F               	movlw	15
  2583  0015FE  6E25               	movwf	delayMili@a^0,c
  2584  001600  EC4E  F00D         	call	_delayMili	;wreg free
  2585                           
  2586                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2587  001604  0E00               	movlw	0
  2588  001606  6E2F               	movwf	(pushNibble@rs+1)^0,c
  2589  001608  0E00               	movlw	0
  2590  00160A  6E2E               	movwf	pushNibble@rs^0,c
  2591  00160C  0E03               	movlw	3
  2592  00160E  ECA4  F00D         	call	_pushNibble
  2593                           
  2594                           ;lcd.c: 79:  delayMili(5);
  2595  001612  0E00               	movlw	0
  2596  001614  6E26               	movwf	(delayMili@a+1)^0,c
  2597  001616  0E05               	movlw	5
  2598  001618  6E25               	movwf	delayMili@a^0,c
  2599  00161A  EC4E  F00D         	call	_delayMili	;wreg free
  2600                           
  2601                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2602  00161E  0E00               	movlw	0
  2603  001620  6E2F               	movwf	(pushNibble@rs+1)^0,c
  2604  001622  0E00               	movlw	0
  2605  001624  6E2E               	movwf	pushNibble@rs^0,c
  2606  001626  0E03               	movlw	3
  2607  001628  ECA4  F00D         	call	_pushNibble
  2608  00162C                     
  2609                           ;lcd.c: 81:  delayMicro(160);
  2610  00162C  0E00               	movlw	0
  2611  00162E  6E26               	movwf	(delayMicro@a+1)^0,c
  2612  001630  0EA0               	movlw	160
  2613  001632  6E25               	movwf	delayMicro@a^0,c
  2614  001634  EC08  F00E         	call	_delayMicro	;wreg free
  2615  001638                     
  2616                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2617  001638  0E00               	movlw	0
  2618  00163A  6E2F               	movwf	(pushNibble@rs+1)^0,c
  2619  00163C  0E00               	movlw	0
  2620  00163E  6E2E               	movwf	pushNibble@rs^0,c
  2621  001640  0E03               	movlw	3
  2622  001642  ECA4  F00D         	call	_pushNibble
  2623                           
  2624                           ;lcd.c: 83:  delayMicro(160);
  2625  001646  0E00               	movlw	0
  2626  001648  6E26               	movwf	(delayMicro@a+1)^0,c
  2627  00164A  0EA0               	movlw	160
  2628  00164C  6E25               	movwf	delayMicro@a^0,c
  2629  00164E  EC08  F00E         	call	_delayMicro	;wreg free
  2630  001652                     
  2631                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2632  001652  0E00               	movlw	0
  2633  001654  6E2F               	movwf	(pushNibble@rs+1)^0,c
  2634  001656  0E00               	movlw	0
  2635  001658  6E2E               	movwf	pushNibble@rs^0,c
  2636  00165A  0E02               	movlw	2
  2637  00165C  ECA4  F00D         	call	_pushNibble
  2638  001660                     
  2639                           ;lcd.c: 86:  delayMili(10);
  2640  001660  0E00               	movlw	0
  2641  001662  6E26               	movwf	(delayMili@a+1)^0,c
  2642  001664  0E0A               	movlw	10
  2643  001666  6E25               	movwf	delayMili@a^0,c
  2644  001668  EC4E  F00D         	call	_delayMili	;wreg free
  2645  00166C                     
  2646                           ;lcd.c: 88:  lcdCommand(0x28);
  2647  00166C  0E28               	movlw	40
  2648  00166E  ECD9  F00D         	call	_lcdCommand
  2649  001672                     
  2650                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2651  001672  0E0C               	movlw	12
  2652  001674  ECD9  F00D         	call	_lcdCommand
  2653  001678                     
  2654                           ;lcd.c: 90:  lcdCommand(0x01);
  2655  001678  0E01               	movlw	1
  2656  00167A  ECD9  F00D         	call	_lcdCommand
  2657  00167E  0012               	return		;funcret
  2658  001680                     __end_of_lcdInit:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _pushNibble *****************
  2662 ;; Defined at:
  2663 ;;		line 25 in file "lcd.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  value           1    wreg     unsigned char 
  2666 ;;  rs              2    9[COMRAM] int 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  value           1   11[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         2       0       0       0       0       0       0
  2679 ;;      Locals:         1       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0
  2681 ;;      Totals:         3       0       0       0       0       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 3
  2685 ;; This function calls:
  2686 ;;		_digitalWrite
  2687 ;;		_pulseEnablePin
  2688 ;;		_soWrite
  2689 ;; This function is called by:
  2690 ;;		_lcdInit
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text14
  2695  001B48                     __ptext14:
  2696                           	callstack 0
  2697  001B48                     _pushNibble:
  2698                           	callstack 26
  2699                           
  2700                           ;incstack = 0
  2701                           ;pushNibble@value stored from wreg
  2702  001B48  6E30               	movwf	pushNibble@value^0,c
  2703  001B4A                     
  2704                           ;lcd.c: 26:  soWrite(value);
  2705  001B4A  C030  F02B         	movff	pushNibble@value,soWrite@value
  2706  001B4E  6A2C               	clrf	(soWrite@value+1)^0,c
  2707  001B50  ECCE  F00C         	call	_soWrite	;wreg free
  2708                           
  2709                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2710  001B54  0E00               	movlw	0
  2711  001B56  6E26               	movwf	(digitalWrite@pin+1)^0,c
  2712  001B58  0E1D               	movlw	29
  2713  001B5A  6E25               	movwf	digitalWrite@pin^0,c
  2714  001B5C  C02E  F027         	movff	pushNibble@rs,digitalWrite@value
  2715  001B60  C02F  F028         	movff	pushNibble@rs+1,digitalWrite@value+1
  2716  001B64  EC65  F003         	call	_digitalWrite	;wreg free
  2717                           
  2718                           ;lcd.c: 28:  pulseEnablePin();
  2719  001B68  ECF5  F00C         	call	_pulseEnablePin	;wreg free
  2720  001B6C  0012               	return		;funcret
  2721  001B6E                     __end_of_pushNibble:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _lcd *****************
  2725 ;; Defined at:
  2726 ;;		line 112 in file "main.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         0       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 7
  2747 ;; This function calls:
  2748 ;;		_ImprimeCafe
  2749 ;;		_lcdCommand
  2750 ;;		_lcdString
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text15
  2757  000EA6                     __ptext15:
  2758                           	callstack 0
  2759  000EA6                     _lcd:
  2760                           	callstack 23
  2761  000EA6                     
  2762                           ;main.c: 113:     if(escolha!=antes){
  2763  000EA6  503F               	movf	_antes^0,w,c
  2764  000EA8  1823               	xorwf	_escolha^0,w,c
  2765  000EAA  B4D8               	btfsc	status,2,c
  2766  000EAC  EF5A  F007         	goto	u2071
  2767  000EB0  EF5C  F007         	goto	u2070
  2768  000EB4                     u2071:
  2769  000EB4  EF11  F008         	goto	l86
  2770  000EB8                     u2070:
  2771  000EB8                     
  2772                           ;main.c: 114:         lcdCommand(0x80);
  2773  000EB8  0E80               	movlw	128
  2774  000EBA  ECD9  F00D         	call	_lcdCommand
  2775                           
  2776                           ;main.c: 115:         lcdCommand(0x01);
  2777  000EBE  0E01               	movlw	1
  2778  000EC0  ECD9  F00D         	call	_lcdCommand
  2779                           
  2780                           ;main.c: 116:         lcdCommand(0xC0);
  2781  000EC4  0EC0               	movlw	192
  2782  000EC6  ECD9  F00D         	call	_lcdCommand
  2783                           
  2784                           ;main.c: 117:         lcdCommand(0x01);
  2785  000ECA  0E01               	movlw	1
  2786  000ECC  ECD9  F00D         	call	_lcdCommand
  2787                           
  2788                           ;main.c: 118:         switch (escolha){
  2789  000ED0  EFF0  F007         	goto	l2105
  2790  000ED4                     l2059:
  2791                           
  2792                           ;main.c: 120:                 lcdCommand(0x80);
  2793  000ED4  0E80               	movlw	128
  2794  000ED6  ECD9  F00D         	call	_lcdCommand
  2795  000EDA                     
  2796                           ;main.c: 121:                 lcdString("Escolha 1 cafe:");
  2797  000EDA  0E2E               	movlw	low STR_7
  2798  000EDC  6E33               	movwf	lcdString@msg^0,c
  2799  000EDE  0E06               	movlw	high STR_7
  2800  000EE0  6E34               	movwf	(lcdString@msg+1)^0,c
  2801  000EE2  ECA3  F00C         	call	_lcdString	;wreg free
  2802  000EE6                     
  2803                           ;main.c: 122:                 lcdCommand(0xC0);
  2804  000EE6  0EC0               	movlw	192
  2805  000EE8  ECD9  F00D         	call	_lcdCommand
  2806                           
  2807                           ;main.c: 123:                 break;
  2808  000EEC  EF11  F008         	goto	l86
  2809  000EF0                     l2065:
  2810                           
  2811                           ;main.c: 125:                 lcdCommand(0x80);
  2812  000EF0  0E80               	movlw	128
  2813  000EF2  ECD9  F00D         	call	_lcdCommand
  2814  000EF6                     
  2815                           ;main.c: 126:                 ImprimeCafe();
  2816  000EF6  EC1A  F00A         	call	_ImprimeCafe	;wreg free
  2817  000EFA                     
  2818                           ;main.c: 127:                 lcdCommand(0xC0);
  2819  000EFA  0EC0               	movlw	192
  2820  000EFC  ECD9  F00D         	call	_lcdCommand
  2821                           
  2822                           ;main.c: 128:                 lcdString("8-Nao    6-Sim");
  2823  000F00  0E4E               	movlw	low STR_8
  2824  000F02  6E33               	movwf	lcdString@msg^0,c
  2825  000F04  0E06               	movlw	high STR_8
  2826  000F06  6E34               	movwf	(lcdString@msg+1)^0,c
  2827  000F08  ECA3  F00C         	call	_lcdString	;wreg free
  2828                           
  2829                           ;main.c: 129:                 break;
  2830  000F0C  EF11  F008         	goto	l86
  2831  000F10                     l2071:
  2832                           
  2833                           ;main.c: 131:                 lcdCommand(0x80);
  2834  000F10  0E80               	movlw	128
  2835  000F12  ECD9  F00D         	call	_lcdCommand
  2836  000F16                     
  2837                           ;main.c: 132:                 lcdString("Normal/Forte/Extra");
  2838  000F16  0E1B               	movlw	low STR_9
  2839  000F18  6E33               	movwf	lcdString@msg^0,c
  2840  000F1A  0E06               	movlw	high STR_9
  2841  000F1C  6E34               	movwf	(lcdString@msg+1)^0,c
  2842  000F1E  ECA3  F00C         	call	_lcdString	;wreg free
  2843  000F22                     
  2844                           ;main.c: 133:                 lcdCommand(0xC0);
  2845  000F22  0EC0               	movlw	192
  2846  000F24  ECD9  F00D         	call	_lcdCommand
  2847                           
  2848                           ;main.c: 134:                 lcdString("0-N 1-F 2-EF");
  2849  000F28  0E79               	movlw	low STR_10
  2850  000F2A  6E33               	movwf	lcdString@msg^0,c
  2851  000F2C  0E06               	movlw	high STR_10
  2852  000F2E  6E34               	movwf	(lcdString@msg+1)^0,c
  2853  000F30  ECA3  F00C         	call	_lcdString	;wreg free
  2854                           
  2855                           ;main.c: 135:                 break;
  2856  000F34  EF11  F008         	goto	l86
  2857  000F38                     l2077:
  2858                           
  2859                           ;main.c: 137:                 lcdCommand(0x80);
  2860  000F38  0E80               	movlw	128
  2861  000F3A  ECD9  F00D         	call	_lcdCommand
  2862  000F3E                     
  2863                           ;main.c: 138:                 lcdString("Quer acucar??");
  2864  000F3E  0E5D               	movlw	low STR_11
  2865  000F40  6E33               	movwf	lcdString@msg^0,c
  2866  000F42  0E06               	movlw	high STR_11
  2867  000F44  6E34               	movwf	(lcdString@msg+1)^0,c
  2868  000F46  ECA3  F00C         	call	_lcdString	;wreg free
  2869  000F4A                     
  2870                           ;main.c: 139:                 lcdCommand(0xC0);
  2871  000F4A  0EC0               	movlw	192
  2872  000F4C  ECD9  F00D         	call	_lcdCommand
  2873                           
  2874                           ;main.c: 140:                 lcdString("8-Nao    6-Sim");
  2875  000F50  0E4E               	movlw	low STR_8
  2876  000F52  6E33               	movwf	lcdString@msg^0,c
  2877  000F54  0E06               	movlw	high STR_8
  2878  000F56  6E34               	movwf	(lcdString@msg+1)^0,c
  2879  000F58  ECA3  F00C         	call	_lcdString	;wreg free
  2880                           
  2881                           ;main.c: 141:                 break;
  2882  000F5C  EF11  F008         	goto	l86
  2883  000F60                     l2083:
  2884                           
  2885                           ;main.c: 143:                 lcdCommand(0x80);
  2886  000F60  0E80               	movlw	128
  2887  000F62  ECD9  F00D         	call	_lcdCommand
  2888  000F66                     
  2889                           ;main.c: 144:                 lcdString("Fazendo:");
  2890  000F66  0EA7               	movlw	low STR_13
  2891  000F68  6E33               	movwf	lcdString@msg^0,c
  2892  000F6A  0E06               	movlw	high STR_13
  2893  000F6C  6E34               	movwf	(lcdString@msg+1)^0,c
  2894  000F6E  ECA3  F00C         	call	_lcdString	;wreg free
  2895  000F72                     
  2896                           ;main.c: 145:                 if(escolhido.queima==1){
  2897  000F72  0403               	decf	(_escolhido+2)^0,w,c
  2898  000F74  A4D8               	btfss	status,2,c
  2899  000F76  EFBF  F007         	goto	u2081
  2900  000F7A  EFC1  F007         	goto	u2080
  2901  000F7E                     u2081:
  2902  000F7E  EFC9  F007         	goto	l2091
  2903  000F82                     u2080:
  2904  000F82                     
  2905                           ;main.c: 146:                     lcdString("Normal");
  2906  000F82  0EB9               	movlw	low STR_14
  2907  000F84  6E33               	movwf	lcdString@msg^0,c
  2908  000F86  0E06               	movlw	high STR_14
  2909  000F88  6E34               	movwf	(lcdString@msg+1)^0,c
  2910  000F8A  ECA3  F00C         	call	_lcdString	;wreg free
  2911                           
  2912                           ;main.c: 147:                 }
  2913  000F8E  EFE9  F007         	goto	l2099
  2914  000F92                     l2091:
  2915  000F92  0E02               	movlw	2
  2916  000F94  1803               	xorwf	(_escolhido+2)^0,w,c
  2917  000F96  A4D8               	btfss	status,2,c
  2918  000F98  EFD0  F007         	goto	u2091
  2919  000F9C  EFD2  F007         	goto	u2090
  2920  000FA0                     u2091:
  2921  000FA0  EFDA  F007         	goto	l2095
  2922  000FA4                     u2090:
  2923  000FA4                     
  2924                           ;main.c: 149:                     lcdString("Forte");
  2925  000FA4  0EB3               	movlw	low (STR_16+3)
  2926  000FA6  6E33               	movwf	lcdString@msg^0,c
  2927  000FA8  0E06               	movlw	high (STR_16+3)
  2928  000FAA  6E34               	movwf	(lcdString@msg+1)^0,c
  2929  000FAC  ECA3  F00C         	call	_lcdString	;wreg free
  2930                           
  2931                           ;main.c: 150:                 }
  2932  000FB0  EFE9  F007         	goto	l2099
  2933  000FB4                     l2095:
  2934  000FB4  0E03               	movlw	3
  2935  000FB6  1803               	xorwf	(_escolhido+2)^0,w,c
  2936  000FB8  A4D8               	btfss	status,2,c
  2937  000FBA  EFE1  F007         	goto	u2101
  2938  000FBE  EFE3  F007         	goto	u2100
  2939  000FC2                     u2101:
  2940  000FC2  EFE9  F007         	goto	l2099
  2941  000FC6                     u2100:
  2942  000FC6                     
  2943                           ;main.c: 152:                     lcdString("Ex.Forte");
  2944  000FC6  0EB0               	movlw	low STR_16
  2945  000FC8  6E33               	movwf	lcdString@msg^0,c
  2946  000FCA  0E06               	movlw	high STR_16
  2947  000FCC  6E34               	movwf	(lcdString@msg+1)^0,c
  2948  000FCE  ECA3  F00C         	call	_lcdString	;wreg free
  2949  000FD2                     l2099:
  2950                           
  2951                           ;main.c: 154:                 lcdCommand(0xC0);
  2952  000FD2  0EC0               	movlw	192
  2953  000FD4  ECD9  F00D         	call	_lcdCommand
  2954  000FD8                     
  2955                           ;main.c: 155:                 ImprimeCafe();
  2956  000FD8  EC1A  F00A         	call	_ImprimeCafe	;wreg free
  2957                           
  2958                           ;main.c: 156:                 break;
  2959  000FDC  EF11  F008         	goto	l86
  2960  000FE0                     l2105:
  2961  000FE0  5023               	movf	_escolha^0,w,c
  2962  000FE2  6E39               	movwf	??_lcd^0,c
  2963  000FE4  6A3A               	clrf	(??_lcd+1)^0,c
  2964                           
  2965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2966                           ; Switch size 1, requested type "simple"
  2967                           ; Number of cases is 1, Range of values is 0 to 0
  2968                           ; switch strategies available:
  2969                           ; Name         Instructions Cycles
  2970                           ; simple_byte            4     3 (average)
  2971                           ;	Chosen strategy is simple_byte
  2972  000FE6  503A               	movf	(??_lcd+1)^0,w,c
  2973  000FE8  0A00               	xorlw	0	; case 0
  2974  000FEA  B4D8               	btfsc	status,2,c
  2975  000FEC  EFFA  F007         	goto	l2387
  2976  000FF0  EF11  F008         	goto	l86
  2977  000FF4                     l2387:
  2978                           
  2979                           ; Switch size 1, requested type "simple"
  2980                           ; Number of cases is 5, Range of values is 0 to 4
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte           16     9 (average)
  2984                           ;	Chosen strategy is simple_byte
  2985  000FF4  5039               	movf	??_lcd^0,w,c
  2986  000FF6  0A00               	xorlw	0	; case 0
  2987  000FF8  B4D8               	btfsc	status,2,c
  2988  000FFA  EF6A  F007         	goto	l2059
  2989  000FFE  0A01               	xorlw	1	; case 1
  2990  001000  B4D8               	btfsc	status,2,c
  2991  001002  EF78  F007         	goto	l2065
  2992  001006  0A03               	xorlw	3	; case 2
  2993  001008  B4D8               	btfsc	status,2,c
  2994  00100A  EF88  F007         	goto	l2071
  2995  00100E  0A01               	xorlw	1	; case 3
  2996  001010  B4D8               	btfsc	status,2,c
  2997  001012  EF9C  F007         	goto	l2077
  2998  001016  0A07               	xorlw	7	; case 4
  2999  001018  B4D8               	btfsc	status,2,c
  3000  00101A  EFB0  F007         	goto	l2083
  3001  00101E  EF11  F008         	goto	l86
  3002  001022                     l86:
  3003                           
  3004                           ;main.c: 161:     antes=escolha;
  3005  001022  C023  F03F         	movff	_escolha,_antes
  3006  001026  0012               	return		;funcret
  3007  001028                     __end_of_lcd:
  3008                           	callstack 0
  3009                           
  3010 ;; *************** function _lcdCommand *****************
  3011 ;; Defined at:
  3012 ;;		line 40 in file "lcd.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  value           1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  value           1   13[COMRAM] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3026 ;;      Params:         0       0       0       0       0       0       0
  3027 ;;      Locals:         1       0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0
  3029 ;;      Totals:         1       0       0       0       0       0       0
  3030 ;;Total ram usage:        1 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 4
  3033 ;; This function calls:
  3034 ;;		_delayMili
  3035 ;;		_pushByte
  3036 ;; This function is called by:
  3037 ;;		_lcd
  3038 ;;		_termina
  3039 ;;		_lcdInit
  3040 ;;		_lcdPosition
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text16
  3045  001BB2                     __ptext16:
  3046                           	callstack 0
  3047  001BB2                     _lcdCommand:
  3048                           	callstack 25
  3049                           
  3050                           ;incstack = 0
  3051                           ;lcdCommand@value stored from wreg
  3052  001BB2  6E32               	movwf	lcdCommand@value^0,c
  3053  001BB4                     
  3054                           ;lcd.c: 41:  pushByte(value, 0);
  3055  001BB4  0E00               	movlw	0
  3056  001BB6  6E2F               	movwf	(pushByte@rs+1)^0,c
  3057  001BB8  0E00               	movlw	0
  3058  001BBA  6E2E               	movwf	pushByte@rs^0,c
  3059  001BBC  5032               	movf	lcdCommand@value^0,w,c
  3060  001BBE  EC1F  F00C         	call	_pushByte
  3061                           
  3062                           ;lcd.c: 42:  delayMili(2);
  3063  001BC2  0E00               	movlw	0
  3064  001BC4  6E26               	movwf	(delayMili@a+1)^0,c
  3065  001BC6  0E02               	movlw	2
  3066  001BC8  6E25               	movwf	delayMili@a^0,c
  3067  001BCA  EC4E  F00D         	call	_delayMili	;wreg free
  3068  001BCE  0012               	return		;funcret
  3069  001BD0                     __end_of_lcdCommand:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _delayMili *****************
  3073 ;; Defined at:
  3074 ;;		line 10 in file "lcd.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  a               2    0[COMRAM] int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  i               2    3[COMRAM] volatile int 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3088 ;;      Params:         2       0       0       0       0       0       0
  3089 ;;      Locals:         2       0       0       0       0       0       0
  3090 ;;      Temps:          1       0       0       0       0       0       0
  3091 ;;      Totals:         5       0       0       0       0       0       0
  3092 ;;Total ram usage:        5 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_lcdCommand
  3098 ;;		_lcdInit
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text17
  3103  001A9C                     __ptext17:
  3104                           	callstack 0
  3105  001A9C                     _delayMili:
  3106                           	callstack 28
  3107  001A9C                     
  3108                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3109  001A9C  0E00               	movlw	0
  3110  001A9E  6E29               	movwf	(delayMili@i+1)^0,c	;volatile
  3111  001AA0  0E00               	movlw	0
  3112  001AA2  6E28               	movwf	delayMili@i^0,c	;volatile
  3113  001AA4  EF56  F00D         	goto	l1919
  3114  001AA8                     l1917:
  3115                           
  3116                           ;lcd.c: 15:  }
  3117  001AA8  4A28               	infsnz	delayMili@i^0,f,c	;volatile
  3118  001AAA  2A29               	incf	(delayMili@i+1)^0,f,c	;volatile
  3119  001AAC                     l1919:
  3120  001AAC  5025               	movf	delayMili@a^0,w,c
  3121  001AAE  5C28               	subwf	delayMili@i^0,w,c	;volatile
  3122  001AB0  5029               	movf	(delayMili@i+1)^0,w,c	;volatile
  3123  001AB2  0A80               	xorlw	128
  3124  001AB4  6E27               	movwf	??_delayMili^0,c
  3125  001AB6  5026               	movf	(delayMili@a+1)^0,w,c
  3126  001AB8  0A80               	xorlw	128
  3127  001ABA  5827               	subwfb	??_delayMili^0,w,c
  3128  001ABC  A0D8               	btfss	status,0,c
  3129  001ABE  EF63  F00D         	goto	u1751
  3130  001AC2  EF65  F00D         	goto	u1750
  3131  001AC6                     u1751:
  3132  001AC6  EF54  F00D         	goto	l1917
  3133  001ACA                     u1750:
  3134  001ACA  0012               	return		;funcret
  3135  001ACC                     __end_of_delayMili:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _ImprimeCafe *****************
  3139 ;; Defined at:
  3140 ;;		line 90 in file "main.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 6
  3161 ;; This function calls:
  3162 ;;		_lcdString
  3163 ;; This function is called by:
  3164 ;;		_lcd
  3165 ;;		_termina
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text18
  3170  001434                     __ptext18:
  3171                           	callstack 0
  3172  001434                     _ImprimeCafe:
  3173                           	callstack 23
  3174  001434                     
  3175                           ;main.c: 91:     if(escolhido.nome==1){
  3176  001434  0401               	decf	_escolhido^0,w,c
  3177  001436  A4D8               	btfss	status,2,c
  3178  001438  EF20  F00A         	goto	u1841
  3179  00143C  EF22  F00A         	goto	u1840
  3180  001440                     u1841:
  3181  001440  EF2A  F00A         	goto	l1955
  3182  001444                     u1840:
  3183  001444                     
  3184                           ;main.c: 92:         lcdString("Cafe caseiro");
  3185  001444  0E86               	movlw	low STR_1
  3186  001446  6E33               	movwf	lcdString@msg^0,c
  3187  001448  0E06               	movlw	high STR_1
  3188  00144A  6E34               	movwf	(lcdString@msg+1)^0,c
  3189  00144C  ECA3  F00C         	call	_lcdString	;wreg free
  3190                           
  3191                           ;main.c: 93:     }
  3192  001450  EF5D  F00A         	goto	l1967
  3193  001454                     l1955:
  3194  001454  0E02               	movlw	2
  3195  001456  1801               	xorwf	_escolhido^0,w,c
  3196  001458  A4D8               	btfss	status,2,c
  3197  00145A  EF31  F00A         	goto	u1851
  3198  00145E  EF33  F00A         	goto	u1850
  3199  001462                     u1851:
  3200  001462  EF3B  F00A         	goto	l1959
  3201  001466                     u1850:
  3202  001466                     
  3203                           ;main.c: 95:         lcdString("Cafe Expresso");
  3204  001466  0E6B               	movlw	low STR_2
  3205  001468  6E33               	movwf	lcdString@msg^0,c
  3206  00146A  0E06               	movlw	high STR_2
  3207  00146C  6E34               	movwf	(lcdString@msg+1)^0,c
  3208  00146E  ECA3  F00C         	call	_lcdString	;wreg free
  3209                           
  3210                           ;main.c: 96:     }
  3211  001472  EF5D  F00A         	goto	l1967
  3212  001476                     l1959:
  3213  001476  0E03               	movlw	3
  3214  001478  1801               	xorwf	_escolhido^0,w,c
  3215  00147A  A4D8               	btfss	status,2,c
  3216  00147C  EF42  F00A         	goto	u1861
  3217  001480  EF44  F00A         	goto	u1860
  3218  001484                     u1861:
  3219  001484  EF4C  F00A         	goto	l1963
  3220  001488                     u1860:
  3221  001488                     
  3222                           ;main.c: 98:         lcdString("Cappuccino");
  3223  001488  0E93               	movlw	low STR_3
  3224  00148A  6E33               	movwf	lcdString@msg^0,c
  3225  00148C  0E06               	movlw	high STR_3
  3226  00148E  6E34               	movwf	(lcdString@msg+1)^0,c
  3227  001490  ECA3  F00C         	call	_lcdString	;wreg free
  3228                           
  3229                           ;main.c: 99:     }
  3230  001494  EF5D  F00A         	goto	l1967
  3231  001498                     l1963:
  3232  001498  0E04               	movlw	4
  3233  00149A  1801               	xorwf	_escolhido^0,w,c
  3234  00149C  A4D8               	btfss	status,2,c
  3235  00149E  EF53  F00A         	goto	u1871
  3236  0014A2  EF55  F00A         	goto	u1870
  3237  0014A6                     u1871:
  3238  0014A6  EF5D  F00A         	goto	l75
  3239  0014AA                     u1870:
  3240  0014AA                     
  3241                           ;main.c: 101:         lcdString("Latte Macchiato");
  3242  0014AA  0E3E               	movlw	low STR_4
  3243  0014AC  6E33               	movwf	lcdString@msg^0,c
  3244  0014AE  0E06               	movlw	high STR_4
  3245  0014B0  6E34               	movwf	(lcdString@msg+1)^0,c
  3246  0014B2  ECA3  F00C         	call	_lcdString	;wreg free
  3247  0014B6  EF5D  F00A         	goto	l1967
  3248  0014BA                     l75:
  3249  0014BA                     l1967:
  3250                           
  3251                           ;main.c: 103:     if(escolha!=1)
  3252  0014BA  0423               	decf	_escolha^0,w,c
  3253  0014BC  B4D8               	btfsc	status,2,c
  3254  0014BE  EF63  F00A         	goto	u1881
  3255  0014C2  EF65  F00A         	goto	u1880
  3256  0014C6                     u1881:
  3257  0014C6  EF83  F00A         	goto	l83
  3258  0014CA                     u1880:
  3259  0014CA                     
  3260                           ;main.c: 104:         if(escolhido.acucar==0){
  3261  0014CA  5004               	movf	(_escolhido+3)^0,w,c
  3262  0014CC  A4D8               	btfss	status,2,c
  3263  0014CE  EF6B  F00A         	goto	u1891
  3264  0014D2  EF6D  F00A         	goto	u1890
  3265  0014D6                     u1891:
  3266  0014D6  EF75  F00A         	goto	l1973
  3267  0014DA                     u1890:
  3268  0014DA                     
  3269                           ;main.c: 105:             lcdString("S/A");
  3270  0014DA  0EC4               	movlw	low STR_5
  3271  0014DC  6E33               	movwf	lcdString@msg^0,c
  3272  0014DE  0E06               	movlw	high STR_5
  3273  0014E0  6E34               	movwf	(lcdString@msg+1)^0,c
  3274  0014E2  ECA3  F00C         	call	_lcdString	;wreg free
  3275                           
  3276                           ;main.c: 106:         }
  3277  0014E6  EF83  F00A         	goto	l83
  3278  0014EA                     l1973:
  3279  0014EA  0404               	decf	(_escolhido+3)^0,w,c
  3280  0014EC  A4D8               	btfss	status,2,c
  3281  0014EE  EF7B  F00A         	goto	u1901
  3282  0014F2  EF7D  F00A         	goto	u1900
  3283  0014F6                     u1901:
  3284  0014F6  EF83  F00A         	goto	l83
  3285  0014FA                     u1900:
  3286  0014FA                     
  3287                           ;main.c: 108:             lcdString("C/A");
  3288  0014FA  0EC0               	movlw	low STR_6
  3289  0014FC  6E33               	movwf	lcdString@msg^0,c
  3290  0014FE  0E06               	movlw	high STR_6
  3291  001500  6E34               	movwf	(lcdString@msg+1)^0,c
  3292  001502  ECA3  F00C         	call	_lcdString	;wreg free
  3293  001506                     l83:
  3294  001506  0012               	return		;funcret
  3295  001508                     __end_of_ImprimeCafe:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _lcdString *****************
  3299 ;; Defined at:
  3300 ;;		line 57 in file "lcd.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3303 ;;		 -> STR_20(9), STR_19(6), STR_18(7), STR_17(9), 
  3304 ;;		 -> STR_16(9), STR_15(6), STR_14(7), STR_13(9), 
  3305 ;;		 -> STR_12(15), STR_11(14), STR_10(13), STR_9(19), 
  3306 ;;		 -> STR_8(15), STR_7(16), STR_6(4), STR_5(4), 
  3307 ;;		 -> STR_4(16), STR_3(11), STR_2(14), STR_1(13), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  i               2   18[COMRAM] int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3319 ;;      Params:         2       0       0       0       0       0       0
  3320 ;;      Locals:         2       0       0       0       0       0       0
  3321 ;;      Temps:          2       0       0       0       0       0       0
  3322 ;;      Totals:         6       0       0       0       0       0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 5
  3326 ;; This function calls:
  3327 ;;		_lcdChar
  3328 ;; This function is called by:
  3329 ;;		_ImprimeCafe
  3330 ;;		_lcd
  3331 ;;		_termina
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text19
  3336  001946                     __ptext19:
  3337                           	callstack 0
  3338  001946                     _lcdString:
  3339                           	callstack 24
  3340  001946                     
  3341                           ;lcd.c: 58:  int i = 0;
  3342  001946  0E00               	movlw	0
  3343  001948  6E38               	movwf	(lcdString@i+1)^0,c
  3344  00194A  0E00               	movlw	0
  3345  00194C  6E37               	movwf	lcdString@i^0,c
  3346                           
  3347                           ;lcd.c: 59:  while (msg[i] != 0) {
  3348  00194E  EFB9  F00C         	goto	l1835
  3349  001952                     l1831:
  3350                           
  3351                           ;lcd.c: 60:   lcdChar(msg[i]);
  3352  001952  5037               	movf	lcdString@i^0,w,c
  3353  001954  2433               	addwf	lcdString@msg^0,w,c
  3354  001956  6E35               	movwf	??_lcdString^0,c
  3355  001958  5038               	movf	(lcdString@i+1)^0,w,c
  3356  00195A  2034               	addwfc	(lcdString@msg+1)^0,w,c
  3357  00195C  6E36               	movwf	(??_lcdString+1)^0,c
  3358  00195E  C035  FFF6         	movff	??_lcdString,tblptrl
  3359  001962  C036  FFF7         	movff	??_lcdString+1,tblptrh
  3360  001966                     	if	0	;tblptru may be non-zero
  3361  001966                     	endif
  3362  001966                     	if	0	;tblptru may be non-zero
  3363  001966                     	endif
  3364  001966  0008               	tblrd		*
  3365  001968  50F5               	movf	tablat,w,c
  3366  00196A  ECE8  F00D         	call	_lcdChar
  3367  00196E                     
  3368                           ;lcd.c: 61:   i++;
  3369  00196E  4A37               	infsnz	lcdString@i^0,f,c
  3370  001970  2A38               	incf	(lcdString@i+1)^0,f,c
  3371  001972                     l1835:
  3372                           
  3373                           ;lcd.c: 59:  while (msg[i] != 0) {
  3374  001972  5037               	movf	lcdString@i^0,w,c
  3375  001974  2433               	addwf	lcdString@msg^0,w,c
  3376  001976  6E35               	movwf	??_lcdString^0,c
  3377  001978  5038               	movf	(lcdString@i+1)^0,w,c
  3378  00197A  2034               	addwfc	(lcdString@msg+1)^0,w,c
  3379  00197C  6E36               	movwf	(??_lcdString+1)^0,c
  3380  00197E  C035  FFF6         	movff	??_lcdString,tblptrl
  3381  001982  C036  FFF7         	movff	??_lcdString+1,tblptrh
  3382  001986                     	if	0	;tblptru may be non-zero
  3383  001986                     	endif
  3384  001986                     	if	0	;tblptru may be non-zero
  3385  001986                     	endif
  3386  001986  0008               	tblrd		*
  3387  001988  50F5               	movf	tablat,w,c
  3388  00198A  0900               	iorlw	0
  3389  00198C  A4D8               	btfss	status,2,c
  3390  00198E  EFCB  F00C         	goto	u1441
  3391  001992  EFCD  F00C         	goto	u1440
  3392  001996                     u1441:
  3393  001996  EFA9  F00C         	goto	l1831
  3394  00199A                     u1440:
  3395  00199A  0012               	return		;funcret
  3396  00199C                     __end_of_lcdString:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _lcdChar *****************
  3400 ;; Defined at:
  3401 ;;		line 52 in file "lcd.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  value           1    wreg     unsigned char 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  value           1   13[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3415 ;;      Params:         0       0       0       0       0       0       0
  3416 ;;      Locals:         1       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0
  3418 ;;      Totals:         1       0       0       0       0       0       0
  3419 ;;Total ram usage:        1 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 4
  3422 ;; This function calls:
  3423 ;;		_delayMicro
  3424 ;;		_pushByte
  3425 ;; This function is called by:
  3426 ;;		_lcdString
  3427 ;;		_lcdNumber
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text20
  3432  001BD0                     __ptext20:
  3433                           	callstack 0
  3434  001BD0                     _lcdChar:
  3435                           	callstack 24
  3436                           
  3437                           ;incstack = 0
  3438                           ;lcdChar@value stored from wreg
  3439  001BD0  6E32               	movwf	lcdChar@value^0,c
  3440  001BD2                     
  3441                           ;lcd.c: 53:  pushByte(value, 1);
  3442  001BD2  0E00               	movlw	0
  3443  001BD4  6E2F               	movwf	(pushByte@rs+1)^0,c
  3444  001BD6  0E01               	movlw	1
  3445  001BD8  6E2E               	movwf	pushByte@rs^0,c
  3446  001BDA  5032               	movf	lcdChar@value^0,w,c
  3447  001BDC  EC1F  F00C         	call	_pushByte
  3448  001BE0                     
  3449                           ;lcd.c: 54:  delayMicro(80);
  3450  001BE0  0E00               	movlw	0
  3451  001BE2  6E26               	movwf	(delayMicro@a+1)^0,c
  3452  001BE4  0E50               	movlw	80
  3453  001BE6  6E25               	movwf	delayMicro@a^0,c
  3454  001BE8  EC08  F00E         	call	_delayMicro	;wreg free
  3455  001BEC  0012               	return		;funcret
  3456  001BEE                     __end_of_lcdChar:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _pushByte *****************
  3460 ;; Defined at:
  3461 ;;		line 31 in file "lcd.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  value           1    wreg     unsigned char 
  3464 ;;  rs              2    9[COMRAM] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  value           1   12[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3476 ;;      Params:         2       0       0       0       0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0
  3478 ;;      Temps:          1       0       0       0       0       0       0
  3479 ;;      Totals:         4       0       0       0       0       0       0
  3480 ;;Total ram usage:        4 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 3
  3483 ;; This function calls:
  3484 ;;		_digitalWrite
  3485 ;;		_pulseEnablePin
  3486 ;;		_soWrite
  3487 ;; This function is called by:
  3488 ;;		_lcdCommand
  3489 ;;		_lcdChar
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text21
  3494  00183E                     __ptext21:
  3495                           	callstack 0
  3496  00183E                     _pushByte:
  3497                           	callstack 24
  3498                           
  3499                           ;incstack = 0
  3500                           ;pushByte@value stored from wreg
  3501  00183E  6E31               	movwf	pushByte@value^0,c
  3502  001840                     
  3503                           ;lcd.c: 32:  soWrite(value >> 4);
  3504  001840  C031  F030         	movff	pushByte@value,??_pushByte
  3505  001844  3A30               	swapf	??_pushByte^0,f,c
  3506  001846  0E0F               	movlw	15
  3507  001848  1630               	andwf	??_pushByte^0,f,c
  3508  00184A  5030               	movf	??_pushByte^0,w,c
  3509  00184C  6E2B               	movwf	soWrite@value^0,c
  3510  00184E  6A2C               	clrf	(soWrite@value+1)^0,c
  3511  001850  ECCE  F00C         	call	_soWrite	;wreg free
  3512                           
  3513                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3514  001854  0E00               	movlw	0
  3515  001856  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3516  001858  0E1D               	movlw	29
  3517  00185A  6E25               	movwf	digitalWrite@pin^0,c
  3518  00185C  C02E  F027         	movff	pushByte@rs,digitalWrite@value
  3519  001860  C02F  F028         	movff	pushByte@rs+1,digitalWrite@value+1
  3520  001864  EC65  F003         	call	_digitalWrite	;wreg free
  3521                           
  3522                           ;lcd.c: 34:  pulseEnablePin();
  3523  001868  ECF5  F00C         	call	_pulseEnablePin	;wreg free
  3524                           
  3525                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3526  00186C  C031  F030         	movff	pushByte@value,??_pushByte
  3527  001870  0E0F               	movlw	15
  3528  001872  1630               	andwf	??_pushByte^0,f,c
  3529  001874  5030               	movf	??_pushByte^0,w,c
  3530  001876  6E2B               	movwf	soWrite@value^0,c
  3531  001878  6A2C               	clrf	(soWrite@value+1)^0,c
  3532  00187A  ECCE  F00C         	call	_soWrite	;wreg free
  3533                           
  3534                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3535  00187E  0E00               	movlw	0
  3536  001880  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3537  001882  0E1D               	movlw	29
  3538  001884  6E25               	movwf	digitalWrite@pin^0,c
  3539  001886  C02E  F027         	movff	pushByte@rs,digitalWrite@value
  3540  00188A  C02F  F028         	movff	pushByte@rs+1,digitalWrite@value+1
  3541  00188E  EC65  F003         	call	_digitalWrite	;wreg free
  3542                           
  3543                           ;lcd.c: 38:  pulseEnablePin();
  3544  001892  ECF5  F00C         	call	_pulseEnablePin	;wreg free
  3545  001896  0012               	return		;funcret
  3546  001898                     __end_of_pushByte:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _soWrite *****************
  3550 ;; Defined at:
  3551 ;;		line 18 in file "so.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  value           2    6[COMRAM] int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  i               1    8[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3565 ;;      Params:         2       0       0       0       0       0       0
  3566 ;;      Locals:         1       0       0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0
  3568 ;;      Totals:         3       0       0       0       0       0       0
  3569 ;;Total ram usage:        3 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		_PulseClockData
  3574 ;;		_PulseEnClock
  3575 ;;		_digitalWrite
  3576 ;; This function is called by:
  3577 ;;		_kpDebounce
  3578 ;;		_pushNibble
  3579 ;;		_pushByte
  3580 ;;		_ssdUpdate
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text22
  3585  00199C                     __ptext22:
  3586                           	callstack 0
  3587  00199C                     _soWrite:
  3588                           	callstack 24
  3589  00199C                     
  3590                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3591  00199C  0E00               	movlw	0
  3592  00199E  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3593  0019A0  0E08               	movlw	8
  3594  0019A2  6E25               	movwf	digitalWrite@pin^0,c
  3595  0019A4  0E00               	movlw	0
  3596  0019A6  6E28               	movwf	(digitalWrite@value+1)^0,c
  3597  0019A8  0E00               	movlw	0
  3598  0019AA  6E27               	movwf	digitalWrite@value^0,c
  3599  0019AC  EC65  F003         	call	_digitalWrite	;wreg free
  3600  0019B0                     
  3601                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3602  0019B0  0E00               	movlw	0
  3603  0019B2  6E2D               	movwf	soWrite@i^0,c
  3604  0019B4                     l1807:
  3605                           
  3606                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3607  0019B4  0E00               	movlw	0
  3608  0019B6  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3609  0019B8  0E1E               	movlw	30
  3610  0019BA  6E25               	movwf	digitalWrite@pin^0,c
  3611  0019BC  0E80               	movlw	128
  3612  0019BE  142B               	andwf	soWrite@value^0,w,c
  3613  0019C0  6E27               	movwf	digitalWrite@value^0,c
  3614  0019C2  6A28               	clrf	(digitalWrite@value+1)^0,c
  3615  0019C4  EC65  F003         	call	_digitalWrite	;wreg free
  3616                           
  3617                           ;so.c: 23:   PulseClockData();
  3618  0019C8  EC7B  F00D         	call	_PulseClockData	;wreg free
  3619  0019CC                     
  3620                           ;so.c: 24:   value <<= 1;
  3621  0019CC  90D8               	bcf	status,0,c
  3622  0019CE  362B               	rlcf	soWrite@value^0,f,c
  3623  0019D0  362C               	rlcf	(soWrite@value+1)^0,f,c
  3624  0019D2                     
  3625                           ;so.c: 25:  }
  3626  0019D2  2A2D               	incf	soWrite@i^0,f,c
  3627  0019D4  0E07               	movlw	7
  3628  0019D6  642D               	cpfsgt	soWrite@i^0,c
  3629  0019D8  EFF0  F00C         	goto	u1431
  3630  0019DC  EFF2  F00C         	goto	u1430
  3631  0019E0                     u1431:
  3632  0019E0  EFDA  F00C         	goto	l1807
  3633  0019E4                     u1430:
  3634  0019E4                     
  3635                           ;so.c: 26:  PulseEnClock();
  3636  0019E4  EC66  F00D         	call	_PulseEnClock	;wreg free
  3637  0019E8  0012               	return		;funcret
  3638  0019EA                     __end_of_soWrite:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _PulseEnClock *****************
  3642 ;; Defined at:
  3643 ;;		line 9 in file "so.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 1
  3664 ;; This function calls:
  3665 ;;		_digitalWrite
  3666 ;; This function is called by:
  3667 ;;		_soWrite
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text23
  3672  001ACC                     __ptext23:
  3673                           	callstack 0
  3674  001ACC                     _PulseEnClock:
  3675                           	callstack 24
  3676  001ACC                     
  3677                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3678  001ACC  0E00               	movlw	0
  3679  001ACE  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3680  001AD0  0E1F               	movlw	31
  3681  001AD2  6E25               	movwf	digitalWrite@pin^0,c
  3682  001AD4  0E00               	movlw	0
  3683  001AD6  6E28               	movwf	(digitalWrite@value+1)^0,c
  3684  001AD8  0E01               	movlw	1
  3685  001ADA  6E27               	movwf	digitalWrite@value^0,c
  3686  001ADC  EC65  F003         	call	_digitalWrite	;wreg free
  3687                           
  3688                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3689  001AE0  0E00               	movlw	0
  3690  001AE2  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3691  001AE4  0E1F               	movlw	31
  3692  001AE6  6E25               	movwf	digitalWrite@pin^0,c
  3693  001AE8  0E00               	movlw	0
  3694  001AEA  6E28               	movwf	(digitalWrite@value+1)^0,c
  3695  001AEC  0E00               	movlw	0
  3696  001AEE  6E27               	movwf	digitalWrite@value^0,c
  3697  001AF0  EC65  F003         	call	_digitalWrite	;wreg free
  3698  001AF4  0012               	return		;funcret
  3699  001AF6                     __end_of_PulseEnClock:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _PulseClockData *****************
  3703 ;; Defined at:
  3704 ;;		line 14 in file "so.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3718 ;;      Params:         0       0       0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0
  3721 ;;      Totals:         0       0       0       0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 1
  3725 ;; This function calls:
  3726 ;;		_digitalWrite
  3727 ;; This function is called by:
  3728 ;;		_soWrite
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text24
  3733  001AF6                     __ptext24:
  3734                           	callstack 0
  3735  001AF6                     _PulseClockData:
  3736                           	callstack 24
  3737  001AF6                     
  3738                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3739  001AF6  0E00               	movlw	0
  3740  001AF8  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3741  001AFA  0E08               	movlw	8
  3742  001AFC  6E25               	movwf	digitalWrite@pin^0,c
  3743  001AFE  0E00               	movlw	0
  3744  001B00  6E28               	movwf	(digitalWrite@value+1)^0,c
  3745  001B02  0E01               	movlw	1
  3746  001B04  6E27               	movwf	digitalWrite@value^0,c
  3747  001B06  EC65  F003         	call	_digitalWrite	;wreg free
  3748                           
  3749                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3750  001B0A  0E00               	movlw	0
  3751  001B0C  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3752  001B0E  0E08               	movlw	8
  3753  001B10  6E25               	movwf	digitalWrite@pin^0,c
  3754  001B12  0E00               	movlw	0
  3755  001B14  6E28               	movwf	(digitalWrite@value+1)^0,c
  3756  001B16  0E00               	movlw	0
  3757  001B18  6E27               	movwf	digitalWrite@value^0,c
  3758  001B1A  EC65  F003         	call	_digitalWrite	;wreg free
  3759  001B1E  0012               	return		;funcret
  3760  001B20                     __end_of_PulseClockData:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _pulseEnablePin *****************
  3764 ;; Defined at:
  3765 ;;		line 18 in file "lcd.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3779 ;;      Params:         0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 1
  3786 ;; This function calls:
  3787 ;;		_delayMicro
  3788 ;;		_digitalWrite
  3789 ;; This function is called by:
  3790 ;;		_pushNibble
  3791 ;;		_pushByte
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text25
  3796  0019EA                     __ptext25:
  3797                           	callstack 0
  3798  0019EA                     _pulseEnablePin:
  3799                           	callstack 25
  3800  0019EA                     
  3801                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3802  0019EA  0E00               	movlw	0
  3803  0019EC  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3804  0019EE  0E1C               	movlw	28
  3805  0019F0  6E25               	movwf	digitalWrite@pin^0,c
  3806  0019F2  0E00               	movlw	0
  3807  0019F4  6E28               	movwf	(digitalWrite@value+1)^0,c
  3808  0019F6  0E01               	movlw	1
  3809  0019F8  6E27               	movwf	digitalWrite@value^0,c
  3810  0019FA  EC65  F003         	call	_digitalWrite	;wreg free
  3811  0019FE                     
  3812                           ;lcd.c: 20:  delayMicro(5);
  3813  0019FE  0E00               	movlw	0
  3814  001A00  6E26               	movwf	(delayMicro@a+1)^0,c
  3815  001A02  0E05               	movlw	5
  3816  001A04  6E25               	movwf	delayMicro@a^0,c
  3817  001A06  EC08  F00E         	call	_delayMicro	;wreg free
  3818  001A0A                     
  3819                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3820  001A0A  0E00               	movlw	0
  3821  001A0C  6E26               	movwf	(digitalWrite@pin+1)^0,c
  3822  001A0E  0E1C               	movlw	28
  3823  001A10  6E25               	movwf	digitalWrite@pin^0,c
  3824  001A12  0E00               	movlw	0
  3825  001A14  6E28               	movwf	(digitalWrite@value+1)^0,c
  3826  001A16  0E00               	movlw	0
  3827  001A18  6E27               	movwf	digitalWrite@value^0,c
  3828  001A1A  EC65  F003         	call	_digitalWrite	;wreg free
  3829                           
  3830                           ;lcd.c: 22:  delayMicro(5);
  3831  001A1E  0E00               	movlw	0
  3832  001A20  6E26               	movwf	(delayMicro@a+1)^0,c
  3833  001A22  0E05               	movlw	5
  3834  001A24  6E25               	movwf	delayMicro@a^0,c
  3835  001A26  EC08  F00E         	call	_delayMicro	;wreg free
  3836  001A2A  0012               	return		;funcret
  3837  001A2C                     __end_of_pulseEnablePin:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _digitalWrite *****************
  3841 ;; Defined at:
  3842 ;;		line 14 in file "io.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  pin             2    0[COMRAM] int 
  3845 ;;  value           2    2[COMRAM] int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3857 ;;      Params:         4       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0
  3859 ;;      Temps:          2       0       0       0       0       0       0
  3860 ;;      Totals:         6       0       0       0       0       0       0
  3861 ;;Total ram usage:        6 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_pulseEnablePin
  3867 ;;		_pushNibble
  3868 ;;		_pushByte
  3869 ;;		_ssdUpdate
  3870 ;;		_PulseEnClock
  3871 ;;		_PulseClockData
  3872 ;;		_soWrite
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text26
  3877  0006CA                     __ptext26:
  3878                           	callstack 0
  3879  0006CA                     _digitalWrite:
  3880                           	callstack 25
  3881  0006CA                     
  3882                           ;io.c: 16:     if(pin <8){
  3883  0006CA  BE26               	btfsc	(digitalWrite@pin+1)^0,7,c
  3884  0006CC  EF73  F003         	goto	u1230
  3885  0006D0  5026               	movf	(digitalWrite@pin+1)^0,w,c
  3886  0006D2  E107               	bnz	u1231
  3887  0006D4  0E08               	movlw	8
  3888  0006D6  5C25               	subwf	digitalWrite@pin^0,w,c
  3889  0006D8  B0D8               	btfsc	status,0,c
  3890  0006DA  EF71  F003         	goto	u1231
  3891  0006DE  EF73  F003         	goto	u1230
  3892  0006E2                     u1231:
  3893  0006E2  EF9D  F003         	goto	l1763
  3894  0006E6                     u1230:
  3895  0006E6                     
  3896                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3897  0006E6  5027               	movf	digitalWrite@value^0,w,c
  3898  0006E8  1028               	iorwf	(digitalWrite@value+1)^0,w,c
  3899  0006EA  B4D8               	btfsc	status,2,c
  3900  0006EC  EF7A  F003         	goto	u1241
  3901  0006F0  EF7C  F003         	goto	u1240
  3902  0006F4                     u1241:
  3903  0006F4  EF8C  F003         	goto	l1761
  3904  0006F8                     u1240:
  3905  0006F8  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  3906  0006FC  0E01               	movlw	1
  3907  0006FE  6E2A               	movwf	(??_digitalWrite+1)^0,c
  3908  000700  2A29               	incf	??_digitalWrite^0,f,c
  3909  000702  EF85  F003         	goto	u1254
  3910  000706                     u1255:
  3911  000706  90D8               	bcf	status,0,c
  3912  000708  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  3913  00070A                     u1254:
  3914  00070A  2E29               	decfsz	??_digitalWrite^0,f,c
  3915  00070C  EF83  F003         	goto	u1255
  3916  000710  502A               	movf	(??_digitalWrite+1)^0,w,c
  3917  000712  1280               	iorwf	128,f,c	;volatile
  3918  000714  EF8B  F004         	goto	l325
  3919  000718                     l1761:
  3920  000718  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  3921  00071C  0E01               	movlw	1
  3922  00071E  6E2A               	movwf	(??_digitalWrite+1)^0,c
  3923  000720  2A29               	incf	??_digitalWrite^0,f,c
  3924  000722  EF95  F003         	goto	u1264
  3925  000726                     u1265:
  3926  000726  90D8               	bcf	status,0,c
  3927  000728  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  3928  00072A                     u1264:
  3929  00072A  2E29               	decfsz	??_digitalWrite^0,f,c
  3930  00072C  EF93  F003         	goto	u1265
  3931  000730  502A               	movf	(??_digitalWrite+1)^0,w,c
  3932  000732  0AFF               	xorlw	255
  3933  000734  1680               	andwf	128,f,c	;volatile
  3934  000736  EF8B  F004         	goto	l325
  3935  00073A                     l1763:
  3936  00073A  BE26               	btfsc	(digitalWrite@pin+1)^0,7,c
  3937  00073C  EFAB  F003         	goto	u1270
  3938  000740  5026               	movf	(digitalWrite@pin+1)^0,w,c
  3939  000742  E107               	bnz	u1271
  3940  000744  0E10               	movlw	16
  3941  000746  5C25               	subwf	digitalWrite@pin^0,w,c
  3942  000748  B0D8               	btfsc	status,0,c
  3943  00074A  EFA9  F003         	goto	u1271
  3944  00074E  EFAB  F003         	goto	u1270
  3945  000752                     u1271:
  3946  000752  EFD9  F003         	goto	l1771
  3947  000756                     u1270:
  3948  000756                     
  3949                           ;io.c: 20:         pin -=8;
  3950  000756  0EF8               	movlw	248
  3951  000758  2625               	addwf	digitalWrite@pin^0,f,c
  3952  00075A  0EFF               	movlw	255
  3953  00075C  2226               	addwfc	(digitalWrite@pin+1)^0,f,c
  3954                           
  3955                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3956  00075E  5027               	movf	digitalWrite@value^0,w,c
  3957  000760  1028               	iorwf	(digitalWrite@value+1)^0,w,c
  3958  000762  B4D8               	btfsc	status,2,c
  3959  000764  EFB6  F003         	goto	u1281
  3960  000768  EFB8  F003         	goto	u1280
  3961  00076C                     u1281:
  3962  00076C  EFC8  F003         	goto	l1769
  3963  000770                     u1280:
  3964  000770  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  3965  000774  0E01               	movlw	1
  3966  000776  6E2A               	movwf	(??_digitalWrite+1)^0,c
  3967  000778  2A29               	incf	??_digitalWrite^0,f,c
  3968  00077A  EFC1  F003         	goto	u1294
  3969  00077E                     u1295:
  3970  00077E  90D8               	bcf	status,0,c
  3971  000780  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  3972  000782                     u1294:
  3973  000782  2E29               	decfsz	??_digitalWrite^0,f,c
  3974  000784  EFBF  F003         	goto	u1295
  3975  000788  502A               	movf	(??_digitalWrite+1)^0,w,c
  3976  00078A  1281               	iorwf	129,f,c	;volatile
  3977  00078C  EF8B  F004         	goto	l325
  3978  000790                     l1769:
  3979  000790  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  3980  000794  0E01               	movlw	1
  3981  000796  6E2A               	movwf	(??_digitalWrite+1)^0,c
  3982  000798  2A29               	incf	??_digitalWrite^0,f,c
  3983  00079A  EFD1  F003         	goto	u1304
  3984  00079E                     u1305:
  3985  00079E  90D8               	bcf	status,0,c
  3986  0007A0  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  3987  0007A2                     u1304:
  3988  0007A2  2E29               	decfsz	??_digitalWrite^0,f,c
  3989  0007A4  EFCF  F003         	goto	u1305
  3990  0007A8  502A               	movf	(??_digitalWrite+1)^0,w,c
  3991  0007AA  0AFF               	xorlw	255
  3992  0007AC  1681               	andwf	129,f,c	;volatile
  3993  0007AE  EF8B  F004         	goto	l325
  3994  0007B2                     l1771:
  3995  0007B2  BE26               	btfsc	(digitalWrite@pin+1)^0,7,c
  3996  0007B4  EFE7  F003         	goto	u1310
  3997  0007B8  5026               	movf	(digitalWrite@pin+1)^0,w,c
  3998  0007BA  E107               	bnz	u1311
  3999  0007BC  0E18               	movlw	24
  4000  0007BE  5C25               	subwf	digitalWrite@pin^0,w,c
  4001  0007C0  B0D8               	btfsc	status,0,c
  4002  0007C2  EFE5  F003         	goto	u1311
  4003  0007C6  EFE7  F003         	goto	u1310
  4004  0007CA                     u1311:
  4005  0007CA  EF15  F004         	goto	l1779
  4006  0007CE                     u1310:
  4007  0007CE                     
  4008                           ;io.c: 24:         pin -=16;
  4009  0007CE  0EF0               	movlw	240
  4010  0007D0  2625               	addwf	digitalWrite@pin^0,f,c
  4011  0007D2  0EFF               	movlw	255
  4012  0007D4  2226               	addwfc	(digitalWrite@pin+1)^0,f,c
  4013                           
  4014                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4015  0007D6  5027               	movf	digitalWrite@value^0,w,c
  4016  0007D8  1028               	iorwf	(digitalWrite@value+1)^0,w,c
  4017  0007DA  B4D8               	btfsc	status,2,c
  4018  0007DC  EFF2  F003         	goto	u1321
  4019  0007E0  EFF4  F003         	goto	u1320
  4020  0007E4                     u1321:
  4021  0007E4  EF04  F004         	goto	l1777
  4022  0007E8                     u1320:
  4023  0007E8  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4024  0007EC  0E01               	movlw	1
  4025  0007EE  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4026  0007F0  2A29               	incf	??_digitalWrite^0,f,c
  4027  0007F2  EFFD  F003         	goto	u1334
  4028  0007F6                     u1335:
  4029  0007F6  90D8               	bcf	status,0,c
  4030  0007F8  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4031  0007FA                     u1334:
  4032  0007FA  2E29               	decfsz	??_digitalWrite^0,f,c
  4033  0007FC  EFFB  F003         	goto	u1335
  4034  000800  502A               	movf	(??_digitalWrite+1)^0,w,c
  4035  000802  1282               	iorwf	130,f,c	;volatile
  4036  000804  EF8B  F004         	goto	l325
  4037  000808                     l1777:
  4038  000808  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4039  00080C  0E01               	movlw	1
  4040  00080E  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4041  000810  2A29               	incf	??_digitalWrite^0,f,c
  4042  000812  EF0D  F004         	goto	u1344
  4043  000816                     u1345:
  4044  000816  90D8               	bcf	status,0,c
  4045  000818  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4046  00081A                     u1344:
  4047  00081A  2E29               	decfsz	??_digitalWrite^0,f,c
  4048  00081C  EF0B  F004         	goto	u1345
  4049  000820  502A               	movf	(??_digitalWrite+1)^0,w,c
  4050  000822  0AFF               	xorlw	255
  4051  000824  1682               	andwf	130,f,c	;volatile
  4052  000826  EF8B  F004         	goto	l325
  4053  00082A                     l1779:
  4054  00082A  BE26               	btfsc	(digitalWrite@pin+1)^0,7,c
  4055  00082C  EF23  F004         	goto	u1350
  4056  000830  5026               	movf	(digitalWrite@pin+1)^0,w,c
  4057  000832  E107               	bnz	u1351
  4058  000834  0E20               	movlw	32
  4059  000836  5C25               	subwf	digitalWrite@pin^0,w,c
  4060  000838  B0D8               	btfsc	status,0,c
  4061  00083A  EF21  F004         	goto	u1351
  4062  00083E  EF23  F004         	goto	u1350
  4063  000842                     u1351:
  4064  000842  EF51  F004         	goto	l1787
  4065  000846                     u1350:
  4066  000846                     
  4067                           ;io.c: 28:         pin -=24;
  4068  000846  0EE8               	movlw	232
  4069  000848  2625               	addwf	digitalWrite@pin^0,f,c
  4070  00084A  0EFF               	movlw	255
  4071  00084C  2226               	addwfc	(digitalWrite@pin+1)^0,f,c
  4072                           
  4073                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4074  00084E  5027               	movf	digitalWrite@value^0,w,c
  4075  000850  1028               	iorwf	(digitalWrite@value+1)^0,w,c
  4076  000852  B4D8               	btfsc	status,2,c
  4077  000854  EF2E  F004         	goto	u1361
  4078  000858  EF30  F004         	goto	u1360
  4079  00085C                     u1361:
  4080  00085C  EF40  F004         	goto	l1785
  4081  000860                     u1360:
  4082  000860  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4083  000864  0E01               	movlw	1
  4084  000866  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4085  000868  2A29               	incf	??_digitalWrite^0,f,c
  4086  00086A  EF39  F004         	goto	u1374
  4087  00086E                     u1375:
  4088  00086E  90D8               	bcf	status,0,c
  4089  000870  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4090  000872                     u1374:
  4091  000872  2E29               	decfsz	??_digitalWrite^0,f,c
  4092  000874  EF37  F004         	goto	u1375
  4093  000878  502A               	movf	(??_digitalWrite+1)^0,w,c
  4094  00087A  1283               	iorwf	131,f,c	;volatile
  4095  00087C  EF8B  F004         	goto	l325
  4096  000880                     l1785:
  4097  000880  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4098  000884  0E01               	movlw	1
  4099  000886  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4100  000888  2A29               	incf	??_digitalWrite^0,f,c
  4101  00088A  EF49  F004         	goto	u1384
  4102  00088E                     u1385:
  4103  00088E  90D8               	bcf	status,0,c
  4104  000890  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4105  000892                     u1384:
  4106  000892  2E29               	decfsz	??_digitalWrite^0,f,c
  4107  000894  EF47  F004         	goto	u1385
  4108  000898  502A               	movf	(??_digitalWrite+1)^0,w,c
  4109  00089A  0AFF               	xorlw	255
  4110  00089C  1683               	andwf	131,f,c	;volatile
  4111  00089E  EF8B  F004         	goto	l325
  4112  0008A2                     l1787:
  4113  0008A2  BE26               	btfsc	(digitalWrite@pin+1)^0,7,c
  4114  0008A4  EF5F  F004         	goto	u1390
  4115  0008A8  5026               	movf	(digitalWrite@pin+1)^0,w,c
  4116  0008AA  E107               	bnz	u1391
  4117  0008AC  0E28               	movlw	40
  4118  0008AE  5C25               	subwf	digitalWrite@pin^0,w,c
  4119  0008B0  B0D8               	btfsc	status,0,c
  4120  0008B2  EF5D  F004         	goto	u1391
  4121  0008B6  EF5F  F004         	goto	u1390
  4122  0008BA                     u1391:
  4123  0008BA  EF8B  F004         	goto	l325
  4124  0008BE                     u1390:
  4125  0008BE                     
  4126                           ;io.c: 32:         pin -=32;
  4127  0008BE  0EE0               	movlw	224
  4128  0008C0  2625               	addwf	digitalWrite@pin^0,f,c
  4129  0008C2  0EFF               	movlw	255
  4130  0008C4  2226               	addwfc	(digitalWrite@pin+1)^0,f,c
  4131                           
  4132                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4133  0008C6  5027               	movf	digitalWrite@value^0,w,c
  4134  0008C8  1028               	iorwf	(digitalWrite@value+1)^0,w,c
  4135  0008CA  B4D8               	btfsc	status,2,c
  4136  0008CC  EF6A  F004         	goto	u1401
  4137  0008D0  EF6C  F004         	goto	u1400
  4138  0008D4                     u1401:
  4139  0008D4  EF7C  F004         	goto	l1793
  4140  0008D8                     u1400:
  4141  0008D8  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4142  0008DC  0E01               	movlw	1
  4143  0008DE  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4144  0008E0  2A29               	incf	??_digitalWrite^0,f,c
  4145  0008E2  EF75  F004         	goto	u1414
  4146  0008E6                     u1415:
  4147  0008E6  90D8               	bcf	status,0,c
  4148  0008E8  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4149  0008EA                     u1414:
  4150  0008EA  2E29               	decfsz	??_digitalWrite^0,f,c
  4151  0008EC  EF73  F004         	goto	u1415
  4152  0008F0  502A               	movf	(??_digitalWrite+1)^0,w,c
  4153  0008F2  1284               	iorwf	132,f,c	;volatile
  4154  0008F4  EF8B  F004         	goto	l325
  4155  0008F8                     l1793:
  4156  0008F8  C025  F029         	movff	digitalWrite@pin,??_digitalWrite
  4157  0008FC  0E01               	movlw	1
  4158  0008FE  6E2A               	movwf	(??_digitalWrite+1)^0,c
  4159  000900  2A29               	incf	??_digitalWrite^0,f,c
  4160  000902  EF85  F004         	goto	u1424
  4161  000906                     u1425:
  4162  000906  90D8               	bcf	status,0,c
  4163  000908  362A               	rlcf	(??_digitalWrite+1)^0,f,c
  4164  00090A                     u1424:
  4165  00090A  2E29               	decfsz	??_digitalWrite^0,f,c
  4166  00090C  EF83  F004         	goto	u1425
  4167  000910  502A               	movf	(??_digitalWrite+1)^0,w,c
  4168  000912  0AFF               	xorlw	255
  4169  000914  1684               	andwf	132,f,c	;volatile
  4170  000916                     l325:
  4171  000916  0012               	return		;funcret
  4172  000918                     __end_of_digitalWrite:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _delayMicro *****************
  4176 ;; Defined at:
  4177 ;;		line 5 in file "lcd.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  a               2    0[COMRAM] int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  i               2    0        volatile int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		None
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4191 ;;      Params:         2       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0
  4194 ;;      Totals:         2       0       0       0       0       0       0
  4195 ;;Total ram usage:        2 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_pulseEnablePin
  4201 ;;		_lcdChar
  4202 ;;		_lcdInit
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text27
  4207  001C10                     __ptext27:
  4208                           	callstack 0
  4209  001C10                     _delayMicro:
  4210                           	callstack 25
  4211  001C10  0012               	return		;funcret
  4212  001C12                     __end_of_delayMicro:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _kpInit *****************
  4216 ;; Defined at:
  4217 ;;		line 54 in file "keypad.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4231 ;;      Params:         0       0       0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 2
  4238 ;; This function calls:
  4239 ;;		_pinMode
  4240 ;;		_soInit
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text28
  4247  001A6A                     __ptext28:
  4248                           	callstack 0
  4249  001A6A                     _kpInit:
  4250                           	callstack 28
  4251  001A6A                     
  4252                           ;keypad.c: 55:   soInit();
  4253  001A6A  EC16  F00D         	call	_soInit	;wreg free
  4254                           
  4255                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  4256  001A6E  0E00               	movlw	0
  4257  001A70  6E26               	movwf	(pinMode@pin+1)^0,c
  4258  001A72  0E0A               	movlw	10
  4259  001A74  6E25               	movwf	pinMode@pin^0,c
  4260  001A76  0E00               	movlw	0
  4261  001A78  6E28               	movwf	(pinMode@type+1)^0,c
  4262  001A7A  0E01               	movlw	1
  4263  001A7C  6E27               	movwf	pinMode@type^0,c
  4264  001A7E  EC8C  F004         	call	_pinMode	;wreg free
  4265                           
  4266                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  4267  001A82  0E00               	movlw	0
  4268  001A84  6E26               	movwf	(pinMode@pin+1)^0,c
  4269  001A86  0E09               	movlw	9
  4270  001A88  6E25               	movwf	pinMode@pin^0,c
  4271  001A8A  0E00               	movlw	0
  4272  001A8C  6E28               	movwf	(pinMode@type+1)^0,c
  4273  001A8E  0E01               	movlw	1
  4274  001A90  6E27               	movwf	pinMode@type^0,c
  4275  001A92  EC8C  F004         	call	_pinMode	;wreg free
  4276  001A96                     
  4277                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  4278  001A96  0E0C               	movlw	12
  4279  001A98  6EC1               	movwf	193,c	;volatile
  4280  001A9A  0012               	return		;funcret
  4281  001A9C                     __end_of_kpInit:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _soInit *****************
  4285 ;; Defined at:
  4286 ;;		line 3 in file "so.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4300 ;;      Params:         0       0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 1
  4307 ;; This function calls:
  4308 ;;		_pinMode
  4309 ;; This function is called by:
  4310 ;;		_kpInit
  4311 ;;		_lcdInit
  4312 ;;		_ssdInit
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text29
  4317  001A2C                     __ptext29:
  4318                           	callstack 0
  4319  001A2C                     _soInit:
  4320                           	callstack 28
  4321  001A2C                     
  4322                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4323  001A2C  0E00               	movlw	0
  4324  001A2E  6E26               	movwf	(pinMode@pin+1)^0,c
  4325  001A30  0E1F               	movlw	31
  4326  001A32  6E25               	movwf	pinMode@pin^0,c
  4327  001A34  0E00               	movlw	0
  4328  001A36  6E28               	movwf	(pinMode@type+1)^0,c
  4329  001A38  0E00               	movlw	0
  4330  001A3A  6E27               	movwf	pinMode@type^0,c
  4331  001A3C  EC8C  F004         	call	_pinMode	;wreg free
  4332                           
  4333                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4334  001A40  0E00               	movlw	0
  4335  001A42  6E26               	movwf	(pinMode@pin+1)^0,c
  4336  001A44  0E08               	movlw	8
  4337  001A46  6E25               	movwf	pinMode@pin^0,c
  4338  001A48  0E00               	movlw	0
  4339  001A4A  6E28               	movwf	(pinMode@type+1)^0,c
  4340  001A4C  0E00               	movlw	0
  4341  001A4E  6E27               	movwf	pinMode@type^0,c
  4342  001A50  EC8C  F004         	call	_pinMode	;wreg free
  4343                           
  4344                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4345  001A54  0E00               	movlw	0
  4346  001A56  6E26               	movwf	(pinMode@pin+1)^0,c
  4347  001A58  0E1E               	movlw	30
  4348  001A5A  6E25               	movwf	pinMode@pin^0,c
  4349  001A5C  0E00               	movlw	0
  4350  001A5E  6E28               	movwf	(pinMode@type+1)^0,c
  4351  001A60  0E00               	movlw	0
  4352  001A62  6E27               	movwf	pinMode@type^0,c
  4353  001A64  EC8C  F004         	call	_pinMode	;wreg free
  4354  001A68  0012               	return		;funcret
  4355  001A6A                     __end_of_soInit:
  4356                           	callstack 0
  4357                           
  4358 ;; *************** function _pinMode *****************
  4359 ;; Defined at:
  4360 ;;		line 54 in file "io.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  pin             2    0[COMRAM] int 
  4363 ;;  type            2    2[COMRAM] int 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4375 ;;      Params:         4       0       0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0
  4377 ;;      Temps:          2       0       0       0       0       0       0
  4378 ;;      Totals:         6       0       0       0       0       0       0
  4379 ;;Total ram usage:        6 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_kpInit
  4385 ;;		_lcdInit
  4386 ;;		_ssdInit
  4387 ;;		_soInit
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text30
  4392  000918                     __ptext30:
  4393                           	callstack 0
  4394  000918                     _pinMode:
  4395                           	callstack 28
  4396  000918                     
  4397                           ;io.c: 56:     if(pin <8){
  4398  000918  BE26               	btfsc	(pinMode@pin+1)^0,7,c
  4399  00091A  EF9A  F004         	goto	u1550
  4400  00091E  5026               	movf	(pinMode@pin+1)^0,w,c
  4401  000920  E107               	bnz	u1551
  4402  000922  0E08               	movlw	8
  4403  000924  5C25               	subwf	pinMode@pin^0,w,c
  4404  000926  B0D8               	btfsc	status,0,c
  4405  000928  EF98  F004         	goto	u1551
  4406  00092C  EF9A  F004         	goto	u1550
  4407  000930                     u1551:
  4408  000930  EFC4  F004         	goto	l1883
  4409  000934                     u1550:
  4410  000934                     
  4411                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4412  000934  5027               	movf	pinMode@type^0,w,c
  4413  000936  1028               	iorwf	(pinMode@type+1)^0,w,c
  4414  000938  B4D8               	btfsc	status,2,c
  4415  00093A  EFA1  F004         	goto	u1561
  4416  00093E  EFA3  F004         	goto	u1560
  4417  000942                     u1561:
  4418  000942  EFB3  F004         	goto	l1881
  4419  000946                     u1560:
  4420  000946  C025  F029         	movff	pinMode@pin,??_pinMode
  4421  00094A  0E01               	movlw	1
  4422  00094C  6E2A               	movwf	(??_pinMode+1)^0,c
  4423  00094E  2A29               	incf	??_pinMode^0,f,c
  4424  000950  EFAC  F004         	goto	u1574
  4425  000954                     u1575:
  4426  000954  90D8               	bcf	status,0,c
  4427  000956  362A               	rlcf	(??_pinMode+1)^0,f,c
  4428  000958                     u1574:
  4429  000958  2E29               	decfsz	??_pinMode^0,f,c
  4430  00095A  EFAA  F004         	goto	u1575
  4431  00095E  502A               	movf	(??_pinMode+1)^0,w,c
  4432  000960  1292               	iorwf	146,f,c	;volatile
  4433  000962  EFB2  F005         	goto	l359
  4434  000966                     l1881:
  4435  000966  C025  F029         	movff	pinMode@pin,??_pinMode
  4436  00096A  0E01               	movlw	1
  4437  00096C  6E2A               	movwf	(??_pinMode+1)^0,c
  4438  00096E  2A29               	incf	??_pinMode^0,f,c
  4439  000970  EFBC  F004         	goto	u1584
  4440  000974                     u1585:
  4441  000974  90D8               	bcf	status,0,c
  4442  000976  362A               	rlcf	(??_pinMode+1)^0,f,c
  4443  000978                     u1584:
  4444  000978  2E29               	decfsz	??_pinMode^0,f,c
  4445  00097A  EFBA  F004         	goto	u1585
  4446  00097E  502A               	movf	(??_pinMode+1)^0,w,c
  4447  000980  0AFF               	xorlw	255
  4448  000982  1692               	andwf	146,f,c	;volatile
  4449  000984  EFB2  F005         	goto	l359
  4450  000988                     l1883:
  4451  000988  BE26               	btfsc	(pinMode@pin+1)^0,7,c
  4452  00098A  EFD2  F004         	goto	u1590
  4453  00098E  5026               	movf	(pinMode@pin+1)^0,w,c
  4454  000990  E107               	bnz	u1591
  4455  000992  0E10               	movlw	16
  4456  000994  5C25               	subwf	pinMode@pin^0,w,c
  4457  000996  B0D8               	btfsc	status,0,c
  4458  000998  EFD0  F004         	goto	u1591
  4459  00099C  EFD2  F004         	goto	u1590
  4460  0009A0                     u1591:
  4461  0009A0  EF00  F005         	goto	l1891
  4462  0009A4                     u1590:
  4463  0009A4                     
  4464                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4465  0009A4  5027               	movf	pinMode@type^0,w,c
  4466  0009A6  1028               	iorwf	(pinMode@type+1)^0,w,c
  4467  0009A8  B4D8               	btfsc	status,2,c
  4468  0009AA  EFD9  F004         	goto	u1601
  4469  0009AE  EFDB  F004         	goto	u1600
  4470  0009B2                     u1601:
  4471  0009B2  EFED  F004         	goto	l1889
  4472  0009B6                     u1600:
  4473  0009B6  C025  F029         	movff	pinMode@pin,??_pinMode
  4474  0009BA  0EF8               	movlw	-8
  4475  0009BC  2629               	addwf	??_pinMode^0,f,c
  4476  0009BE  0E01               	movlw	1
  4477  0009C0  6E2A               	movwf	(??_pinMode+1)^0,c
  4478  0009C2  2A29               	incf	??_pinMode^0,f,c
  4479  0009C4  EFE6  F004         	goto	u1614
  4480  0009C8                     u1615:
  4481  0009C8  90D8               	bcf	status,0,c
  4482  0009CA  362A               	rlcf	(??_pinMode+1)^0,f,c
  4483  0009CC                     u1614:
  4484  0009CC  2E29               	decfsz	??_pinMode^0,f,c
  4485  0009CE  EFE4  F004         	goto	u1615
  4486  0009D2  502A               	movf	(??_pinMode+1)^0,w,c
  4487  0009D4  1293               	iorwf	147,f,c	;volatile
  4488  0009D6  EFB2  F005         	goto	l359
  4489  0009DA                     l1889:
  4490  0009DA  C025  F029         	movff	pinMode@pin,??_pinMode
  4491  0009DE  0EF8               	movlw	-8
  4492  0009E0  2629               	addwf	??_pinMode^0,f,c
  4493  0009E2  0E01               	movlw	1
  4494  0009E4  6E2A               	movwf	(??_pinMode+1)^0,c
  4495  0009E6  2A29               	incf	??_pinMode^0,f,c
  4496  0009E8  EFF8  F004         	goto	u1624
  4497  0009EC                     u1625:
  4498  0009EC  90D8               	bcf	status,0,c
  4499  0009EE  362A               	rlcf	(??_pinMode+1)^0,f,c
  4500  0009F0                     u1624:
  4501  0009F0  2E29               	decfsz	??_pinMode^0,f,c
  4502  0009F2  EFF6  F004         	goto	u1625
  4503  0009F6  502A               	movf	(??_pinMode+1)^0,w,c
  4504  0009F8  0AFF               	xorlw	255
  4505  0009FA  1693               	andwf	147,f,c	;volatile
  4506  0009FC  EFB2  F005         	goto	l359
  4507  000A00                     l1891:
  4508  000A00  BE26               	btfsc	(pinMode@pin+1)^0,7,c
  4509  000A02  EF0E  F005         	goto	u1630
  4510  000A06  5026               	movf	(pinMode@pin+1)^0,w,c
  4511  000A08  E107               	bnz	u1631
  4512  000A0A  0E18               	movlw	24
  4513  000A0C  5C25               	subwf	pinMode@pin^0,w,c
  4514  000A0E  B0D8               	btfsc	status,0,c
  4515  000A10  EF0C  F005         	goto	u1631
  4516  000A14  EF0E  F005         	goto	u1630
  4517  000A18                     u1631:
  4518  000A18  EF3C  F005         	goto	l1899
  4519  000A1C                     u1630:
  4520  000A1C                     
  4521                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4522  000A1C  5027               	movf	pinMode@type^0,w,c
  4523  000A1E  1028               	iorwf	(pinMode@type+1)^0,w,c
  4524  000A20  B4D8               	btfsc	status,2,c
  4525  000A22  EF15  F005         	goto	u1641
  4526  000A26  EF17  F005         	goto	u1640
  4527  000A2A                     u1641:
  4528  000A2A  EF29  F005         	goto	l1897
  4529  000A2E                     u1640:
  4530  000A2E  C025  F029         	movff	pinMode@pin,??_pinMode
  4531  000A32  0EF0               	movlw	-16
  4532  000A34  2629               	addwf	??_pinMode^0,f,c
  4533  000A36  0E01               	movlw	1
  4534  000A38  6E2A               	movwf	(??_pinMode+1)^0,c
  4535  000A3A  2A29               	incf	??_pinMode^0,f,c
  4536  000A3C  EF22  F005         	goto	u1654
  4537  000A40                     u1655:
  4538  000A40  90D8               	bcf	status,0,c
  4539  000A42  362A               	rlcf	(??_pinMode+1)^0,f,c
  4540  000A44                     u1654:
  4541  000A44  2E29               	decfsz	??_pinMode^0,f,c
  4542  000A46  EF20  F005         	goto	u1655
  4543  000A4A  502A               	movf	(??_pinMode+1)^0,w,c
  4544  000A4C  1294               	iorwf	148,f,c	;volatile
  4545  000A4E  EFB2  F005         	goto	l359
  4546  000A52                     l1897:
  4547  000A52  C025  F029         	movff	pinMode@pin,??_pinMode
  4548  000A56  0EF0               	movlw	-16
  4549  000A58  2629               	addwf	??_pinMode^0,f,c
  4550  000A5A  0E01               	movlw	1
  4551  000A5C  6E2A               	movwf	(??_pinMode+1)^0,c
  4552  000A5E  2A29               	incf	??_pinMode^0,f,c
  4553  000A60  EF34  F005         	goto	u1664
  4554  000A64                     u1665:
  4555  000A64  90D8               	bcf	status,0,c
  4556  000A66  362A               	rlcf	(??_pinMode+1)^0,f,c
  4557  000A68                     u1664:
  4558  000A68  2E29               	decfsz	??_pinMode^0,f,c
  4559  000A6A  EF32  F005         	goto	u1665
  4560  000A6E  502A               	movf	(??_pinMode+1)^0,w,c
  4561  000A70  0AFF               	xorlw	255
  4562  000A72  1694               	andwf	148,f,c	;volatile
  4563  000A74  EFB2  F005         	goto	l359
  4564  000A78                     l1899:
  4565  000A78  BE26               	btfsc	(pinMode@pin+1)^0,7,c
  4566  000A7A  EF4A  F005         	goto	u1670
  4567  000A7E  5026               	movf	(pinMode@pin+1)^0,w,c
  4568  000A80  E107               	bnz	u1671
  4569  000A82  0E20               	movlw	32
  4570  000A84  5C25               	subwf	pinMode@pin^0,w,c
  4571  000A86  B0D8               	btfsc	status,0,c
  4572  000A88  EF48  F005         	goto	u1671
  4573  000A8C  EF4A  F005         	goto	u1670
  4574  000A90                     u1671:
  4575  000A90  EF78  F005         	goto	l1907
  4576  000A94                     u1670:
  4577  000A94                     
  4578                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4579  000A94  5027               	movf	pinMode@type^0,w,c
  4580  000A96  1028               	iorwf	(pinMode@type+1)^0,w,c
  4581  000A98  B4D8               	btfsc	status,2,c
  4582  000A9A  EF51  F005         	goto	u1681
  4583  000A9E  EF53  F005         	goto	u1680
  4584  000AA2                     u1681:
  4585  000AA2  EF65  F005         	goto	l1905
  4586  000AA6                     u1680:
  4587  000AA6  C025  F029         	movff	pinMode@pin,??_pinMode
  4588  000AAA  0EE8               	movlw	-24
  4589  000AAC  2629               	addwf	??_pinMode^0,f,c
  4590  000AAE  0E01               	movlw	1
  4591  000AB0  6E2A               	movwf	(??_pinMode+1)^0,c
  4592  000AB2  2A29               	incf	??_pinMode^0,f,c
  4593  000AB4  EF5E  F005         	goto	u1694
  4594  000AB8                     u1695:
  4595  000AB8  90D8               	bcf	status,0,c
  4596  000ABA  362A               	rlcf	(??_pinMode+1)^0,f,c
  4597  000ABC                     u1694:
  4598  000ABC  2E29               	decfsz	??_pinMode^0,f,c
  4599  000ABE  EF5C  F005         	goto	u1695
  4600  000AC2  502A               	movf	(??_pinMode+1)^0,w,c
  4601  000AC4  1295               	iorwf	149,f,c	;volatile
  4602  000AC6  EFB2  F005         	goto	l359
  4603  000ACA                     l1905:
  4604  000ACA  C025  F029         	movff	pinMode@pin,??_pinMode
  4605  000ACE  0EE8               	movlw	-24
  4606  000AD0  2629               	addwf	??_pinMode^0,f,c
  4607  000AD2  0E01               	movlw	1
  4608  000AD4  6E2A               	movwf	(??_pinMode+1)^0,c
  4609  000AD6  2A29               	incf	??_pinMode^0,f,c
  4610  000AD8  EF70  F005         	goto	u1704
  4611  000ADC                     u1705:
  4612  000ADC  90D8               	bcf	status,0,c
  4613  000ADE  362A               	rlcf	(??_pinMode+1)^0,f,c
  4614  000AE0                     u1704:
  4615  000AE0  2E29               	decfsz	??_pinMode^0,f,c
  4616  000AE2  EF6E  F005         	goto	u1705
  4617  000AE6  502A               	movf	(??_pinMode+1)^0,w,c
  4618  000AE8  0AFF               	xorlw	255
  4619  000AEA  1695               	andwf	149,f,c	;volatile
  4620  000AEC  EFB2  F005         	goto	l359
  4621  000AF0                     l1907:
  4622  000AF0  BE26               	btfsc	(pinMode@pin+1)^0,7,c
  4623  000AF2  EF86  F005         	goto	u1710
  4624  000AF6  5026               	movf	(pinMode@pin+1)^0,w,c
  4625  000AF8  E107               	bnz	u1711
  4626  000AFA  0E28               	movlw	40
  4627  000AFC  5C25               	subwf	pinMode@pin^0,w,c
  4628  000AFE  B0D8               	btfsc	status,0,c
  4629  000B00  EF84  F005         	goto	u1711
  4630  000B04  EF86  F005         	goto	u1710
  4631  000B08                     u1711:
  4632  000B08  EFB2  F005         	goto	l359
  4633  000B0C                     u1710:
  4634  000B0C                     
  4635                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4636  000B0C  5027               	movf	pinMode@type^0,w,c
  4637  000B0E  1028               	iorwf	(pinMode@type+1)^0,w,c
  4638  000B10  B4D8               	btfsc	status,2,c
  4639  000B12  EF8D  F005         	goto	u1721
  4640  000B16  EF8F  F005         	goto	u1720
  4641  000B1A                     u1721:
  4642  000B1A  EFA1  F005         	goto	l1913
  4643  000B1E                     u1720:
  4644  000B1E  C025  F029         	movff	pinMode@pin,??_pinMode
  4645  000B22  0EE0               	movlw	-32
  4646  000B24  2629               	addwf	??_pinMode^0,f,c
  4647  000B26  0E01               	movlw	1
  4648  000B28  6E2A               	movwf	(??_pinMode+1)^0,c
  4649  000B2A  2A29               	incf	??_pinMode^0,f,c
  4650  000B2C  EF9A  F005         	goto	u1734
  4651  000B30                     u1735:
  4652  000B30  90D8               	bcf	status,0,c
  4653  000B32  362A               	rlcf	(??_pinMode+1)^0,f,c
  4654  000B34                     u1734:
  4655  000B34  2E29               	decfsz	??_pinMode^0,f,c
  4656  000B36  EF98  F005         	goto	u1735
  4657  000B3A  502A               	movf	(??_pinMode+1)^0,w,c
  4658  000B3C  1296               	iorwf	150,f,c	;volatile
  4659  000B3E  EFB2  F005         	goto	l359
  4660  000B42                     l1913:
  4661  000B42  C025  F029         	movff	pinMode@pin,??_pinMode
  4662  000B46  0EE0               	movlw	-32
  4663  000B48  2629               	addwf	??_pinMode^0,f,c
  4664  000B4A  0E01               	movlw	1
  4665  000B4C  6E2A               	movwf	(??_pinMode+1)^0,c
  4666  000B4E  2A29               	incf	??_pinMode^0,f,c
  4667  000B50  EFAC  F005         	goto	u1744
  4668  000B54                     u1745:
  4669  000B54  90D8               	bcf	status,0,c
  4670  000B56  362A               	rlcf	(??_pinMode+1)^0,f,c
  4671  000B58                     u1744:
  4672  000B58  2E29               	decfsz	??_pinMode^0,f,c
  4673  000B5A  EFAA  F005         	goto	u1745
  4674  000B5E  502A               	movf	(??_pinMode+1)^0,w,c
  4675  000B60  0AFF               	xorlw	255
  4676  000B62  1696               	andwf	150,f,c	;volatile
  4677  000B64                     l359:
  4678  000B64  0012               	return		;funcret
  4679  000B66                     __end_of_pinMode:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _cafes *****************
  4683 ;; Defined at:
  4684 ;;		line 17 in file "main.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4698 ;;      Params:         0       0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text31
  4712  001B90                     __ptext31:
  4713                           	callstack 0
  4714  001B90                     _cafes:
  4715                           	callstack 30
  4716  001B90                     
  4717                           ;main.c: 18:     caseiro.nome=1;
  4718  001B90  0E01               	movlw	1
  4719  001B92  6E11               	movwf	_caseiro^0,c
  4720                           
  4721                           ;main.c: 19:     caseiro.tempo=55;
  4722  001B94  0E37               	movlw	55
  4723  001B96  6E12               	movwf	(_caseiro+1)^0,c
  4724                           
  4725                           ;main.c: 20:     expresso.nome=2;
  4726  001B98  0E02               	movlw	2
  4727  001B9A  6E0D               	movwf	_expresso^0,c
  4728                           
  4729                           ;main.c: 21:     expresso.tempo=40;
  4730  001B9C  0E28               	movlw	40
  4731  001B9E  6E0E               	movwf	(_expresso+1)^0,c
  4732                           
  4733                           ;main.c: 22:     cappu.nome=3;
  4734  001BA0  0E03               	movlw	3
  4735  001BA2  6E09               	movwf	_cappu^0,c
  4736                           
  4737                           ;main.c: 23:     cappu.tempo=90;
  4738  001BA4  0E5A               	movlw	90
  4739  001BA6  6E0A               	movwf	(_cappu+1)^0,c
  4740                           
  4741                           ;main.c: 24:     latte.nome=4;
  4742  001BA8  0E04               	movlw	4
  4743  001BAA  6E05               	movwf	_latte^0,c
  4744                           
  4745                           ;main.c: 25:     latte.tempo=120;
  4746  001BAC  0E78               	movlw	120
  4747  001BAE  6E06               	movwf	(_latte+1)^0,c
  4748  001BB0  0012               	return		;funcret
  4749  001BB2                     __end_of_cafes:
  4750                           	callstack 0
  4751                           
  4752 ;; *************** function ___awmod *****************
  4753 ;; Defined at:
  4754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  dividend        2    8[COMRAM] int 
  4757 ;;  divisor         2   10[COMRAM] int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  sign            1   13[COMRAM] unsigned char 
  4760 ;;  counter         1   12[COMRAM] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  2    8[COMRAM] int 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         4       0       0       0       0       0       0
  4771 ;;      Locals:         2       0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0
  4773 ;;      Totals:         6       0       0       0       0       0       0
  4774 ;;Total ram usage:        6 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;;		_lcdNumber
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text32
  4785  001680                     __ptext32:
  4786                           	callstack 0
  4787  001680                     ___awmod:
  4788                           	callstack 30
  4789  001680  0E00               	movlw	0
  4790  001682  6E32               	movwf	___awmod@sign^0,c
  4791  001684  BE2E               	btfsc	(___awmod@dividend+1)^0,7,c
  4792  001686  EF49  F00B         	goto	u2240
  4793  00168A  EF47  F00B         	goto	u2241
  4794  00168E                     u2241:
  4795  00168E  EF4F  F00B         	goto	l2275
  4796  001692                     u2240:
  4797  001692  6C2D               	negf	___awmod@dividend^0,c
  4798  001694  1E2E               	comf	(___awmod@dividend+1)^0,f,c
  4799  001696  B0D8               	btfsc	status,0,c
  4800  001698  2A2E               	incf	(___awmod@dividend+1)^0,f,c
  4801  00169A  0E01               	movlw	1
  4802  00169C  6E32               	movwf	___awmod@sign^0,c
  4803  00169E                     l2275:
  4804  00169E  BE30               	btfsc	(___awmod@divisor+1)^0,7,c
  4805  0016A0  EF56  F00B         	goto	u2250
  4806  0016A4  EF54  F00B         	goto	u2251
  4807  0016A8                     u2251:
  4808  0016A8  EF5A  F00B         	goto	l2279
  4809  0016AC                     u2250:
  4810  0016AC  6C2F               	negf	___awmod@divisor^0,c
  4811  0016AE  1E30               	comf	(___awmod@divisor+1)^0,f,c
  4812  0016B0  B0D8               	btfsc	status,0,c
  4813  0016B2  2A30               	incf	(___awmod@divisor+1)^0,f,c
  4814  0016B4                     l2279:
  4815  0016B4  502F               	movf	___awmod@divisor^0,w,c
  4816  0016B6  1030               	iorwf	(___awmod@divisor+1)^0,w,c
  4817  0016B8  B4D8               	btfsc	status,2,c
  4818  0016BA  EF61  F00B         	goto	u2261
  4819  0016BE  EF63  F00B         	goto	u2260
  4820  0016C2                     u2261:
  4821  0016C2  EF87  F00B         	goto	l2295
  4822  0016C6                     u2260:
  4823  0016C6  0E01               	movlw	1
  4824  0016C8  6E31               	movwf	___awmod@counter^0,c
  4825  0016CA  EF6B  F00B         	goto	l2285
  4826  0016CE                     l2283:
  4827  0016CE  90D8               	bcf	status,0,c
  4828  0016D0  362F               	rlcf	___awmod@divisor^0,f,c
  4829  0016D2  3630               	rlcf	(___awmod@divisor+1)^0,f,c
  4830  0016D4  2A31               	incf	___awmod@counter^0,f,c
  4831  0016D6                     l2285:
  4832  0016D6  AE30               	btfss	(___awmod@divisor+1)^0,7,c
  4833  0016D8  EF70  F00B         	goto	u2271
  4834  0016DC  EF72  F00B         	goto	u2270
  4835  0016E0                     u2271:
  4836  0016E0  EF67  F00B         	goto	l2283
  4837  0016E4                     u2270:
  4838  0016E4                     l2287:
  4839  0016E4  502F               	movf	___awmod@divisor^0,w,c
  4840  0016E6  5C2D               	subwf	___awmod@dividend^0,w,c
  4841  0016E8  5030               	movf	(___awmod@divisor+1)^0,w,c
  4842  0016EA  582E               	subwfb	(___awmod@dividend+1)^0,w,c
  4843  0016EC  A0D8               	btfss	status,0,c
  4844  0016EE  EF7B  F00B         	goto	u2281
  4845  0016F2  EF7D  F00B         	goto	u2280
  4846  0016F6                     u2281:
  4847  0016F6  EF81  F00B         	goto	l2291
  4848  0016FA                     u2280:
  4849  0016FA  502F               	movf	___awmod@divisor^0,w,c
  4850  0016FC  5E2D               	subwf	___awmod@dividend^0,f,c
  4851  0016FE  5030               	movf	(___awmod@divisor+1)^0,w,c
  4852  001700  5A2E               	subwfb	(___awmod@dividend+1)^0,f,c
  4853  001702                     l2291:
  4854  001702  90D8               	bcf	status,0,c
  4855  001704  3230               	rrcf	(___awmod@divisor+1)^0,f,c
  4856  001706  322F               	rrcf	___awmod@divisor^0,f,c
  4857  001708  2E31               	decfsz	___awmod@counter^0,f,c
  4858  00170A  EF72  F00B         	goto	l2287
  4859  00170E                     l2295:
  4860  00170E  5032               	movf	___awmod@sign^0,w,c
  4861  001710  B4D8               	btfsc	status,2,c
  4862  001712  EF8D  F00B         	goto	u2291
  4863  001716  EF8F  F00B         	goto	u2290
  4864  00171A                     u2291:
  4865  00171A  EF93  F00B         	goto	l2299
  4866  00171E                     u2290:
  4867  00171E  6C2D               	negf	___awmod@dividend^0,c
  4868  001720  1E2E               	comf	(___awmod@dividend+1)^0,f,c
  4869  001722  B0D8               	btfsc	status,0,c
  4870  001724  2A2E               	incf	(___awmod@dividend+1)^0,f,c
  4871  001726                     l2299:
  4872  001726  C02D  F02D         	movff	___awmod@dividend,?___awmod
  4873  00172A  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
  4874  00172E  0012               	return		;funcret
  4875  001730                     __end_of___awmod:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function ___awdiv *****************
  4879 ;; Defined at:
  4880 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  dividend        2    0[COMRAM] int 
  4883 ;;  divisor         2    2[COMRAM] int 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  quotient        2    6[COMRAM] int 
  4886 ;;  sign            1    5[COMRAM] unsigned char 
  4887 ;;  counter         1    4[COMRAM] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  2    0[COMRAM] int 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4897 ;;      Params:         4       0       0       0       0       0       0
  4898 ;;      Locals:         4       0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0
  4900 ;;      Totals:         8       0       0       0       0       0       0
  4901 ;;Total ram usage:        8 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;;		_lcdNumber
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text33
  4912  001508                     __ptext33:
  4913                           	callstack 0
  4914  001508                     ___awdiv:
  4915                           	callstack 30
  4916  001508  0E00               	movlw	0
  4917  00150A  6E2A               	movwf	___awdiv@sign^0,c
  4918  00150C  BE28               	btfsc	(___awdiv@divisor+1)^0,7,c
  4919  00150E  EF8D  F00A         	goto	u2180
  4920  001512  EF8B  F00A         	goto	u2181
  4921  001516                     u2181:
  4922  001516  EF93  F00A         	goto	l2231
  4923  00151A                     u2180:
  4924  00151A  6C27               	negf	___awdiv@divisor^0,c
  4925  00151C  1E28               	comf	(___awdiv@divisor+1)^0,f,c
  4926  00151E  B0D8               	btfsc	status,0,c
  4927  001520  2A28               	incf	(___awdiv@divisor+1)^0,f,c
  4928  001522  0E01               	movlw	1
  4929  001524  6E2A               	movwf	___awdiv@sign^0,c
  4930  001526                     l2231:
  4931  001526  BE26               	btfsc	(___awdiv@dividend+1)^0,7,c
  4932  001528  EF9A  F00A         	goto	u2190
  4933  00152C  EF98  F00A         	goto	u2191
  4934  001530                     u2191:
  4935  001530  EFA0  F00A         	goto	l2237
  4936  001534                     u2190:
  4937  001534  6C25               	negf	___awdiv@dividend^0,c
  4938  001536  1E26               	comf	(___awdiv@dividend+1)^0,f,c
  4939  001538  B0D8               	btfsc	status,0,c
  4940  00153A  2A26               	incf	(___awdiv@dividend+1)^0,f,c
  4941  00153C  0E01               	movlw	1
  4942  00153E  1A2A               	xorwf	___awdiv@sign^0,f,c
  4943  001540                     l2237:
  4944  001540  0E00               	movlw	0
  4945  001542  6E2C               	movwf	(___awdiv@quotient+1)^0,c
  4946  001544  0E00               	movlw	0
  4947  001546  6E2B               	movwf	___awdiv@quotient^0,c
  4948  001548  5027               	movf	___awdiv@divisor^0,w,c
  4949  00154A  1028               	iorwf	(___awdiv@divisor+1)^0,w,c
  4950  00154C  B4D8               	btfsc	status,2,c
  4951  00154E  EFAB  F00A         	goto	u2201
  4952  001552  EFAD  F00A         	goto	u2200
  4953  001556                     u2201:
  4954  001556  EFD5  F00A         	goto	l2259
  4955  00155A                     u2200:
  4956  00155A  0E01               	movlw	1
  4957  00155C  6E29               	movwf	___awdiv@counter^0,c
  4958  00155E  EFB5  F00A         	goto	l2245
  4959  001562                     l2243:
  4960  001562  90D8               	bcf	status,0,c
  4961  001564  3627               	rlcf	___awdiv@divisor^0,f,c
  4962  001566  3628               	rlcf	(___awdiv@divisor+1)^0,f,c
  4963  001568  2A29               	incf	___awdiv@counter^0,f,c
  4964  00156A                     l2245:
  4965  00156A  AE28               	btfss	(___awdiv@divisor+1)^0,7,c
  4966  00156C  EFBA  F00A         	goto	u2211
  4967  001570  EFBC  F00A         	goto	u2210
  4968  001574                     u2211:
  4969  001574  EFB1  F00A         	goto	l2243
  4970  001578                     u2210:
  4971  001578                     l2247:
  4972  001578  90D8               	bcf	status,0,c
  4973  00157A  362B               	rlcf	___awdiv@quotient^0,f,c
  4974  00157C  362C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4975  00157E  5027               	movf	___awdiv@divisor^0,w,c
  4976  001580  5C25               	subwf	___awdiv@dividend^0,w,c
  4977  001582  5028               	movf	(___awdiv@divisor+1)^0,w,c
  4978  001584  5826               	subwfb	(___awdiv@dividend+1)^0,w,c
  4979  001586  A0D8               	btfss	status,0,c
  4980  001588  EFC8  F00A         	goto	u2221
  4981  00158C  EFCA  F00A         	goto	u2220
  4982  001590                     u2221:
  4983  001590  EFCF  F00A         	goto	l2255
  4984  001594                     u2220:
  4985  001594  5027               	movf	___awdiv@divisor^0,w,c
  4986  001596  5E25               	subwf	___awdiv@dividend^0,f,c
  4987  001598  5028               	movf	(___awdiv@divisor+1)^0,w,c
  4988  00159A  5A26               	subwfb	(___awdiv@dividend+1)^0,f,c
  4989  00159C  802B               	bsf	___awdiv@quotient^0,0,c
  4990  00159E                     l2255:
  4991  00159E  90D8               	bcf	status,0,c
  4992  0015A0  3228               	rrcf	(___awdiv@divisor+1)^0,f,c
  4993  0015A2  3227               	rrcf	___awdiv@divisor^0,f,c
  4994  0015A4  2E29               	decfsz	___awdiv@counter^0,f,c
  4995  0015A6  EFBC  F00A         	goto	l2247
  4996  0015AA                     l2259:
  4997  0015AA  502A               	movf	___awdiv@sign^0,w,c
  4998  0015AC  B4D8               	btfsc	status,2,c
  4999  0015AE  EFDB  F00A         	goto	u2231
  5000  0015B2  EFDD  F00A         	goto	u2230
  5001  0015B6                     u2231:
  5002  0015B6  EFE1  F00A         	goto	l2263
  5003  0015BA                     u2230:
  5004  0015BA  6C2B               	negf	___awdiv@quotient^0,c
  5005  0015BC  1E2C               	comf	(___awdiv@quotient+1)^0,f,c
  5006  0015BE  B0D8               	btfsc	status,0,c
  5007  0015C0  2A2C               	incf	(___awdiv@quotient+1)^0,f,c
  5008  0015C2                     l2263:
  5009  0015C2  C02B  F025         	movff	___awdiv@quotient,?___awdiv
  5010  0015C6  C02C  F026         	movff	___awdiv@quotient+1,?___awdiv+1
  5011  0015CA  0012               	return		;funcret
  5012  0015CC                     __end_of___awdiv:
  5013                           	callstack 0
  5014                           
  5015                           	psect	rparam
  5016  0000                     
  5017                           	psect	idloc
  5018                           
  5019                           ;Config register IDLOC0 @ 0x200000
  5020                           ;	unspecified, using default values
  5021  200000                     	org	2097152
  5022  200000  FF                 	db	255
  5023                           
  5024                           ;Config register IDLOC1 @ 0x200001
  5025                           ;	unspecified, using default values
  5026  200001                     	org	2097153
  5027  200001  FF                 	db	255
  5028                           
  5029                           ;Config register IDLOC2 @ 0x200002
  5030                           ;	unspecified, using default values
  5031  200002                     	org	2097154
  5032  200002  FF                 	db	255
  5033                           
  5034                           ;Config register IDLOC3 @ 0x200003
  5035                           ;	unspecified, using default values
  5036  200003                     	org	2097155
  5037  200003  FF                 	db	255
  5038                           
  5039                           ;Config register IDLOC4 @ 0x200004
  5040                           ;	unspecified, using default values
  5041  200004                     	org	2097156
  5042  200004  FF                 	db	255
  5043                           
  5044                           ;Config register IDLOC5 @ 0x200005
  5045                           ;	unspecified, using default values
  5046  200005                     	org	2097157
  5047  200005  FF                 	db	255
  5048                           
  5049                           ;Config register IDLOC6 @ 0x200006
  5050                           ;	unspecified, using default values
  5051  200006                     	org	2097158
  5052  200006  FF                 	db	255
  5053                           
  5054                           ;Config register IDLOC7 @ 0x200007
  5055                           ;	unspecified, using default values
  5056  200007                     	org	2097159
  5057  200007  FF                 	db	255
  5058                           
  5059                           	psect	config
  5060                           
  5061                           ; Padding undefined space
  5062  300000                     	org	3145728
  5063  300000  FF                 	db	255
  5064                           
  5065                           ;Config register CONFIG1H @ 0x300001
  5066                           ;	unspecified, using default values
  5067                           ;	Oscillator Selection bits
  5068                           ;	OSC = 0x7, unprogrammed default
  5069                           ;	Fail-Safe Clock Monitor Enable bit
  5070                           ;	FCMEN = 0x0, unprogrammed default
  5071                           ;	Internal/External Oscillator Switchover bit
  5072                           ;	IESO = 0x0, unprogrammed default
  5073  300001                     	org	3145729
  5074  300001  07                 	db	7
  5075                           
  5076                           ;Config register CONFIG2L @ 0x300002
  5077                           ;	unspecified, using default values
  5078                           ;	Power-up Timer Enable bit
  5079                           ;	PWRT = 0x1, unprogrammed default
  5080                           ;	Brown-out Reset Enable bits
  5081                           ;	BOREN = 0x3, unprogrammed default
  5082                           ;	Brown Out Reset Voltage bits
  5083                           ;	BORV = 0x3, unprogrammed default
  5084  300002                     	org	3145730
  5085  300002  1F                 	db	31
  5086                           
  5087                           ;Config register CONFIG2H @ 0x300003
  5088                           ;	unspecified, using default values
  5089                           ;	Watchdog Timer Enable bit
  5090                           ;	WDT = 0x1, unprogrammed default
  5091                           ;	Watchdog Timer Postscale Select bits
  5092                           ;	WDTPS = 0xF, unprogrammed default
  5093  300003                     	org	3145731
  5094  300003  1F                 	db	31
  5095                           
  5096                           ; Padding undefined space
  5097  300004                     	org	3145732
  5098  300004  FF                 	db	255
  5099                           
  5100                           ;Config register CONFIG3H @ 0x300005
  5101                           ;	unspecified, using default values
  5102                           ;	CCP2 MUX bit
  5103                           ;	CCP2MX = 0x1, unprogrammed default
  5104                           ;	PORTB A/D Enable bit
  5105                           ;	PBADEN = 0x1, unprogrammed default
  5106                           ;	Low-Power Timer1 Oscillator Enable bit
  5107                           ;	LPT1OSC = 0x0, unprogrammed default
  5108                           ;	MCLR Pin Enable bit
  5109                           ;	MCLRE = 0x1, unprogrammed default
  5110  300005                     	org	3145733
  5111  300005  83                 	db	131
  5112                           
  5113                           ;Config register CONFIG4L @ 0x300006
  5114                           ;	unspecified, using default values
  5115                           ;	Stack Full/Underflow Reset Enable bit
  5116                           ;	STVREN = 0x1, unprogrammed default
  5117                           ;	Single-Supply ICSP Enable bit
  5118                           ;	LVP = 0x1, unprogrammed default
  5119                           ;	Extended Instruction Set Enable bit
  5120                           ;	XINST = 0x0, unprogrammed default
  5121                           ;	Background Debugger Enable bit
  5122                           ;	DEBUG = 0x1, unprogrammed default
  5123  300006                     	org	3145734
  5124  300006  85                 	db	133
  5125                           
  5126                           ; Padding undefined space
  5127  300007                     	org	3145735
  5128  300007  FF                 	db	255
  5129                           
  5130                           ;Config register CONFIG5L @ 0x300008
  5131                           ;	unspecified, using default values
  5132                           ;	Code Protection bit
  5133                           ;	CP0 = 0x1, unprogrammed default
  5134                           ;	Code Protection bit
  5135                           ;	CP1 = 0x1, unprogrammed default
  5136                           ;	Code Protection bit
  5137                           ;	CP2 = 0x1, unprogrammed default
  5138                           ;	Code Protection bit
  5139                           ;	CP3 = 0x1, unprogrammed default
  5140  300008                     	org	3145736
  5141  300008  0F                 	db	15
  5142                           
  5143                           ;Config register CONFIG5H @ 0x300009
  5144                           ;	unspecified, using default values
  5145                           ;	Boot Block Code Protection bit
  5146                           ;	CPB = 0x1, unprogrammed default
  5147                           ;	Data EEPROM Code Protection bit
  5148                           ;	CPD = 0x1, unprogrammed default
  5149  300009                     	org	3145737
  5150  300009  C0                 	db	192
  5151                           
  5152                           ;Config register CONFIG6L @ 0x30000A
  5153                           ;	unspecified, using default values
  5154                           ;	Write Protection bit
  5155                           ;	WRT0 = 0x1, unprogrammed default
  5156                           ;	Write Protection bit
  5157                           ;	WRT1 = 0x1, unprogrammed default
  5158                           ;	Write Protection bit
  5159                           ;	WRT2 = 0x1, unprogrammed default
  5160                           ;	Write Protection bit
  5161                           ;	WRT3 = 0x1, unprogrammed default
  5162  30000A                     	org	3145738
  5163  30000A  0F                 	db	15
  5164                           
  5165                           ;Config register CONFIG6H @ 0x30000B
  5166                           ;	unspecified, using default values
  5167                           ;	Configuration Register Write Protection bit
  5168                           ;	WRTC = 0x1, unprogrammed default
  5169                           ;	Boot Block Write Protection bit
  5170                           ;	WRTB = 0x1, unprogrammed default
  5171                           ;	Data EEPROM Write Protection bit
  5172                           ;	WRTD = 0x1, unprogrammed default
  5173  30000B                     	org	3145739
  5174  30000B  E0                 	db	224
  5175                           
  5176                           ;Config register CONFIG7L @ 0x30000C
  5177                           ;	unspecified, using default values
  5178                           ;	Table Read Protection bit
  5179                           ;	EBTR0 = 0x1, unprogrammed default
  5180                           ;	Table Read Protection bit
  5181                           ;	EBTR1 = 0x1, unprogrammed default
  5182                           ;	Table Read Protection bit
  5183                           ;	EBTR2 = 0x1, unprogrammed default
  5184                           ;	Table Read Protection bit
  5185                           ;	EBTR3 = 0x1, unprogrammed default
  5186  30000C                     	org	3145740
  5187  30000C  0F                 	db	15
  5188                           
  5189                           ;Config register CONFIG7H @ 0x30000D
  5190                           ;	unspecified, using default values
  5191                           ;	Boot Block Table Read Protection bit
  5192                           ;	EBTRB = 0x1, unprogrammed default
  5193  30000D                     	org	3145741
  5194  30000D  40                 	db	64
  5195                           tosu	equ	0xFFF
  5196                           tosh	equ	0xFFE
  5197                           tosl	equ	0xFFD
  5198                           stkptr	equ	0xFFC
  5199                           pclatu	equ	0xFFB
  5200                           pclath	equ	0xFFA
  5201                           pcl	equ	0xFF9
  5202                           tblptru	equ	0xFF8
  5203                           tblptrh	equ	0xFF7
  5204                           tblptrl	equ	0xFF6
  5205                           tablat	equ	0xFF5
  5206                           prodh	equ	0xFF4
  5207                           prodl	equ	0xFF3
  5208                           indf0	equ	0xFEF
  5209                           postinc0	equ	0xFEE
  5210                           postdec0	equ	0xFED
  5211                           preinc0	equ	0xFEC
  5212                           plusw0	equ	0xFEB
  5213                           fsr0h	equ	0xFEA
  5214                           fsr0l	equ	0xFE9
  5215                           wreg	equ	0xFE8
  5216                           indf1	equ	0xFE7
  5217                           postinc1	equ	0xFE6
  5218                           postdec1	equ	0xFE5
  5219                           preinc1	equ	0xFE4
  5220                           plusw1	equ	0xFE3
  5221                           fsr1h	equ	0xFE2
  5222                           fsr1l	equ	0xFE1
  5223                           bsr	equ	0xFE0
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           postdec2	equ	0xFDD
  5227                           preinc2	equ	0xFDC
  5228                           plusw2	equ	0xFDB
  5229                           fsr2h	equ	0xFDA
  5230                           fsr2l	equ	0xFD9
  5231                           status	equ	0xFD8

Data Sizes:
    Strings     173
    Constant    26
    Data        1
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      63
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 19
		 -> STR_20(CODE[9]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[9]), 
		 -> STR_16(CODE[9]), STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[9]), 
		 -> STR_12(CODE[15]), STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[19]), 
		 -> STR_8(CODE[15]), STR_7(CODE[16]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[16]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_lcd
    _termina->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _leTeclado->_kpDebounce
    _kpDebounce->_soWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcd->_lcdString
    _lcdCommand->_pushByte
    _ImprimeCafe->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  195451
                                             22 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                              _cafes
                             _kpInit
                                _lcd
                            _lcdInit
                          _leTeclado
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                            _termina
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _termina                                              0     0      0   58615
                        _ImprimeCafe
                             _atraso
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _atraso                                               5     5      0     120
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            2     2      0   11499
                                             14 COMRAM     2     2      0
                         _kpDebounce
                             _kpRead
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   41500
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  2     2      0   58495
                                             20 COMRAM     2     2      0
                        _ImprimeCafe
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ImprimeCafe                                          0     0      0   20045
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   20045
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2112
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2112
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _cafes                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1056
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _cafes
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcd
     _ImprimeCafe
       _lcdString
         _lcdChar
           _delayMicro
           _pushByte
             _digitalWrite
             _pulseEnablePin
               _delayMicro
               _digitalWrite
             _soWrite
               _PulseClockData
                 _digitalWrite
               _PulseEnClock
                 _digitalWrite
               _digitalWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdString
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _leTeclado
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _termina
     _ImprimeCafe
     _atraso
     _lcdCommand
     _lcdString
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      3F       1       49.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      15        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 12:16:04 2021

         _pulseEnablePin 19EA             lcdString@msg 0033                       l47 1BB0  
                     l56 0D10                       l83 1506                       l75 14BA  
                     l69 0D10                       l86 1022             ___awdiv@sign 002A  
                     _v0 0020                       _v1 001F                       _v2 001E  
                     _v3 001D                      l100 1026                      l211 199A  
                    l220 167E                      l108 17C2                      l205 1BEC  
                    l143 1C06                      l330 12F8                      l163 141A  
                    l260 1944                      l325 0916                      l165 1432  
                    l334 12F8                      l191 1B6C                      l247 18EE  
                    l168 1A9A                      l280 1B8E                      l185 1ACA  
                    l329 12FC                      l257 1192                      l194 1896  
                    l274 1BEE                      l179 1C10                      l283 1C0E  
                    l188 1A2A                      l372 1B1E                      l197 1BCE  
                    l277 1BFC                      l366 1A68                      l623 15CA  
                    l359 0B64                      l369 1AF4                      l377 19E8  
                    l636 172E                      l389 183C                      u700 17FA  
                    u701 17F6                      u710 1812                      u711 180E  
                    u720 183C                      u721 1838                      u690 17E2  
                    u691 17DE                      _lcd 0EA6                      _seg 001B  
           ___awmod@sign 0032                      wreg 000FE8                     l2001 0BCE  
                   l2011 0C04                     l2003 0BDE                     l2101 0FD8  
                   l2021 0C48                     l2013 0C12                     l2005 0BE2  
                   l2031 0C82                     l2023 0C4C                     l2015 0C22  
                   l2007 0BF0                     l1303 17FE                     l2111 1730  
                   l2105 0FE0                     l2033 0C8A                     l2041 0CBA  
                   l2025 0C5A                     l2009 0C00                     l2017 0C2A  
                   l2201 10F0                     l1313 181C                     l1305 1802  
                   l1321 1828                     l2121 1752                     l2113 1734  
                   l2051 0CFA                     l2043 0CCC                     l2035 0C98  
                   l2019 0C3A                     l2027 0C62                     l2211 1150  
                   l2203 1108                     l1323 182A                     l2131 17A6  
                   l2123 1762                     l2115 173A                     l2061 0EDA  
                   l2141 1638                     l2053 0CFE                     l2045 0CDA  
                   l2037 0CA0                     l2029 0C74                     l2205 111C  
                   l1309 1816                     l1317 1822                     l2133 17B2  
                   l2125 1772                     l2117 1740                     l2231 1526  
                   l2223 1508                     l2071 0F10                     l2063 0EE6  
                   l2055 0EA6                     l2151 1678                     l2143 1652  
                   l2047 0CDE                     l2039 0CAE                     l2207 1124  
                   l2135 17B8                     l2127 1784                     l2119 1746  
                   l2311 0D3A                     l2303 0D12                     l2241 155A  
                   l2233 1534                     l2225 150C                     l1329 1B90  
                   l2081 0F4A                     l2073 0F16                     l2065 0EF0  
                   l2057 0EB8                     l2145 1660                     l2137 15CC  
                   l2049 0CEC                     l2153 18F0                     l2209 113C  
                   l2217 1158                     l2129 1794                     l2161 1B78  
                   l2321 0D72                     l2313 0D42                     l2305 0D22  
                   l2251 1594                     l2243 1562                     l2235 153C  
                   l2227 151A                     l2155 1A6A                     l2091 0F92  
                   l2083 0F60                     l2075 0F22                     l2067 0EF6  
                   l2059 0ED4                     l2147 166C                     l2139 162C  
                   l2171 189A                     l1291 17CE                     l1507 1C08  
                   l2163 1B7C                     l2331 0DC8                     l2323 0D78  
                   l2315 0D46                     l2307 0D26                     l2261 15BA  
                   l2253 159C                     l2245 156A                     l2237 1540  
                   l2229 1522                     l2157 1A96                     l2093 0FA4  
                   l2085 0F66                     l2077 0F38                     l2069 0EFA  
                   l2149 1672                     l2181 18D4                     l2173 18AA  
                   l1293 17D2                     l1509 1C0C                     l2165 1B84  
                   l2333 0DFA                     l2325 0D86                     l2317 0D4E  
                   l2309 0D36                     l2263 15C2                     l2255 159E  
                   l2247 1578                     l2239 1548                     l2271 1692  
                   l2095 0FB4                     l2087 0F72                     l2079 0F3E  
                   l2183 18D8                     l2175 18AE                     l2191 10A0  
                   l2167 1B88                     l2159 1B6E                     l2351 0E9A  
                   l2335 0E2C                     l2327 0D92                     l2319 0D5E  
                   l2343 0E52                     l2257 15A4                     l2249 157E  
                   l2281 16C6                     l2273 169A                     l1801 19B0  
                   l2097 0FC6                     l2089 0F82                     l2185 18EA  
                   l2177 18BE                     l2193 10B4                     l1297 17E6  
                   l1289 17C6                     l2169 1B8C                     l2337 0E4A  
                   l2329 0D96                     l2345 0E84                     l2259 15AA  
                   l2291 1702                     l2283 16CE                     l2275 169E  
                   l2267 1680                     l1811 19D2                     l2099 0FD2  
                   l2179 18C2                     l2195 10BC                     l2187 1028  
                   l1299 17EA                     l2347 0E94                     l2293 1708  
                   l2285 16D6                     l2277 16AC                     l2269 1684  
                   l1901 0A94                     l1821 1A0A                     l1813 19D4  
                   l2197 10D4                     l2189 1088                     l2349 0E96  
                   l2287 16E4                     l2295 170E                     l2279 16B4  
                   l1911 0B1E                     l1903 0AA6                     l1815 19E4  
                   l1807 19B4                     l1823 1840                     l1831 1952  
                   l2199 10E8                     l1575 1BEE                     l2383 0E66  
                   l2297 171E                     l2289 16FA                     l1913 0B42  
                   l1905 0ACA                     l1761 0718                     l1817 19EA  
                   l1809 19CC                     l1825 1BD2                     l1833 196E  
                   l1921 12FE                     l2385 116C                     ?_lcd 0025  
                   l2299 1726                     l1907 0AF0                     l1771 07B2  
                   l1763 073A                     l1755 06CA                     l1819 19FE  
                   l1827 1BE0                     l1835 1972                     l1915 1A9C  
                   l2387 0FF4                     l1931 13A0                     l1923 130E  
                   l1909 0B0C                     l1781 0846                     l1773 07CE  
                   l1765 0756                     l1757 06E6                     l1829 1946  
                   l1917 1AA8                     l1861 1268                     l1853 1220  
                   l1845 11D8                     l1837 1194                     l1941 1408  
                   l1933 13BE                     l1791 08D8                     l1783 0860  
                   l1775 07E8                     l1767 0770                     l1759 06F8  
                   l1951 1434                     l1919 1AAC                     l1871 12CC  
                   l1863 1284                     l1855 123C                     l1847 11F4  
                   l1839 11B0                     l1943 140E                     l1935 13E8  
                   l1927 132E                     l1881 0966                     l1793 08F8  
                   l1785 0880                     l1777 0808                     l1769 0790  
                   l1961 1488                     l1953 1444                     l1945 1412  
                   l1929 137A                     l1891 0A00                     l1883 0988  
                   l1875 0918                     l1787 08A2                     l1779 082A  
                   l1795 1ACC                     l1971 14DA                     l1963 1498  
                   l1955 1454                     l1947 142A                     l1939 13F0  
                   l1893 0A1C                     l1885 09A4                     l1877 0934  
                   l1789 08BE                     l1797 1AF6                     l1973 14EA  
                   l1965 14AA                     l1957 1466                     l1981 1B4A  
                   l1869 12B0                     l1949 1BFE                     l1895 0A2E  
                   l1887 09B6                     l1879 0946                     l1799 199C  
                   l1975 14FA                     l1959 1476                     l1967 14BA  
                   l1991 0B8E                     l1983 0B66                     l1897 0A52  
                   l1889 09DA                     l1969 14CA                     l1977 1BB4  
                   l1993 0B9E                     l1985 0B66                     l1899 0A78  
                   l1979 1A2C                     l1995 0BAC                     l1987 0B6A  
                   l1997 0BBC                     l1989 0B82                     l1999 0BC0  
                   STR_1 0686                     STR_2 066B                     STR_3 0693  
                   STR_4 063E                     STR_5 06C4                     STR_6 06C0  
                   STR_7 062E                     STR_8 064E                     STR_9 061B  
                   u1000 1BFC                     u1001 1BF8                     u2000 0C74  
                   u2001 0C70                     u2010 0C82                     u2011 0C7E  
                   u2100 0FC6                     u2020 0C98                     u2101 0FC2  
                   u2021 0C94                     u1310 07CE                     u1230 06E6  
                   u2030 0CAE                     u2110 1762                     u1311 07CA  
                   u1231 06E2                     u2031 0CAA                     u2111 175E  
                   u2200 155A                     u1400 08D8                     u1320 07E8  
                   u1304 07A2                     u1240 06F8                     u2040 0CCC  
                   u2120 1784                     u2201 1556                     u1401 08D4  
                   u1321 07E4                     u1305 079E                     u1241 06F4  
                   u2041 0CC8                     u2121 1780                     u2210 1578  
                   u2050 0CDA                     u2130 17A6                     u2211 1574  
                   u2051 0CD6                     u2131 17A2                     u2220 1594  
                   u2060 0CFA                     u2140 18AA                     u2300 0D5E  
                   u2221 1590                     u2061 0CF6                     u2141 18A6  
                   u2301 0D5A                     u2230 15BA                     u1414 08EA  
                   u1350 0846                     u1334 07FA                     u1270 0756  
                   u1254 070A                     u1430 19E4                     u2070 0EB8  
                   u1510 1284                     u2150 18BE                     u2310 0D72  
                   u2231 15B6                     u1415 08E6                     u1351 0842  
                   u1335 07F6                     u1271 0752                     u1255 0706  
                   u1431 19E0                     u2071 0EB4                     u1511 1280  
                   u2151 18BA                     u2311 0D6E                     u2240 1692  
                   u1600 09B6                     u1424 090A                     u1360 0860  
                   u1344 081A                     u1280 0770                     u1264 072A  
                   u1440 199A                     u2080 0F82                     u1504 1252  
                   u2160 18D4                     u2320 0D86                     u2241 168E  
                   u1601 09B2                     u1425 0906                     u1361 085C  
                   u1345 0816                     u1281 076C                     u1265 0726  
                   u1441 1996                     u2081 0F7E                     u1505 124E  
                   u2161 18D0                     u2321 0D82                     u2250 16AC  
                   u2090 0FA4                     u1530 12CC                     u1450 11B0  
                   u2170 18EA                     u2330 0E94                     u2251 16A8  
                   u2091 0FA0                     u1531 12C8                     u1451 11AC  
                   u2171 18E6                     u2331 0E90                     u2180 151A  
                   u2260 16C6                     u1524 129A                     u2181 1516  
                   u2261 16C2                     u1525 1296                     u2190 1534  
                   u2270 16E4                     u1710 0B0C                     u1630 0A1C  
                   u1614 09CC                     u1550 0934                     u1390 08BE  
                   u1374 0872                     u1294 0782                     u1470 11F4  
                   u2191 1530                     u2271 16E0                     u1711 0B08  
                   u1631 0A18                     u1615 09C8                     u1551 0930  
                   u1391 08BA                     u1375 086E                     u1295 077E  
                   u1471 11F0                     u2280 16FA                     u1720 0B1E  
                   u1704 0AE0                     u1640 0A2E                     u1624 09F0  
                   u1560 0946                     u1384 0892                     u1544 12E2  
                   u1464 11C2                     u1800 13BE                     u2281 16F6  
                   u1721 0B1A                     u1705 0ADC                     u1641 0A2A  
                   u1625 09EC                     u1561 0942                     u1385 088E  
                   u1545 12DE                     u1465 11BE                     u1801 13BA  
                   u2290 171E                     u1490 123C                     u2291 171A  
                   u1491 1238                     u1900 14FA                     u1484 120A  
                   u1820 1408                     u1901 14F6                     u1485 1206  
                   u1821 1404                     u1734 0B34                     u1670 0A94  
                   u1654 0A44                     u1590 09A4                     u1574 0958  
                   u1750 1ACA                     u1830 142A                     u1814 13DA  
                   u1910 0B82                     u1735 0B30                     u1671 0A90  
                   u1655 0A40                     u1591 09A0                     u1575 0954  
                   u1751 1AC6                     u1831 1426                     u1815 13D4  
                   u1911 0B7E                     u1744 0B58                     u1680 0AA6  
                   u1664 0A68                     u1584 0978                     u1840 1444  
                   u1760 132A                     u1920 0B9E                     u1745 0B54  
                   u1681 0AA2                     u1665 0A64                     u1585 0974  
                   u1841 1440                     u1761 1326                     u1921 0B9A  
                   u1850 1466                     u1930 0BAC                     u1851 1462  
                   u1931 0BA8                     u1860 1488                     u1780 137A  
                   u1940 0BCE                     u1861 1484                     u1781 1376  
                   u1941 0BCA                     u1694 0ABC                     u1870 14AA  
                   u1774 134A                     u1950 0BF0                     u1695 0AB8  
                   u1871 14A6                     u1775 1344                     u1951 0BEC  
                   u1880 14CA                     u1960 0C12                     u1881 14C6  
                   u1961 0C0E                     u1890 14DA                     u1794 1392  
                   u1970 0C3A                     u1891 14D6                     u1795 138C  
                   u1971 0C36                     u1980 0C48                     u1981 0C44  
                   u1990 0C5A                     u1991 0C56                     _main 0D12  
                   _keys 0019         ??_PulseClockData 002B                     start 0000  
        pushNibble@value 0030             ___param_bank 000000   __end_of_pulseEnablePin 1A2C  
                  ??_lcd 0039                    ?_main 0025          __end_of___awdiv 15CC  
                  STR_10 0679                    STR_11 065D                    STR_20 06B0  
                  STR_12 064E                    STR_13 06A7                    STR_14 06B9  
                  STR_15 06B3                    STR_16 06B0                    STR_17 069E  
                  STR_18 06B9                    STR_19 06B3          __end_of___awmod 1730  
                  _T0CON 000FD5          ___awdiv@divisor 0027          ___awdiv@counter 0029  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 1BEE          __end_of_lcdInit 1680  
                  _cafes 1B90                    _cappu 0009            ??_ImprimeCafe 0039  
                  _antes 003F                    _latte 0005          __end_of_pinMode 0B66  
                  _valor 0601                    _start 0024          __end_of_soWrite 19EA  
                  tablat 000FF5          __end_of_ssdInit 1946          __end_of_termina 17C4  
                  status 000FD8             pushNibble@rs 002E     __end_of_digitalWrite 0918  
        __initialization 1B20          ?_pulseEnablePin 0025             __end_of_main 0EA6  
                 ??_main 003B            __activetblptr 000002     __size_of_digitalRead 016A  
                 ?_cafes 0025                   _ADCON1 000FC1         ___awdiv@dividend 0025  
                 _INTCON 000FF2      __end_of_ImprimeCafe 1508                ??___awdiv 0029  
              ??___awmod 0031                   _kpInit 1A6A                   _kpRead 1BFE  
                 _atraso 17C4                   clear_0 1B38                   _soInit 1A2C  
       ___awdiv@quotient 002B          ___awmod@divisor 002F                ??_lcdChar 0032  
                 isa$std 000001                ??_lcdInit 0033          ___awmod@counter 0031  
       __end_of_ssdDigit 18F0             __pdataCOMRAM 003F                ??_pinMode 0029  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 002D                ??_ssdInit 002B  
       __end_of_pushByte 1898                ??_termina 0039               __accesstop 0080  
__end_of__initialization 1B3E            ___rparam_used 000001            pushByte@value 0031  
            pinMode@type 0027           __pcstackCOMRAM 0025            __end_of_cafes 1BB2  
          __end_of_valor 0611       __size_of_delayMili 0030       __size_of_leTeclado 01AC  
     __size_of_lcdString 0056                  ??_cafes 0025              _ImprimeCafe 1434  
  __size_of_digitalWrite 024E               _delayMicro 1C10               _lcdCommand 1BB2  
                ?_kpInit 0025                  ?_kpRead 0025                  ?_atraso 0025  
                ?_soInit 0025               _kpDebounce 12FE       __size_of_timerInit 0008  
     __size_of_timerWait 0010       __size_of_ssdUpdate 016C             _digitalWrite 06CA  
      __end_of_delayMili 1ACC         ??_pulseEnablePin 002B        __end_of_leTeclado 0D12  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0033  
      __end_of_lcdString 199C          kpDebounce@tempo 0022                  ___awdiv 1508  
                ___awmod 1680                ?_pushByte 002E             __psmallconst 0600  
        __size_of_kpInit 0032          __size_of_kpRead 000A                  _charKey 0611  
        __size_of_atraso 007A              ssdDigit@val 0034              ssdDigit@pos 0033  
                _caseiro 0011                  __pcinit 1B20                  _lcdChar 1BD0  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 15CC  
                __ptext0 0D12                  __ptext1 1BEE                  __ptext2 1B6E  
                __ptext3 1C08                  __ptext4 1730                  __ptext5 17C4  
                __ptext6 1028                  __ptext7 18F0                  __ptext8 1898  
                __ptext9 0B66                  _display 0021                  _escolha 0023  
           __size_of_lcd 0182                  _pinMode 0918         ___awmod@dividend 002D  
             delayMili@a 0025               delayMili@i 0028                  _soWrite 199C  
                _ssdInit 18F0                  _termina 1730                  atraso@N 0025  
                atraso@h 0026                  atraso@i 0029                  atraso@j 0027  
                atraso@k 0028     end_of_initialization 1B3E            ?_PulseEnClock 0025  
          __Lmediumconst 0000           digitalRead@pin 0025           leTeclado@tecla 0033  
            ?_delayMicro 0025        __end_of_timerInit 1C10        __end_of_timerWait 1BFE  
      __end_of_ssdUpdate 1194               ??_ssdDigit 0034              ?_lcdCommand 0025  
                postinc0 000FEE               ??_pushByte 0030  __size_of_PulseClockData 002A  
          ??_digitalRead 0027               _timerReset 1B6E              ?_kpDebounce 0025  
             _pushNibble 1B48               lcdString@i 0037           ??_PulseEnClock 002B  
          __pidataCOMRAM 1C12           __end_of_kpInit 1A9C           __end_of_kpRead 1C08  
         __end_of_atraso 183E           __end_of_soInit 1A6A      __size_of_delayMicro 0002  
    start_initialization 1B20      __end_of_digitalRead 12FE              __end_of_lcd 1028  
           ?_ImprimeCafe 0025      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
      kpDebounce@oldRead 0015        kpDebounce@newRead 0017                 ??_kpInit 002B  
               ??_kpRead 0027                 ??_atraso 0025              ?_timerReset 0025  
               ??_soInit 002B              __pbssCOMRAM 0001              ?_pushNibble 002E  
             pinMode@pin 0025                _delayMili 1A9C                _leTeclado 0B66  
               ?___awdiv 0025                 ?___awmod 002D        __size_of_ssdDigit 0058  
         _PulseClockData 1AF6     __end_of_PulseEnClock 1AF6                _lcdString 1946  
            _digitalRead 1194                 ?_lcdChar 0025        __size_of_pushByte 005A  
               ?_lcdInit 0025              __smallconst 0600                _escolhido 0001  
               ?_pinMode 0025                 ?_soWrite 002B                 ?_ssdInit 0025  
               ?_termina 0025           __size_of_cafes 0022      __size_of_timerReset 0022  
           ??_delayMicro 0027               ?_delayMili 0025   __end_of_PulseClockData 1B20  
             ?_leTeclado 0025      __size_of_pushNibble 0026             ??_lcdCommand 0032  
              _timerInit 1C08                _timerWait 1BEE                _ssdUpdate 1028  
             ?_lcdString 0033             ??_kpDebounce 002E          lcdCommand@value 0032  
              main@tempo 003D       __end_of_delayMicro 1C12         timerReset@ciclos 0027  
     __end_of_lcdCommand 1BD0               pushByte@rs 002E             lcdChar@value 0032  
   __size_of_ImprimeCafe 00D4       __end_of_kpDebounce 1434                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 0025               ?_timerInit 0025  
             ?_timerWait 0025               ?_ssdUpdate 0025         __size_of___awdiv 00C4  
       __size_of___awmod 00B0  __size_of_pulseEnablePin 0042         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E                 __ptext10 1BFE  
               __ptext11 12FE                 __ptext20 1BD0                 __ptext12 1194  
               __ptext21 183E                 __ptext13 15CC                 __ptext30 0918  
               __ptext22 199C                 __ptext14 1B48                 __ptext31 1B90  
               __ptext23 1ACC                 __ptext15 0EA6                 __ptext32 1680  
               __ptext24 1AF6                 __ptext16 1BB2                 __ptext33 1508  
               __ptext25 19EA                 __ptext17 1A9C                 __ptext26 06CA  
               __ptext18 1434                 __ptext27 1C10                 __ptext19 1946  
               __ptext28 1A6A                 __ptext29 1A2C         __size_of_soWrite 004E  
       __size_of_ssdInit 0056         __size_of_termina 0094            __size_of_main 0194  
               _expresso 000D              ??_delayMili 0027    __size_of_PulseEnClock 002A  
               _ssdDigit 1898              delayMicro@a 0025                 isa$xinst 000000  
            ??_leTeclado 0033             soWrite@value 002B                 _pushByte 183E  
            ??_lcdString 0035             ??_timerReset 0027                 main@slot 003E  
        timerReset@tempo 0025             ??_pushNibble 0030            ?_digitalWrite 0025  
           _PulseEnClock 1ACC        digitalWrite@value 0027       __end_of_timerReset 1B90  
               soWrite@i 002D              ??_timerInit 0025              ??_timerWait 0025  
            ??_ssdUpdate 002E       __end_of_pushNibble 1B6E             ?_digitalRead 0025  
            kpDebounce@i 0031           ??_digitalWrite 0029          digitalWrite@pin 0025  
